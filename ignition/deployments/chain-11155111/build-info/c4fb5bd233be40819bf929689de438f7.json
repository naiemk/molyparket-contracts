{
  "id": "c4fb5bd233be40819bf929689de438f7",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@deeptrust/contracts/dtn-defaults.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./idtn-ai.sol\";\n\nlibrary DtnDefaults {\n    function defaultRoutingSystemValidatedAny() internal pure returns (IDtnAi.DtnRouting memory) {\n        bytes32[] memory namespaces = new bytes32[](1);\n        namespaces[0] = keccak256(abi.encode(\"trust.system.authored\"));\n        \n        return IDtnAi.DtnRouting({\n            trustNamespaceIds: namespaces,\n            trustedNodeIds: new bytes32[](0),\n            redundancy: 1,\n            confidenceLevel: 8,\n            aggregationType: IDtnAi.AggregationType.ANY\n        });\n    }\n\n    function defaultCustomNodesValidatedAny(bytes32[] memory customNodes) internal pure returns (IDtnAi.DtnRouting memory) {\n        bytes32[] memory namespaces = new bytes32[](0);\n        \n        return IDtnAi.DtnRouting({\n            trustNamespaceIds: namespaces,\n            trustedNodeIds: customNodes,\n            redundancy: 1,\n            confidenceLevel: 8,\n            aggregationType: IDtnAi.AggregationType.ANY\n        });\n    }\n\n    function singleArray(bytes32 value) internal pure returns (bytes32[] memory) {\n        bytes32[] memory array = new bytes32[](1);\n        array[0] = value;\n        return array;\n    }\n\n    function singleArray(string memory value) internal pure returns (string[] memory) {\n        string[] memory array = new string[](1);\n        array[0] = value;\n        return array;\n    }\n\n    uint256 public constant ROUTING_SYSTEM_VALIDATED_ANY_CONSTANT = 1;\n}\n"
      },
      "@deeptrust/contracts/idtn-ai.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IDtnAiModels {\n    function modelId(string memory modelName) external view returns (bytes32);\n}\n\n/**\n * @title IDtnAi\n * @notice Interface for DtnAI, defining the core AI interaction methods\n */\ninterface IDtnAi is IDtnAiModels {\n    /**\n     * @notice Represents different types of AI call responses\n     */\n    enum CallType {\n        IPFS,      // Response will be stored on IPFS\n        DIRECT     // Response will be returned directly\n    }\n\n    enum AggregationType {\n        ANY,\n        ALL,\n        SELECT_BEST,\n        VOTE,\n        RANK\n    }\n\n    /**\n     * @notice Structure for AI request parameters\n     */\n    struct DtnRequest {\n        bytes call;     // Encoded call data according to the model API\n        bytes extraParams; // Extra parameters for the call, used as parameters for the call\n        CallType calltype;  // Type of response expected\n        uint256 feePerByteReq; // Fee per byte for request size\n        uint256 feePerByteRes; // Fee per byte for response size\n        uint256 totalFeePerRes; // Maximum total fee for response\n    }\n\n    struct DtnRouting {\n        bytes32[] trustNamespaceIds;\n        bytes32[] trustedNodeIds; // Allows to specify a list of trusted nodes to answer the request\n        uint32 redundancy; // How many nodes will answer the same request\n        uint8 confidenceLevel; // 0 - 10\n        AggregationType aggregationType;\n    }\n\n    /**\n     * @notice Structure for AI response\n     */\n    struct Response {\n        ResponseStatus status;      // Response status code\n        string message;      // Additional message or error details\n        bytes response;     // The actual response data (abi encoded)\n        bytes32 nodeId;      // ID of the node that provided the response\n        uint256 timestamp;   // When the response was provided\n    }\n\n    /**\n     * @notice Callback structure for handling AI responses\n     */\n    struct CallBack {\n        bytes4 success;     // Function selector for successful response\n        bytes4 failure;     // Function selector for failed response\n        address target;     // Contract to call back\n    }\n\n    enum ResponseStatus {\n        NA,\n        SUCCESS,\n        FAILURE\n    }\n\n    /**\n     * @notice Starts a new user session with specified token amount\n     * @return sessionId Unique identifier for the created session\n     */\n    function startUserSession() external returns (uint256 sessionId);\n\n    /**\n     * @notice Closes an active user session\n     * @param sessionId ID of the session to close\n     */\n    function closeUserSession(uint256 sessionId) external;\n\n    /**\n     * @notice Makes an AI request\n     * @param sessionId Active session ID\n     * @param modelId ID of the AI model to use\n     * @param routingSystem Routing system configuration\n     * @param dtnRequest Request parameters including call data and type\n     * @param callback Callback information for handling response\n     * @param user Address of the user making the request\n     * @param callbackGas Gas limit for callback execution\n     * @return requestId Unique identifier for the request\n     */\n    function request(\n        uint256 sessionId,\n        bytes32 modelId,\n        IDtnAi.DtnRouting memory routingSystem,\n        IDtnAi.DtnRequest memory dtnRequest,\n        IDtnAi.CallBack memory callback,\n        address user,\n        uint256 callbackGas\n    ) external payable returns (bytes32 requestId);\n\n    /**\n     * @notice Fetches the response from the last AI request\n     * @return status Response status\n     * @return message Additional message or error details\n     * @return response The actual response data\n     */\n    function fetchResponse(bytes32 requestId) external view returns (\n        ResponseStatus status,\n        string memory message,\n        bytes memory response\n    );\n\n    /**\n     * @notice Responds to an AI request\n     * @param requestId The ID of the request to respond to\n     * @param status The status of the response (0 for success)\n     * @param message Additional message or error details\n     * @param response The actual response data\n     * @param nodeId The ID of the responding node\n     * @param requestSize Size of request in bytes\n     * @param responseSize Size of response in bytes\n     */\n    function respondToRequest(\n        bytes32 requestId,\n        ResponseStatus status,\n        string memory message,\n        bytes memory response,\n        bytes32 nodeId,\n        uint256 requestSize,\n        uint256 responseSize\n    ) external;\n\n    function feeToken() external view returns (address);\n\n    function feeTarget() external view returns (address);\n}\n\n"
      },
      "@deeptrust/contracts/with-dtn-ai.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport {IDtnAi} from \"./idtn-ai.sol\";\n\n/**\n * @title WithDtnAi\n * @notice Implement this interface to use DtnAI\n */\nabstract contract WithDtnAi  {\n    IDtnAi public ai;\n\n    modifier onlyDtn() {\n        require(msg.sender == address(ai), \"Only Dtn can call this function\");\n        _;\n    }\n\n    function setAi(address _ai) internal {\n        ai = IDtnAi(_ai);\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/BetResolver.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@deeptrust/contracts/idtn-ai.sol\";\nimport \"@deeptrust/contracts/dtn-defaults.sol\";\nimport \"@deeptrust/contracts/with-dtn-ai.sol\";\n\nimport \"./IBetResolver.sol\";\n\n/**\n * @title BetResolver (custom-nodes-only routing)\n * @notice Resolves bets via DtnAI. The target model must return exactly \"true\" | \"false\" | \"inconclusive\".\n * @dev\n *  - Uses OpenZeppelin Ownable, ReentrancyGuard, SafeERC20.\n *  - Uses ONLY DtnDefaults.defaultCustomNodesValidatedAny(nodes) for routing.\n *  - Exposes restartSession() that forwards this contract's fee-token balance to DtnAI feeTarget and opens a session.\n *  - Resolution result is stored on-chain; does not handle escrow/payouts.\n */\ncontract BetResolver is WithDtnAi, Ownable, IBetResolver {\n    using SafeERC20 for IERC20;\n\n    // ----- Bet model -----\n\n    struct Bet {\n        bytes32 requestId;\n        Outcome outcome;\n        bytes4 onResolve;\n        string aiRawResult;       // raw model return (\"true\"|\"false\"|\"inconclusive\")\n        string aiError;\n    }\n\n    // ----- Storage -----\n    address public betMarket;\n    mapping(uint256 => Bet) public bets;\n    mapping(bytes32 => uint256) public requestToBet;\n\n    // DtnAI session management\n    uint256 public sessionId;\n\n    // Inference configuration\n    string public systemPrompt1; // wrapper line 0 for each resolve call\n    string public systemPrompt2; // wrapper  last line for each resolve call\n    string public modelName;    // e.g., \"model.system.openai-gpt-o3-simpletext\"\n    string public nodeName;     // REQUIRED: e.g., \"node.tester.node1\"\n\n    // Fees (feeToken decimals)\n    uint256 public feePerByteReq = 1_000_000_000_000_000;          // 0.001 * 1e18\n    uint256 public feePerByteRes = 1_000_000_000_000_000;          // 0.001 * 1e18\n    uint256 public totalFeePerRes = 1_000_000_000_000_000_000;     // 1 * 1e18\n    uint256 public resolutionGasLimit = 400_000;\n\n    // ----- Events -----\n    event ResolveRequested(uint256 indexed betId, bytes32 indexed requestId);\n    event BetResolved(uint256 indexed betId, Outcome outcome, string rawResult);\n    event BetResolutionFailed(uint256 indexed betId, bytes32 indexed requestId, string message);\n    event BetResolutionCallbackFailed(uint256 indexed betId, bytes32 indexed requestId, bytes data);\n    event SessionRestarted(uint256 sessionId, uint256 fundedAmount);\n    event ConfigUpdated(address dtnAi, string systemPrompt1, string systemPrompt2, string modelName, string nodeName);\n    event FeesUpdated(uint256 feePerByteReq, uint256 feePerByteRes, uint256 totalFeePerRes, uint256 resolutionGasLimit);\n\n    constructor(address owner) Ownable(owner) {\n    }\n\n    function configure(\n        address _betMarket,\n        address _dtnAi,\n        string memory _systemPrompt1,\n        string memory _systemPrompt2,\n        string memory _modelName,\n        string memory _nodeName\n    ) external onlyOwner {\n        setAi(_dtnAi);\n        betMarket = _betMarket;\n        systemPrompt1 = _systemPrompt1;\n        systemPrompt2 = _systemPrompt2;\n        modelName = _modelName;\n        nodeName = _nodeName;\n        emit ConfigUpdated(_dtnAi, _systemPrompt1, _systemPrompt2, _modelName, _nodeName);\n    }\n\n    function setFees(uint256 _feePerByteReq, uint256 _feePerByteRes, uint256 _totalFeePerRes, uint256 _resolutionGasLimit) external onlyOwner {\n        feePerByteReq = _feePerByteReq;\n        feePerByteRes = _feePerByteRes;\n        totalFeePerRes = _totalFeePerRes;\n        resolutionGasLimit = _resolutionGasLimit;\n        emit FeesUpdated(_feePerByteReq, _feePerByteRes, _totalFeePerRes, _resolutionGasLimit);\n    }\n\n    /**\n     * @notice Starts (or restarts) a DtnAI user session using this contract’s entire fee-token balance.\n     * @dev Send the fee token to this contract first; this function forwards the full balance to `feeTarget()`.\n     */\n    function restartSession() public onlyOwner {\n        if (sessionId != 0) {\n            ai.closeUserSession(sessionId);\n        }\n\n        address tokenAddr = ai.feeToken();\n        IERC20 token = IERC20(tokenAddr);\n        uint256 amount = token.balanceOf(address(this));\n        require(amount > 0, \"No fee tokens\");\n\n        token.safeTransfer(ai.feeTarget(), amount);\n        sessionId = ai.startUserSession();\n        emit SessionRestarted(sessionId, amount);\n    }\n\n    /**\n     * @notice Triggers AI resolution for a bet that has passed its close time.\n     * @param betId The bet to resolve.\n     * @param betPrompt The prompt for the bet.\n     * @param onResolve The callback function to call when the bet is resolved. The function should have the following signature:\n     *   onResolve(uint256 betId, Outcome outcome)\n     * @dev Send ETH with {value: ...} if the DtnAI deployment requires it for callback gas.\n     */\n    function resolve(uint256 betId, string memory betPrompt, bytes4 onResolve) external payable {\n        require(betId > 0, \"invalid betId\");\n        require(bytes(betPrompt).length > 0, \"invalid betPrompt\");\n        require(onResolve != bytes4(0), \"invalid onResolve\");\n        require(msg.sender == betMarket, \"invalid sender\");\n        require(msg.value >= resolutionGasLimit, \"insufficient gas\");\n\n        // Build prompt lines: [systemPrompt, question]\n        string[] memory prompt_lines = new string[](3);\n        prompt_lines[0] = systemPrompt1;\n        prompt_lines[1] = betPrompt;\n        prompt_lines[2] = systemPrompt2;\n\n        // ---- ROUTING: custom nodes only ----\n        bytes32[] memory nodes = new bytes32[](1);\n        nodes[0] = keccak256(abi.encodePacked(nodeName));\n        IDtnAi.DtnRouting memory routing =\n            DtnDefaults.defaultCustomNodesValidatedAny(nodes);\n\n        // Build request\n        IDtnAi.DtnRequest memory req = IDtnAi.DtnRequest({\n            call: abi.encode(prompt_lines),      // text call expects encoded lines\n            extraParams: \"\",                     // not using typed extra params in this resolver\n            calltype: IDtnAi.CallType.DIRECT,    // expect direct string response\n            feePerByteReq: feePerByteReq,\n            feePerByteRes: feePerByteRes,\n            totalFeePerRes: totalFeePerRes\n        });\n\n        IDtnAi.CallBack memory cb = IDtnAi.CallBack({\n            success: this.callbackResolve.selector,\n            failure: this.callbackResolveError.selector,\n            target: address(this)\n        });\n\n        // Resolve model id via registry if available; fallback to keccak(name)\n        bytes32 modelId = keccak256(abi.encodePacked(modelName));\n\n        // Submit request\n        bytes32 requestId = ai.request{value: msg.value}(\n            sessionId,\n            modelId,\n            routing,\n            req,\n            cb,\n            msg.sender,   // gas refund address\n            resolutionGasLimit\n        );\n\n        // Update bet state\n        requestToBet[requestId] = betId;\n        bets[betId] = Bet({\n            requestId: requestId,\n            outcome: Outcome.Unknown,\n            onResolve: onResolve,\n            aiRawResult: \"\",\n            aiError: \"\"\n        });\n\n        emit ResolveRequested(betId, requestId);\n    }\n\n    // ----- AI Callbacks (guarded by onlyDtn + nonReentrant) -----\n    function callbackResolve(bytes32 _requestId) external onlyDtn {\n        (, , bytes memory response) = ai.fetchResponse(_requestId);\n        // Expect abi-encoded string: \"true\" | \"false\" | \"inconclusive\"\n        string memory raw = abi.decode(response, (string));\n\n        Outcome out = _parseOutcome(raw);\n        uint256 betId = requestToBet[_requestId];\n        Bet storage b = bets[betId];\n        bytes4 onResolve = b.onResolve;\n        b.outcome = out;\n        b.aiRawResult = raw;\n\n        (bool success, bytes memory data) = address(betMarket).call(abi.encodeWithSelector(onResolve, betId, out));\n        if (!success) {\n            emit BetResolutionCallbackFailed(betId, _requestId, data);\n        }\n        emit BetResolved(betId, out, raw);\n    }\n\n    function callbackResolveError(bytes32 _requestId) external onlyDtn {\n        (, string memory message, ) = ai.fetchResponse(_requestId);\n\n        uint256 betId = requestToBet[_requestId];\n        Bet storage b = bets[betId];\n        b.aiError = message;\n\n        emit BetResolutionFailed(betId, _requestId, message);\n    }\n\n    // ----- Pure helpers -----\n    // Option 2: compare common casings directly (gas-cheap; no lowercase conversion).\n    function _parseOutcome(string memory s) internal pure returns (Outcome) {\n        bytes32 h = keccak256(bytes(s));\n        if (\n            h == keccak256(\"true\")  || h == keccak256(\"True\")  || h == keccak256(\"TRUE\")\n        ) return Outcome.True;\n\n        if (\n            h == keccak256(\"false\") || h == keccak256(\"False\") || h == keccak256(\"FALSE\")\n        ) return Outcome.False;\n\n        return Outcome.Inconclusive;\n    }\n}\n"
      },
      "contracts/IBetResolver.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IBetResolver {\n    enum Outcome { Unknown, True, False, Inconclusive }\n\n    /**\n     * @notice Requests to resolve a bet.\n     * @param betPrompt The prompt for the bet.\n     * @param onResolve The callback function to call when the bet is resolved. The function should have the following signature:\n     *   onResolve(uint256 betId, Outcome outcome)\n     */\n    function resolve(\n        uint256 betId,\n        string memory betPrompt,\n        bytes4 onResolve) external payable;\n}"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@deeptrust/contracts/dtn-defaults.sol": {
        "ast": {
          "absolutePath": "@deeptrust/contracts/dtn-defaults.sol",
          "exportedSymbols": {
            "DtnDefaults": [
              138
            ],
            "IDtnAi": [
              293
            ],
            "IDtnAiModels": [
              148
            ]
          },
          "id": 139,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "absolutePath": "@deeptrust/contracts/idtn-ai.sol",
              "file": "./idtn-ai.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 139,
              "sourceUnit": 294,
              "src": "57:23:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DtnDefaults",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 138,
              "linearizedBaseContracts": [
                138
              ],
              "name": "DtnDefaults",
              "nameLocation": "90:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "201:395:0",
                    "statements": [
                      {
                        "assignments": [
                          12
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12,
                            "mutability": "mutable",
                            "name": "namespaces",
                            "nameLocation": "228:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 45,
                            "src": "211:27:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 10,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "211:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 11,
                              "nodeType": "ArrayTypeName",
                              "src": "211:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 16,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "255:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 15,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "241:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 13,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "245:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 14,
                              "nodeType": "ArrayTypeName",
                              "src": "245:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "241:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "211:46:0"
                      },
                      {
                        "expression": {
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 19,
                              "name": "namespaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "267:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 21,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "278:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "267:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "74727573742e73797374656d2e617574686f726564",
                                    "id": 25,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "304:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8f411260b18c2b6b01ea745b0e2c9ff696698783950dbff74151f0302d71f542",
                                      "typeString": "literal_string \"trust.system.authored\""
                                    },
                                    "value": "trust.system.authored"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8f411260b18c2b6b01ea745b0e2c9ff696698783950dbff74151f0302d71f542",
                                      "typeString": "literal_string \"trust.system.authored\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 23,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "293:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 24,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "297:6:0",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "293:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 26,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "293:35:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 22,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "283:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "283:46:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "267:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 29,
                        "nodeType": "ExpressionStatement",
                        "src": "267:62:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32,
                              "name": "namespaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "406:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 36,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "460:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 35,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "446:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes32[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 33,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "450:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 34,
                                  "nodeType": "ArrayTypeName",
                                  "src": "450:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                    "typeString": "bytes32[]"
                                  }
                                }
                              },
                              "id": 37,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "446:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 38,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "488:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "38",
                              "id": 39,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "520:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 40,
                                  "name": "IDtnAi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "552:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                    "typeString": "type(contract IDtnAi)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "559:15:0",
                                "memberName": "AggregationType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 161,
                                "src": "552:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AggregationType_$161_$",
                                  "typeString": "type(enum IDtnAi.AggregationType)"
                                }
                              },
                              "id": 42,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "575:3:0",
                              "memberName": "ANY",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 156,
                              "src": "552:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AggregationType_$161",
                                "typeString": "enum IDtnAi.AggregationType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              {
                                "typeIdentifier": "t_enum$_AggregationType_$161",
                                "typeString": "enum IDtnAi.AggregationType"
                              }
                            ],
                            "expression": {
                              "id": 30,
                              "name": "IDtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "355:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                "typeString": "type(contract IDtnAi)"
                              }
                            },
                            "id": 31,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "362:10:0",
                            "memberName": "DtnRouting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 190,
                            "src": "355:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DtnRouting_$190_storage_ptr_$",
                              "typeString": "type(struct IDtnAi.DtnRouting storage pointer)"
                            }
                          },
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "387:17:0",
                            "430:14:0",
                            "476:10:0",
                            "503:15:0",
                            "535:15:0"
                          ],
                          "names": [
                            "trustNamespaceIds",
                            "trustedNodeIds",
                            "redundancy",
                            "confidenceLevel",
                            "aggregationType"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "355:234:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                            "typeString": "struct IDtnAi.DtnRouting memory"
                          }
                        },
                        "functionReturnParameters": 7,
                        "id": 44,
                        "nodeType": "Return",
                        "src": "348:241:0"
                      }
                    ]
                  },
                  "id": 46,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultRoutingSystemValidatedAny",
                  "nameLocation": "117:32:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "149:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "175:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                          "typeString": "struct IDtnAi.DtnRouting"
                        },
                        "typeName": {
                          "id": 5,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4,
                            "name": "IDtnAi.DtnRouting",
                            "nameLocations": [
                              "175:6:0",
                              "182:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 190,
                            "src": "175:17:0"
                          },
                          "referencedDeclaration": 190,
                          "src": "175:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRouting_$190_storage_ptr",
                            "typeString": "struct IDtnAi.DtnRouting"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "174:26:0"
                  },
                  "scope": 138,
                  "src": "108:488:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 77,
                    "nodeType": "Block",
                    "src": "721:318:0",
                    "statements": [
                      {
                        "assignments": [
                          59
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 59,
                            "mutability": "mutable",
                            "name": "namespaces",
                            "nameLocation": "748:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 77,
                            "src": "731:27:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 57,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "731:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 58,
                              "nodeType": "ArrayTypeName",
                              "src": "731:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 65,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "775:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "761:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 60,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "765:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 61,
                              "nodeType": "ArrayTypeName",
                              "src": "765:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "761:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "731:46:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 68,
                              "name": "namespaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "854:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "id": 69,
                              "name": "customNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "894:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "931:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "38",
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "963:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 72,
                                  "name": "IDtnAi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "995:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                    "typeString": "type(contract IDtnAi)"
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1002:15:0",
                                "memberName": "AggregationType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 161,
                                "src": "995:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AggregationType_$161_$",
                                  "typeString": "type(enum IDtnAi.AggregationType)"
                                }
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1018:3:0",
                              "memberName": "ANY",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 156,
                              "src": "995:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AggregationType_$161",
                                "typeString": "enum IDtnAi.AggregationType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              {
                                "typeIdentifier": "t_enum$_AggregationType_$161",
                                "typeString": "enum IDtnAi.AggregationType"
                              }
                            ],
                            "expression": {
                              "id": 66,
                              "name": "IDtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "803:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                "typeString": "type(contract IDtnAi)"
                              }
                            },
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "810:10:0",
                            "memberName": "DtnRouting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 190,
                            "src": "803:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DtnRouting_$190_storage_ptr_$",
                              "typeString": "type(struct IDtnAi.DtnRouting storage pointer)"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "835:17:0",
                            "878:14:0",
                            "919:10:0",
                            "946:15:0",
                            "978:15:0"
                          ],
                          "names": [
                            "trustNamespaceIds",
                            "trustedNodeIds",
                            "redundancy",
                            "confidenceLevel",
                            "aggregationType"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "803:229:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                            "typeString": "struct IDtnAi.DtnRouting memory"
                          }
                        },
                        "functionReturnParameters": 54,
                        "id": 76,
                        "nodeType": "Return",
                        "src": "796:236:0"
                      }
                    ]
                  },
                  "id": 78,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultCustomNodesValidatedAny",
                  "nameLocation": "611:30:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "customNodes",
                        "nameLocation": "659:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "642:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 47,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "642:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 48,
                          "nodeType": "ArrayTypeName",
                          "src": "642:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "641:30:0"
                  },
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "695:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                          "typeString": "struct IDtnAi.DtnRouting"
                        },
                        "typeName": {
                          "id": 52,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 51,
                            "name": "IDtnAi.DtnRouting",
                            "nameLocations": [
                              "695:6:0",
                              "702:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 190,
                            "src": "695:17:0"
                          },
                          "referencedDeclaration": 190,
                          "src": "695:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRouting_$190_storage_ptr",
                            "typeString": "struct IDtnAi.DtnRouting"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "694:26:0"
                  },
                  "scope": 138,
                  "src": "602:437:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "1122:106:0",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "array",
                            "nameLocation": "1149:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 105,
                            "src": "1132:22:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 88,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "1132:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 89,
                              "nodeType": "ArrayTypeName",
                              "src": "1132:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 96,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1171:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1157:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 91,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "1161:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 92,
                              "nodeType": "ArrayTypeName",
                              "src": "1161:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1157:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1132:41:0"
                      },
                      {
                        "expression": {
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 97,
                              "name": "array",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1183:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 99,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1189:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1183:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 100,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "1194:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1183:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1183:16:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "name": "array",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1216:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "functionReturnParameters": 85,
                        "id": 104,
                        "nodeType": "Return",
                        "src": "1209:12:0"
                      }
                    ]
                  },
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "singleArray",
                  "nameLocation": "1054:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1074:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1066:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1066:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1065:15:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1104:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 82,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1104:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 83,
                          "nodeType": "ArrayTypeName",
                          "src": "1104:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:0"
                  },
                  "scope": 138,
                  "src": "1045:183:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1316:104:0",
                    "statements": [
                      {
                        "assignments": [
                          118
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 118,
                            "mutability": "mutable",
                            "name": "array",
                            "nameLocation": "1342:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 133,
                            "src": "1326:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 116,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1326:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 117,
                              "nodeType": "ArrayTypeName",
                              "src": "1326:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 124,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1363:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1350:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 119,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1354:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 120,
                              "nodeType": "ArrayTypeName",
                              "src": "1354:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1326:39:0"
                      },
                      {
                        "expression": {
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 125,
                              "name": "array",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "1375:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1381:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1375:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 128,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "1386:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1375:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1375:16:0"
                      },
                      {
                        "expression": {
                          "id": 131,
                          "name": "array",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1408:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 113,
                        "id": 132,
                        "nodeType": "Return",
                        "src": "1401:12:0"
                      }
                    ]
                  },
                  "id": 134,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "singleArray",
                  "nameLocation": "1243:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1269:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "1255:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1254:21:0"
                  },
                  "returnParameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "1299:15:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 110,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1299:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 111,
                          "nodeType": "ArrayTypeName",
                          "src": "1299:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1298:17:0"
                  },
                  "scope": 138,
                  "src": "1234:186:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "functionSelector": "dd26fb45",
                  "id": 137,
                  "mutability": "constant",
                  "name": "ROUTING_SYSTEM_VALIDATED_ANY_CONSTANT",
                  "nameLocation": "1450:37:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1426:65:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1490:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                }
              ],
              "scope": 139,
              "src": "82:1412:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:1463:0"
        },
        "id": 0
      },
      "@deeptrust/contracts/idtn-ai.sol": {
        "ast": {
          "absolutePath": "@deeptrust/contracts/idtn-ai.sol",
          "exportedSymbols": {
            "IDtnAi": [
              293
            ],
            "IDtnAiModels": [
              148
            ]
          },
          "id": 294,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 140,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IDtnAiModels",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 148,
              "linearizedBaseContracts": [
                148
              ],
              "name": "IDtnAiModels",
              "nameLocation": "68:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "437172bc",
                  "id": 147,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "modelId",
                  "nameLocation": "96:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "modelName",
                        "nameLocation": "118:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "104:23:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "104:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "103:25:1"
                  },
                  "returnParameters": {
                    "id": 146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "152:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:9:1"
                  },
                  "scope": 148,
                  "src": "87:74:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 294,
              "src": "58:105:1",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 150,
                    "name": "IDtnAiModels",
                    "nameLocations": [
                      "283:12:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 148,
                    "src": "283:12:1"
                  },
                  "id": 151,
                  "nodeType": "InheritanceSpecifier",
                  "src": "283:12:1"
                }
              ],
              "canonicalName": "IDtnAi",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 149,
                "nodeType": "StructuredDocumentation",
                "src": "165:97:1",
                "text": " @title IDtnAi\n @notice Interface for DtnAI, defining the core AI interaction methods"
              },
              "fullyImplemented": false,
              "id": 293,
              "linearizedBaseContracts": [
                293,
                148
              ],
              "name": "IDtnAi",
              "nameLocation": "273:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IDtnAi.CallType",
                  "documentation": {
                    "id": 152,
                    "nodeType": "StructuredDocumentation",
                    "src": "302:74:1",
                    "text": " @notice Represents different types of AI call responses"
                  },
                  "id": 155,
                  "members": [
                    {
                      "id": 153,
                      "name": "IPFS",
                      "nameLocation": "405:4:1",
                      "nodeType": "EnumValue",
                      "src": "405:4:1"
                    },
                    {
                      "id": 154,
                      "name": "DIRECT",
                      "nameLocation": "459:6:1",
                      "nodeType": "EnumValue",
                      "src": "459:6:1"
                    }
                  ],
                  "name": "CallType",
                  "nameLocation": "386:8:1",
                  "nodeType": "EnumDefinition",
                  "src": "381:132:1"
                },
                {
                  "canonicalName": "IDtnAi.AggregationType",
                  "id": 161,
                  "members": [
                    {
                      "id": 156,
                      "name": "ANY",
                      "nameLocation": "550:3:1",
                      "nodeType": "EnumValue",
                      "src": "550:3:1"
                    },
                    {
                      "id": 157,
                      "name": "ALL",
                      "nameLocation": "563:3:1",
                      "nodeType": "EnumValue",
                      "src": "563:3:1"
                    },
                    {
                      "id": 158,
                      "name": "SELECT_BEST",
                      "nameLocation": "576:11:1",
                      "nodeType": "EnumValue",
                      "src": "576:11:1"
                    },
                    {
                      "id": 159,
                      "name": "VOTE",
                      "nameLocation": "597:4:1",
                      "nodeType": "EnumValue",
                      "src": "597:4:1"
                    },
                    {
                      "id": 160,
                      "name": "RANK",
                      "nameLocation": "611:4:1",
                      "nodeType": "EnumValue",
                      "src": "611:4:1"
                    }
                  ],
                  "name": "AggregationType",
                  "nameLocation": "524:15:1",
                  "nodeType": "EnumDefinition",
                  "src": "519:102:1"
                },
                {
                  "canonicalName": "IDtnAi.DtnRequest",
                  "documentation": {
                    "id": 162,
                    "nodeType": "StructuredDocumentation",
                    "src": "627:62:1",
                    "text": " @notice Structure for AI request parameters"
                  },
                  "id": 176,
                  "members": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "call",
                      "nameLocation": "728:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "722:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "722:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 166,
                      "mutability": "mutable",
                      "name": "extraParams",
                      "nameLocation": "800:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "794:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "794:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 169,
                      "mutability": "mutable",
                      "name": "calltype",
                      "nameLocation": "896:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "887:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CallType_$155",
                        "typeString": "enum IDtnAi.CallType"
                      },
                      "typeName": {
                        "id": 168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 167,
                          "name": "CallType",
                          "nameLocations": [
                            "887:8:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 155,
                          "src": "887:8:1"
                        },
                        "referencedDeclaration": 155,
                        "src": "887:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CallType_$155",
                          "typeString": "enum IDtnAi.CallType"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "feePerByteReq",
                      "nameLocation": "952:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "944:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "944:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "feePerByteRes",
                      "nameLocation": "1016:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "1008:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "totalFeePerRes",
                      "nameLocation": "1081:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "1073:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1073:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DtnRequest",
                  "nameLocation": "701:10:1",
                  "nodeType": "StructDefinition",
                  "scope": 293,
                  "src": "694:442:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IDtnAi.DtnRouting",
                  "id": 190,
                  "members": [
                    {
                      "constant": false,
                      "id": 179,
                      "mutability": "mutable",
                      "name": "trustNamespaceIds",
                      "nameLocation": "1180:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1170:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 177,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 178,
                        "nodeType": "ArrayTypeName",
                        "src": "1170:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "trustedNodeIds",
                      "nameLocation": "1217:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1207:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 180,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1207:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 181,
                        "nodeType": "ArrayTypeName",
                        "src": "1207:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 184,
                      "mutability": "mutable",
                      "name": "redundancy",
                      "nameLocation": "1315:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1308:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 183,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1308:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "confidenceLevel",
                      "nameLocation": "1388:15:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1382:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1382:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 189,
                      "mutability": "mutable",
                      "name": "aggregationType",
                      "nameLocation": "1439:15:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1423:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AggregationType_$161",
                        "typeString": "enum IDtnAi.AggregationType"
                      },
                      "typeName": {
                        "id": 188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 187,
                          "name": "AggregationType",
                          "nameLocations": [
                            "1423:15:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 161,
                          "src": "1423:15:1"
                        },
                        "referencedDeclaration": 161,
                        "src": "1423:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AggregationType_$161",
                          "typeString": "enum IDtnAi.AggregationType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DtnRouting",
                  "nameLocation": "1149:10:1",
                  "nodeType": "StructDefinition",
                  "scope": 293,
                  "src": "1142:319:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IDtnAi.Response",
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "1467:52:1",
                    "text": " @notice Structure for AI response"
                  },
                  "id": 203,
                  "members": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "1565:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1550:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ResponseStatus_$215",
                        "typeString": "enum IDtnAi.ResponseStatus"
                      },
                      "typeName": {
                        "id": 193,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 192,
                          "name": "ResponseStatus",
                          "nameLocations": [
                            "1550:14:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 215,
                          "src": "1550:14:1"
                        },
                        "referencedDeclaration": 215,
                        "src": "1550:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ResponseStatus_$215",
                          "typeString": "enum IDtnAi.ResponseStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1617:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1610:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1610:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "response",
                      "nameLocation": "1684:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1678:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "nodeId",
                      "nameLocation": "1756:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1748:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1748:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1830:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1822:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1822:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Response",
                  "nameLocation": "1531:8:1",
                  "nodeType": "StructDefinition",
                  "scope": 293,
                  "src": "1524:358:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IDtnAi.CallBack",
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "1888:71:1",
                    "text": " @notice Callback structure for handling AI responses"
                  },
                  "id": 211,
                  "members": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1997:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1990:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1990:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 208,
                      "mutability": "mutable",
                      "name": "failure",
                      "nameLocation": "2070:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2063:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 207,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2063:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "2140:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2132:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2132:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "CallBack",
                  "nameLocation": "1971:8:1",
                  "nodeType": "StructDefinition",
                  "scope": 293,
                  "src": "1964:218:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IDtnAi.ResponseStatus",
                  "id": 215,
                  "members": [
                    {
                      "id": 212,
                      "name": "NA",
                      "nameLocation": "2218:2:1",
                      "nodeType": "EnumValue",
                      "src": "2218:2:1"
                    },
                    {
                      "id": 213,
                      "name": "SUCCESS",
                      "nameLocation": "2230:7:1",
                      "nodeType": "EnumValue",
                      "src": "2230:7:1"
                    },
                    {
                      "id": 214,
                      "name": "FAILURE",
                      "nameLocation": "2247:7:1",
                      "nodeType": "EnumValue",
                      "src": "2247:7:1"
                    }
                  ],
                  "name": "ResponseStatus",
                  "nameLocation": "2193:14:1",
                  "nodeType": "EnumDefinition",
                  "src": "2188:72:1"
                },
                {
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2266:147:1",
                    "text": " @notice Starts a new user session with specified token amount\n @return sessionId Unique identifier for the created session"
                  },
                  "functionSelector": "6d8de31f",
                  "id": 221,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "startUserSession",
                  "nameLocation": "2427:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2443:2:1"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "2472:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "2464:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2464:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2463:19:1"
                  },
                  "scope": 293,
                  "src": "2418:65:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 222,
                    "nodeType": "StructuredDocumentation",
                    "src": "2489:107:1",
                    "text": " @notice Closes an active user session\n @param sessionId ID of the session to close"
                  },
                  "functionSelector": "e2d6f51b",
                  "id": 227,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "closeUserSession",
                  "nameLocation": "2610:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "2635:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "2627:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2627:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2626:19:1"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2654:0:1"
                  },
                  "scope": 293,
                  "src": "2601:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 228,
                    "nodeType": "StructuredDocumentation",
                    "src": "2661:508:1",
                    "text": " @notice Makes an AI request\n @param sessionId Active session ID\n @param modelId ID of the AI model to use\n @param routingSystem Routing system configuration\n @param dtnRequest Request parameters including call data and type\n @param callback Callback information for handling response\n @param user Address of the user making the request\n @param callbackGas Gas limit for callback execution\n @return requestId Unique identifier for the request"
                  },
                  "functionSelector": "e51d6822",
                  "id": 250,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "request",
                  "nameLocation": "3183:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "3208:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3200:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3200:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "modelId",
                        "nameLocation": "3235:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3227:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3227:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "routingSystem",
                        "nameLocation": "3277:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3252:38:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                          "typeString": "struct IDtnAi.DtnRouting"
                        },
                        "typeName": {
                          "id": 234,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 233,
                            "name": "IDtnAi.DtnRouting",
                            "nameLocations": [
                              "3252:6:1",
                              "3259:10:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 190,
                            "src": "3252:17:1"
                          },
                          "referencedDeclaration": 190,
                          "src": "3252:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRouting_$190_storage_ptr",
                            "typeString": "struct IDtnAi.DtnRouting"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "dtnRequest",
                        "nameLocation": "3325:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3300:35:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DtnRequest_$176_memory_ptr",
                          "typeString": "struct IDtnAi.DtnRequest"
                        },
                        "typeName": {
                          "id": 237,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 236,
                            "name": "IDtnAi.DtnRequest",
                            "nameLocations": [
                              "3300:6:1",
                              "3307:10:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 176,
                            "src": "3300:17:1"
                          },
                          "referencedDeclaration": 176,
                          "src": "3300:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRequest_$176_storage_ptr",
                            "typeString": "struct IDtnAi.DtnRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "callback",
                        "nameLocation": "3368:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3345:31:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallBack_$211_memory_ptr",
                          "typeString": "struct IDtnAi.CallBack"
                        },
                        "typeName": {
                          "id": 240,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 239,
                            "name": "IDtnAi.CallBack",
                            "nameLocations": [
                              "3345:6:1",
                              "3352:8:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 211,
                            "src": "3345:15:1"
                          },
                          "referencedDeclaration": 211,
                          "src": "3345:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallBack_$211_storage_ptr",
                            "typeString": "struct IDtnAi.CallBack"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3394:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3386:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3386:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "callbackGas",
                        "nameLocation": "3416:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3408:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3408:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3190:243:1"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "3468:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "3460:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3460:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3459:19:1"
                  },
                  "scope": 293,
                  "src": "3174:305:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 251,
                    "nodeType": "StructuredDocumentation",
                    "src": "3485:218:1",
                    "text": " @notice Fetches the response from the last AI request\n @return status Response status\n @return message Additional message or error details\n @return response The actual response data"
                  },
                  "functionSelector": "d1e4be07",
                  "id": 263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fetchResponse",
                  "nameLocation": "3717:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "3739:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3731:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3730:19:1"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "3797:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3782:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ResponseStatus_$215",
                          "typeString": "enum IDtnAi.ResponseStatus"
                        },
                        "typeName": {
                          "id": 256,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 255,
                            "name": "ResponseStatus",
                            "nameLocations": [
                              "3782:14:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 215,
                            "src": "3782:14:1"
                          },
                          "referencedDeclaration": 215,
                          "src": "3782:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ResponseStatus_$215",
                            "typeString": "enum IDtnAi.ResponseStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "3827:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3813:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3813:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "3857:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3844:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3844:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3772:99:1"
                  },
                  "scope": 293,
                  "src": "3708:164:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "3878:437:1",
                    "text": " @notice Responds to an AI request\n @param requestId The ID of the request to respond to\n @param status The status of the response (0 for success)\n @param message Additional message or error details\n @param response The actual response data\n @param nodeId The ID of the responding node\n @param requestSize Size of request in bytes\n @param responseSize Size of response in bytes"
                  },
                  "functionSelector": "ce0a5187",
                  "id": 282,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "respondToRequest",
                  "nameLocation": "4329:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "4363:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4355:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4355:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "4397:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4382:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ResponseStatus_$215",
                          "typeString": "enum IDtnAi.ResponseStatus"
                        },
                        "typeName": {
                          "id": 268,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 267,
                            "name": "ResponseStatus",
                            "nameLocations": [
                              "4382:14:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 215,
                            "src": "4382:14:1"
                          },
                          "referencedDeclaration": 215,
                          "src": "4382:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ResponseStatus_$215",
                            "typeString": "enum IDtnAi.ResponseStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "4427:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4413:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4413:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "4457:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4444:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4444:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "nodeId",
                        "nameLocation": "4483:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4475:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4475:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "requestSize",
                        "nameLocation": "4507:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4499:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4499:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "responseSize",
                        "nameLocation": "4536:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "4528:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4345:209:1"
                  },
                  "returnParameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4563:0:1"
                  },
                  "scope": 293,
                  "src": "4320:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "647846a5",
                  "id": 287,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToken",
                  "nameLocation": "4579:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4587:2:1"
                  },
                  "returnParameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "4613:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4613:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4612:9:1"
                  },
                  "scope": 293,
                  "src": "4570:52:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "cd3c695a",
                  "id": 292,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTarget",
                  "nameLocation": "4637:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4646:2:1"
                  },
                  "returnParameters": {
                    "id": 291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4672:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4672:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4671:9:1"
                  },
                  "scope": 293,
                  "src": "4628:53:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 294,
              "src": "263:4420:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:4653:1"
        },
        "id": 1
      },
      "@deeptrust/contracts/with-dtn-ai.sol": {
        "ast": {
          "absolutePath": "@deeptrust/contracts/with-dtn-ai.sol",
          "exportedSymbols": {
            "IDtnAi": [
              293
            ],
            "WithDtnAi": [
              329
            ]
          },
          "id": 330,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 295,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:2"
            },
            {
              "absolutePath": "@deeptrust/contracts/idtn-ai.sol",
              "file": "./idtn-ai.sol",
              "id": 297,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 330,
              "sourceUnit": 294,
              "src": "58:37:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 296,
                    "name": "IDtnAi",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 293,
                    "src": "66:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "WithDtnAi",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "97:76:2",
                "text": " @title WithDtnAi\n @notice Implement this interface to use DtnAI"
              },
              "fullyImplemented": true,
              "id": 329,
              "linearizedBaseContracts": [
                329
              ],
              "name": "WithDtnAi",
              "nameLocation": "192:9:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "68be1b1e",
                  "id": 301,
                  "mutability": "mutable",
                  "name": "ai",
                  "nameLocation": "223:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "209:16:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDtnAi_$293",
                    "typeString": "contract IDtnAi"
                  },
                  "typeName": {
                    "id": 300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 299,
                      "name": "IDtnAi",
                      "nameLocations": [
                        "209:6:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 293,
                      "src": "209:6:2"
                    },
                    "referencedDeclaration": 293,
                    "src": "209:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDtnAi_$293",
                      "typeString": "contract IDtnAi"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 315,
                    "nodeType": "Block",
                    "src": "251:97:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 304,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "269:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "273:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "269:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 308,
                                    "name": "ai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 301,
                                    "src": "291:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDtnAi_$293",
                                      "typeString": "contract IDtnAi"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IDtnAi_$293",
                                      "typeString": "contract IDtnAi"
                                    }
                                  ],
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "283:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 306,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "283:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "283:11:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "269:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792044746e2063616e2063616c6c20746869732066756e6374696f6e",
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "296:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_798ff266697403c67f91140695045aad3f1d582f0a26757195a83b26fb10d552",
                                "typeString": "literal_string \"Only Dtn can call this function\""
                              },
                              "value": "Only Dtn can call this function"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_798ff266697403c67f91140695045aad3f1d582f0a26757195a83b26fb10d552",
                                "typeString": "literal_string \"Only Dtn can call this function\""
                              }
                            ],
                            "id": 303,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "261:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "261:69:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "261:69:2"
                      },
                      {
                        "id": 314,
                        "nodeType": "PlaceholderStatement",
                        "src": "340:1:2"
                      }
                    ]
                  },
                  "id": 316,
                  "name": "onlyDtn",
                  "nameLocation": "241:7:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:2:2"
                  },
                  "src": "232:116:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "391:33:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 321,
                            "name": "ai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "401:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDtnAi_$293",
                              "typeString": "contract IDtnAi"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 323,
                                "name": "_ai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "413:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 322,
                              "name": "IDtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "406:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                "typeString": "type(contract IDtnAi)"
                              }
                            },
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "406:11:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDtnAi_$293",
                              "typeString": "contract IDtnAi"
                            }
                          },
                          "src": "401:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDtnAi_$293",
                            "typeString": "contract IDtnAi"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "401:16:2"
                      }
                    ]
                  },
                  "id": 328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAi",
                  "nameLocation": "363:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "_ai",
                        "nameLocation": "377:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "369:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "369:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "368:13:2"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:0:2"
                  },
                  "scope": 329,
                  "src": "354:70:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 330,
              "src": "174:252:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:395:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1139
            ],
            "Ownable": [
              477
            ]
          },
          "id": 478,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 331,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 333,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 478,
              "sourceUnit": 1140,
              "src": "128:45:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 332,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1139,
                    "src": "136:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 335,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1139,
                    "src": "692:7:3"
                  },
                  "id": 336,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:3"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 334,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:3",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 477,
              "linearizedBaseContracts": [
                477,
                1139
              ],
              "name": "Ownable",
              "nameLocation": "681:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "706:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 339,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:3",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 343,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "858:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:3"
                  },
                  "src": "825:50:3"
                },
                {
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:3",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 348,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "994:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:3"
                  },
                  "src": "968:41:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 354,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 350,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "1042:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 352,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "1073:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:3"
                  },
                  "src": "1015:84:3"
                },
                {
                  "body": {
                    "id": 379,
                    "nodeType": "Block",
                    "src": "1259:153:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 360,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "1273:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 361,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 374,
                        "nodeType": "IfStatement",
                        "src": "1269:95:3",
                        "trueBody": {
                          "id": 373,
                          "nodeType": "Block",
                          "src": "1301:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 369,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 368,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 367,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 366,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "1322:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 372,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 376,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "1392:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 375,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "1373:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 378,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:3",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 380,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "1237:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:3"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:3"
                  },
                  "scope": 477,
                  "src": "1225:187:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 387,
                    "nodeType": "Block",
                    "src": "1521:41:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 383,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1531:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:3"
                      },
                      {
                        "id": 386,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 381,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:3",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 388,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 382,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:3"
                  },
                  "src": "1500:62:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 396,
                    "nodeType": "Block",
                    "src": "1693:30:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 394,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "1710:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 393,
                        "id": 395,
                        "nodeType": "Return",
                        "src": "1703:13:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 389,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:3",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 397,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:3"
                  },
                  "returnParameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "1684:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:3"
                  },
                  "scope": 477,
                  "src": "1638:85:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 413,
                    "nodeType": "Block",
                    "src": "1841:117:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "1855:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 403,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "1866:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 412,
                        "nodeType": "IfStatement",
                        "src": "1851:101:3",
                        "trueBody": {
                          "id": 411,
                          "nodeType": "Block",
                          "src": "1880:72:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 407,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1121,
                                      "src": "1928:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 406,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 343,
                                  "src": "1901:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 410,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 398,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:3",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:3"
                  },
                  "returnParameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:3"
                  },
                  "scope": 477,
                  "src": "1796:162:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 427,
                    "nodeType": "Block",
                    "src": "2347:47:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 421,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 420,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "2357:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 426,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:3",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 418,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 417,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 388,
                        "src": "2337:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:3"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:3"
                  },
                  "returnParameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:3"
                  },
                  "scope": 477,
                  "src": "2293:101:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 455,
                    "nodeType": "Block",
                    "src": "2613:145:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 436,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "2627:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 437,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 450,
                        "nodeType": "IfStatement",
                        "src": "2623:91:3",
                        "trueBody": {
                          "id": 449,
                          "nodeType": "Block",
                          "src": "2651:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 445,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 444,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 443,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 442,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "2672:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 448,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "2742:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 451,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "2723:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 429,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:3",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 456,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 434,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 433,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 388,
                        "src": "2603:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:3"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "2570:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:3"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:3"
                  },
                  "scope": 477,
                  "src": "2543:215:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "2975:124:3",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 475,
                            "src": "2985:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 465,
                        "initialValue": {
                          "id": 464,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "3004:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:3"
                      },
                      {
                        "expression": {
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 466,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 338,
                            "src": "3020:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 467,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "3029:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 469,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 471,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "3073:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 472,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "3083:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 470,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 354,
                            "src": "3052:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 474,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 457,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:3",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 476,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "2940:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:3"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:3"
                  },
                  "scope": 477,
                  "src": "2912:187:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 478,
              "src": "663:2438:3",
              "usedErrors": [
                343,
                348
              ],
              "usedEvents": [
                354
              ]
            }
          ],
          "src": "102:3000:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              559
            ],
            "IERC165": [
              1151
            ],
            "IERC20": [
              645
            ]
          },
          "id": 560,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 479,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 481,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 560,
              "sourceUnit": 568,
              "src": "133:36:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 480,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "141:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 483,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 560,
              "sourceUnit": 564,
              "src": "170:38:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 482,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "178:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 485,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 645,
                    "src": "590:6:4"
                  },
                  "id": 486,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:4"
                },
                {
                  "baseName": {
                    "id": 487,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1151,
                    "src": "598:7:4"
                  },
                  "id": 488,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:4"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 484,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:4",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 559,
              "linearizedBaseContracts": [
                559,
                1151,
                645
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 489,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 498,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1548:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1560:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:4"
                  },
                  "returnParameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "1593:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:4"
                  },
                  "scope": 559,
                  "src": "1523:76:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 510,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "2088:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "2100:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "2115:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:4"
                  },
                  "returnParameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "2154:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:4"
                  },
                  "scope": 559,
                  "src": "2063:97:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 511,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 522,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "2653:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 515,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "2667:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "2679:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:4"
                  },
                  "returnParameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "2712:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:4"
                  },
                  "scope": 559,
                  "src": "2624:94:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 523,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 536,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 525,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3294:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 524,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3308:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3320:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3335:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:4"
                  },
                  "returnParameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "3374:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:4"
                  },
                  "scope": 559,
                  "src": "3265:115:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 537,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 546,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "3805:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "3822:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:4"
                  },
                  "returnParameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "3855:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:4"
                  },
                  "scope": 559,
                  "src": "3781:80:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 547,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 558,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "4374:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "4391:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "4406:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:4"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 556,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "4445:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:4"
                  },
                  "scope": 559,
                  "src": "4350:101:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 560,
              "src": "568:3885:4",
              "usedErrors": [],
              "usedEvents": [
                579,
                588
              ]
            }
          ],
          "src": "107:4347:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1151
            ]
          },
          "id": 564,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 561,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 563,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 564,
              "sourceUnit": 1152,
              "src": "133:59:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 562,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "141:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:87:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              645
            ]
          },
          "id": 568,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 565,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:25:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 567,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 568,
              "sourceUnit": 646,
              "src": "132:49:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 566,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "140:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:77:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              645
            ]
          },
          "id": 646,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 569,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 570,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:7",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 645,
              "linearizedBaseContracts": [
                645
              ],
              "name": "IERC20",
              "nameLocation": "215:6:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 571,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:7",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 579,
                  "name": "Transfer",
                  "nameLocation": "397:8:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 573,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "406:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 575,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "428:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "448:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:7"
                  },
                  "src": "391:72:7"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 580,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:7",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 588,
                  "name": "Approval",
                  "nameLocation": "628:8:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "637:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "660:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 586,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "685:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:7"
                  },
                  "src": "622:78:7"
                },
                {
                  "documentation": {
                    "id": 589,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:7",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 594,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:7"
                  },
                  "returnParameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "822:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:7"
                  },
                  "scope": 645,
                  "src": "776:55:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:7",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 602,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "932:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:7"
                  },
                  "returnParameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "972:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:7"
                  },
                  "scope": 645,
                  "src": "913:68:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:7",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 612,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "1223:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "1235:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:7"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "1268:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:7"
                  },
                  "scope": 645,
                  "src": "1205:69:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 613,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:7",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 622,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 615,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "1568:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 617,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "1583:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 616,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:7"
                  },
                  "returnParameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "1623:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:7"
                  },
                  "scope": 645,
                  "src": "1549:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 623,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:7",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 632,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "2327:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "2344:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:7"
                  },
                  "returnParameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 630,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "2377:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 629,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:7"
                  },
                  "scope": 645,
                  "src": "2310:73:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 633,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:7",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 644,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "2713:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "2727:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "2739:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:7"
                  },
                  "returnParameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 644,
                        "src": "2772:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:7"
                  },
                  "scope": 645,
                  "src": "2691:87:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 646,
              "src": "205:2575:7",
              "usedErrors": [],
              "usedEvents": [
                579,
                588
              ]
            }
          ],
          "src": "106:2675:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              559
            ],
            "IERC20": [
              645
            ],
            "SafeERC20": [
              1109
            ]
          },
          "id": 1110,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 647,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 649,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1110,
              "sourceUnit": 646,
              "src": "141:37:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 648,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "149:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 651,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1110,
              "sourceUnit": 560,
              "src": "179:58:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 650,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 559,
                    "src": "187:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 652,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:8",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 1109,
              "linearizedBaseContracts": [
                1109
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:8",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 657,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 656,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "823:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:8"
                  },
                  "src": "792:46:8"
                },
                {
                  "documentation": {
                    "id": 658,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:8",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 666,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "959:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "976:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "1002:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:8"
                  },
                  "src": "920:109:8"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "1291:88:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 678,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "1321:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 681,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "1343:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 612,
                                  "src": "1343:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 683,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 672,
                                      "src": "1360:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 684,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 674,
                                      "src": "1364:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 685,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 679,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1328:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 677,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "1301:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 667,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:8",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 670,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "1241:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 669,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 668,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "1241:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "1241:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "1255:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "1267:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:8"
                  },
                  "returnParameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:8"
                  },
                  "scope": 1109,
                  "src": "1219:160:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "1708:98:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 704,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "1738:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 707,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 694,
                                    "src": "1760:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:8",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 644,
                                  "src": "1760:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 709,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 696,
                                      "src": "1781:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 710,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 698,
                                      "src": "1787:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 711,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 700,
                                      "src": "1791:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 712,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 705,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1745:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 703,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "1718:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 715,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:8",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 717,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "1644:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 693,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 692,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "1644:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "1644:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "1658:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 698,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "1672:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 697,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 700,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 717,
                        "src": "1684:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 699,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:8"
                  },
                  "returnParameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:8"
                  },
                  "scope": 1109,
                  "src": "1618:188:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 742,
                    "nodeType": "Block",
                    "src": "2033:99:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 731,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "2074:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 734,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 721,
                                    "src": "2096:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2102:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 612,
                                  "src": "2096:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 736,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "2113:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 737,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "2117:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 738,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2112:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 732,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2081:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2085:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2081:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2081:43:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 730,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "2050:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:75:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 729,
                        "id": 741,
                        "nodeType": "Return",
                        "src": "2043:82:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 718,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:126:8",
                    "text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 743,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransfer",
                  "nameLocation": "1952:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1975:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "1968:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 720,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 719,
                            "name": "IERC20",
                            "nameLocations": [
                              "1968:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "1968:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "1968:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1990:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "1982:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 725,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2002:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "1994:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1967:41:8"
                  },
                  "returnParameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2027:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:6:8"
                  },
                  "scope": 1109,
                  "src": "1943:189:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 771,
                    "nodeType": "Block",
                    "src": "2381:109:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 759,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 747,
                              "src": "2422:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 762,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 747,
                                    "src": "2444:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2450:12:8",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 644,
                                  "src": "2444:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 764,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 749,
                                      "src": "2465:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 765,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 751,
                                      "src": "2471:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 766,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 753,
                                      "src": "2475:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 767,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2464:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 760,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "2429:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2433:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2429:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2429:53:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 758,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "2398:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:85:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 757,
                        "id": 770,
                        "nodeType": "Return",
                        "src": "2391:92:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 744,
                    "nodeType": "StructuredDocumentation",
                    "src": "2138:130:8",
                    "text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 772,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransferFrom",
                  "nameLocation": "2282:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 747,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2309:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "2302:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 746,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 745,
                            "name": "IERC20",
                            "nameLocations": [
                              "2302:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "2302:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "2302:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 749,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2324:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "2316:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2338:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "2330:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "2342:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:55:8"
                  },
                  "returnParameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "2375:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:8"
                  },
                  "scope": 1109,
                  "src": "2273:217:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "3232:139:8",
                    "statements": [
                      {
                        "assignments": [
                          784
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 784,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "3250:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 802,
                            "src": "3242:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 783,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 793,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 789,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3289:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1109",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1109",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 787,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 791,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "3296:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 785,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "3265:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:8",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 622,
                            "src": "3265:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3242:62:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 795,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "3327:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 796,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "3334:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 797,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "3343:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 798,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 780,
                                "src": "3358:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3343:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 794,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "3314:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:50:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:50:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 773,
                    "nodeType": "StructuredDocumentation",
                    "src": "2496:645:8",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 803,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "3155:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3184:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "3177:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 774,
                            "name": "IERC20",
                            "nameLocations": [
                              "3177:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "3177:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "3177:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3199:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "3191:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3216:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "3208:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:46:8"
                  },
                  "returnParameters": {
                    "id": 782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3232:0:8"
                  },
                  "scope": 1109,
                  "src": "3146:225:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 845,
                    "nodeType": "Block",
                    "src": "4137:370:8",
                    "statements": [
                      {
                        "id": 844,
                        "nodeType": "UncheckedBlock",
                        "src": "4147:354:8",
                        "statements": [
                          {
                            "assignments": [
                              815
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 815,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "4179:16:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 844,
                                "src": "4171:24:8",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 814,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4171:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 824,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 820,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4222:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1109",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1109",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4214:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 818,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4214:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4214:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 822,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 809,
                                  "src": "4229:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 816,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "4198:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$645",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4204:9:8",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 622,
                                "src": "4198:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4198:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4171:66:8"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 825,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "4255:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 826,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "4274:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4255:36:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 835,
                            "nodeType": "IfStatement",
                            "src": "4251:160:8",
                            "trueBody": {
                              "id": 834,
                              "nodeType": "Block",
                              "src": "4293:118:8",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 829,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 809,
                                        "src": "4351:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 830,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 815,
                                        "src": "4360:16:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 831,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 811,
                                        "src": "4378:17:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 828,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 666,
                                      "src": "4318:32:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4318:78:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 833,
                                  "nodeType": "RevertStatement",
                                  "src": "4311:85:8"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 837,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "4437:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$645",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 838,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 809,
                                  "src": "4444:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 839,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 815,
                                    "src": "4453:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 840,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 811,
                                    "src": "4472:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4453:36:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$645",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 836,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 893,
                                "src": "4424:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4424:66:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 843,
                            "nodeType": "ExpressionStatement",
                            "src": "4424:66:8"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 804,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:657:8",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 846,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "4048:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4077:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "4070:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 806,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 805,
                            "name": "IERC20",
                            "nameLocations": [
                              "4070:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "4070:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "4070:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4092:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "4084:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "4109:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "4101:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4069:58:8"
                  },
                  "returnParameters": {
                    "id": 813,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4137:0:8"
                  },
                  "scope": 1109,
                  "src": "4039:468:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 892,
                    "nodeType": "Block",
                    "src": "5161:303:8",
                    "statements": [
                      {
                        "assignments": [
                          858
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 858,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "5184:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 892,
                            "src": "5171:25:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 857,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5171:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 867,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 861,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 850,
                                "src": "5214:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$645",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5220:7:8",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 632,
                              "src": "5214:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 863,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 852,
                                  "src": "5230:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 864,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 854,
                                  "src": "5239:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 865,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5229:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 859,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "5199:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5203:10:8",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "5199:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:47:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5171:75:8"
                      },
                      {
                        "condition": {
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5261:45:8",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 869,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 850,
                                "src": "5286:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$645",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 870,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 858,
                                "src": "5293:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$645",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 868,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "5262:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5262:44:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 891,
                        "nodeType": "IfStatement",
                        "src": "5257:201:8",
                        "trueBody": {
                          "id": 890,
                          "nodeType": "Block",
                          "src": "5308:150:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 874,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 850,
                                    "src": "5342:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 877,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 850,
                                          "src": "5364:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$645",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 878,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5370:7:8",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 632,
                                        "src": "5364:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 879,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 852,
                                            "src": "5380:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 880,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5389:1:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 881,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5379:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 875,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "5349:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 876,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5353:10:8",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "5349:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5349:43:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 873,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1067,
                                  "src": "5322:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5322:71:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 884,
                              "nodeType": "ExpressionStatement",
                              "src": "5322:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 886,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 850,
                                    "src": "5427:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 887,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 858,
                                    "src": "5434:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$645",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 885,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1067,
                                  "src": "5407:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5407:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 889,
                              "nodeType": "ExpressionStatement",
                              "src": "5407:40:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 847,
                    "nodeType": "StructuredDocumentation",
                    "src": "4513:566:8",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 893,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "5093:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5113:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 893,
                        "src": "5106:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 849,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 848,
                            "name": "IERC20",
                            "nameLocations": [
                              "5106:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "5106:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "5106:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5128:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 893,
                        "src": "5120:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5120:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5145:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 893,
                        "src": "5137:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5137:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:46:8"
                  },
                  "returnParameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:8"
                  },
                  "scope": 1109,
                  "src": "5084:380:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 935,
                    "nodeType": "Block",
                    "src": "5911:219:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 906,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "5925:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5928:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5925:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5933:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5925:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5925:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6011:39:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 920,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "6034:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 921,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 901,
                                  "src": "6038:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 922,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 903,
                                  "src": "6045:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 918,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 897,
                                  "src": "6012:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$559",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6018:15:8",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 510,
                                "src": "6012:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6012:38:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 933,
                          "nodeType": "IfStatement",
                          "src": "6007:117:8",
                          "trueBody": {
                            "id": 932,
                            "nodeType": "Block",
                            "src": "6052:72:8",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 928,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 897,
                                          "src": "6106:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$559",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$559",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6098:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 926,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6098:7:8",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6098:14:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 925,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "6073:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 930,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:40:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 931,
                                "nodeType": "RevertStatement",
                                "src": "6066:47:8"
                              }
                            ]
                          }
                        },
                        "id": 934,
                        "nodeType": "IfStatement",
                        "src": "5921:203:8",
                        "trueBody": {
                          "id": 917,
                          "nodeType": "Block",
                          "src": "5946:55:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 912,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 897,
                                    "src": "5973:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$559",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 913,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 899,
                                    "src": "5980:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 914,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 901,
                                    "src": "5984:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$559",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 911,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 690,
                                  "src": "5960:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5960:30:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 916,
                              "nodeType": "ExpressionStatement",
                              "src": "5960:30:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 894,
                    "nodeType": "StructuredDocumentation",
                    "src": "5470:333:8",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 936,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5817:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5849:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "5840:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$559",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 896,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 895,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5840:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 559,
                            "src": "5840:8:8"
                          },
                          "referencedDeclaration": 559,
                          "src": "5840:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$559",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5864:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "5856:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5856:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5876:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "5868:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5868:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5896:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "5883:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5839:62:8"
                  },
                  "returnParameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5911:0:8"
                  },
                  "scope": 1109,
                  "src": "5808:322:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 982,
                    "nodeType": "Block",
                    "src": "6649:239:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 951,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 944,
                                "src": "6663:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6666:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6663:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6671:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6663:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6663:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6759:49:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 966,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 942,
                                  "src": "6786:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 967,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 944,
                                  "src": "6792:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 968,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 946,
                                  "src": "6796:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 969,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 948,
                                  "src": "6803:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 964,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 940,
                                  "src": "6760:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$559",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6766:19:8",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 536,
                                "src": "6760:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6760:48:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 980,
                          "nodeType": "IfStatement",
                          "src": "6755:127:8",
                          "trueBody": {
                            "id": 979,
                            "nodeType": "Block",
                            "src": "6810:72:8",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 975,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 940,
                                          "src": "6864:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$559",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$559",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 974,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6856:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 973,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6856:7:8",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 976,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6856:14:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 972,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "6831:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6831:40:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 978,
                                "nodeType": "RevertStatement",
                                "src": "6824:47:8"
                              }
                            ]
                          }
                        },
                        "id": 981,
                        "nodeType": "IfStatement",
                        "src": "6659:223:8",
                        "trueBody": {
                          "id": 963,
                          "nodeType": "Block",
                          "src": "6684:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 957,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 940,
                                    "src": "6715:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$559",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 958,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 942,
                                    "src": "6722:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 959,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 944,
                                    "src": "6728:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 960,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 946,
                                    "src": "6732:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$559",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 956,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 717,
                                  "src": "6698:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6698:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 962,
                              "nodeType": "ExpressionStatement",
                              "src": "6698:40:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 937,
                    "nodeType": "StructuredDocumentation",
                    "src": "6136:341:8",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 983,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "6491:26:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6536:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "6527:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$559",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 939,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 938,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6527:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 559,
                            "src": "6527:8:8"
                          },
                          "referencedDeclaration": 559,
                          "src": "6527:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$559",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6559:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "6551:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6551:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 944,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6581:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "6573:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 943,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6601:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "6593:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 983,
                        "src": "6616:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:122:8"
                  },
                  "returnParameters": {
                    "id": 950,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6649:0:8"
                  },
                  "scope": 1109,
                  "src": "6482:406:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "7655:218:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 996,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 989,
                                "src": "7669:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7672:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "7669:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7677:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7669:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7755:38:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1010,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "7777:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1011,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "7781:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1012,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 993,
                                  "src": "7788:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1008,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 987,
                                  "src": "7756:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$559",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7762:14:8",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 558,
                                "src": "7756:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7756:37:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1023,
                          "nodeType": "IfStatement",
                          "src": "7751:116:8",
                          "trueBody": {
                            "id": 1022,
                            "nodeType": "Block",
                            "src": "7795:72:8",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1018,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 987,
                                          "src": "7849:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$559",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$559",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1017,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7841:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1016,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7841:7:8",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1019,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7841:14:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1015,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "7816:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7816:40:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1021,
                                "nodeType": "RevertStatement",
                                "src": "7809:47:8"
                              }
                            ]
                          }
                        },
                        "id": 1024,
                        "nodeType": "IfStatement",
                        "src": "7665:202:8",
                        "trueBody": {
                          "id": 1007,
                          "nodeType": "Block",
                          "src": "7690:55:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1002,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 987,
                                    "src": "7717:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$559",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1003,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 989,
                                    "src": "7724:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1004,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 991,
                                    "src": "7728:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$559",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1001,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 893,
                                  "src": "7704:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7704:30:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1006,
                              "nodeType": "ExpressionStatement",
                              "src": "7704:30:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 984,
                    "nodeType": "StructuredDocumentation",
                    "src": "6894:654:8",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1026,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "7562:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 987,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7593:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "7584:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$559",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 986,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 985,
                            "name": "IERC1363",
                            "nameLocations": [
                              "7584:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 559,
                            "src": "7584:8:8"
                          },
                          "referencedDeclaration": 559,
                          "src": "7584:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$559",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 989,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7608:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "7600:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7600:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 991,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7620:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "7612:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 990,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 993,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7640:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "7627:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7583:62:8"
                  },
                  "returnParameters": {
                    "id": 995,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7655:0:8"
                  },
                  "scope": 1109,
                  "src": "7553:320:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "8440:650:8",
                    "statements": [
                      {
                        "assignments": [
                          1036
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1036,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "8458:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1066,
                            "src": "8450:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1035,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8450:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1037,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8450:18:8"
                      },
                      {
                        "assignments": [
                          1039
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1039,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "8486:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1066,
                            "src": "8478:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1038,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8478:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1040,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8478:19:8"
                      },
                      {
                        "AST": {
                          "nativeSrc": "8532:396:8",
                          "nodeType": "YulBlock",
                          "src": "8532:396:8",
                          "statements": [
                            {
                              "nativeSrc": "8546:75:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "8546:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "8566:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8566:3:8"
                                    },
                                    "nativeSrc": "8566:5:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8566:5:8"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "8573:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8580:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8587:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:4:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8593:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "8593:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8583:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8583:3:8"
                                    },
                                    "nativeSrc": "8583:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8583:15:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8606:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8606:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8600:5:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:5:8"
                                    },
                                    "nativeSrc": "8600:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8613:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8613:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8616:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8616:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "8561:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8561:4:8"
                                },
                                "nativeSrc": "8561:60:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8561:60:8"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "8550:7:8",
                                  "nodeType": "YulTypedName",
                                  "src": "8550:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8682:157:8",
                                "nodeType": "YulBlock",
                                "src": "8682:157:8",
                                "statements": [
                                  {
                                    "nativeSrc": "8700:22:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8700:22:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8717:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "8717:4:8",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8711:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8711:5:8"
                                      },
                                      "nativeSrc": "8711:11:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8711:11:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8704:3:8",
                                        "nodeType": "YulTypedName",
                                        "src": "8704:3:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8754:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "8754:3:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8759:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "8759:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8762:14:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "8762:14:8"
                                          },
                                          "nativeSrc": "8762:16:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8762:16:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8739:14:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8739:14:8"
                                      },
                                      "nativeSrc": "8739:40:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8739:40:8"
                                    },
                                    "nativeSrc": "8739:40:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8739:40:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8803:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "8803:3:8"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8808:14:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "8808:14:8"
                                          },
                                          "nativeSrc": "8808:16:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8808:16:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8796:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8796:6:8"
                                      },
                                      "nativeSrc": "8796:29:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8796:29:8"
                                    },
                                    "nativeSrc": "8796:29:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8796:29:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "8673:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8673:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8666:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:8"
                                },
                                "nativeSrc": "8666:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8666:15:8"
                              },
                              "nativeSrc": "8663:176:8",
                              "nodeType": "YulIf",
                              "src": "8663:176:8"
                            },
                            {
                              "nativeSrc": "8852:30:8",
                              "nodeType": "YulAssignment",
                              "src": "8852:30:8",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8866:14:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:14:8"
                                },
                                "nativeSrc": "8866:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8866:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8852:10:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8852:10:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8895:23:8",
                              "nodeType": "YulAssignment",
                              "src": "8895:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8916:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8916:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8910:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:5:8"
                                },
                                "nativeSrc": "8910:8:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8910:8:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8895:11:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8895:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1032,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8587:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1032,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1036,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8852:10:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1039,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8895:11:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1030,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8573:5:8",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1041,
                        "nodeType": "InlineAssembly",
                        "src": "8507:421:8"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1042,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "8942:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8956:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8942:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1053,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1039,
                              "src": "8994:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9009:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8994:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8942:68:8",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1047,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1030,
                                      "src": "8968:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$645",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$645",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1046,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8960:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1045,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8960:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8960:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:4:8",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8960:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8980:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8960:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8990:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8960:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1065,
                        "nodeType": "IfStatement",
                        "src": "8938:146:8",
                        "trueBody": {
                          "id": 1064,
                          "nodeType": "Block",
                          "src": "9012:72:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1060,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1030,
                                        "src": "9066:5:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$645",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$645",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 1059,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9058:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1058,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9058:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9058:14:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1057,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "9033:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9033:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1063,
                              "nodeType": "RevertStatement",
                              "src": "9026:47:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1027,
                    "nodeType": "StructuredDocumentation",
                    "src": "7879:486:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 1067,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "8379:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1033,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8406:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "8399:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1029,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1028,
                            "name": "IERC20",
                            "nameLocations": [
                              "8399:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "8399:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "8399:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1032,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8426:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "8413:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1031,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8398:33:8"
                  },
                  "returnParameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8440:0:8"
                  },
                  "scope": 1109,
                  "src": "8370:720:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1107,
                    "nodeType": "Block",
                    "src": "9681:391:8",
                    "statements": [
                      {
                        "assignments": [
                          1079
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1079,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9696:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "9691:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1078,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9691:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1080,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:12:8"
                      },
                      {
                        "assignments": [
                          1082
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1082,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9721:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "9713:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1081,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1083,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:18:8"
                      },
                      {
                        "assignments": [
                          1085
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1085,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9749:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "9741:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1084,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1086,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9741:19:8"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9795:174:8",
                          "nodeType": "YulBlock",
                          "src": "9795:174:8",
                          "statements": [
                            {
                              "nativeSrc": "9809:71:8",
                              "nodeType": "YulAssignment",
                              "src": "9809:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9825:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9825:3:8"
                                    },
                                    "nativeSrc": "9825:5:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9825:5:8"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9832:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9839:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9839:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9846:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9846:4:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9852:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9852:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9842:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:8"
                                    },
                                    "nativeSrc": "9842:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:15:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9865:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9865:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9859:5:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:5:8"
                                    },
                                    "nativeSrc": "9859:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9872:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9875:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9875:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9820:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:4:8"
                                },
                                "nativeSrc": "9820:60:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9820:60:8"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9809:7:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:7:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9893:30:8",
                              "nodeType": "YulAssignment",
                              "src": "9893:30:8",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9907:14:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:14:8"
                                },
                                "nativeSrc": "9907:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9893:10:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9893:10:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9936:23:8",
                              "nodeType": "YulAssignment",
                              "src": "9936:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9957:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9951:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9951:5:8"
                                },
                                "nativeSrc": "9951:8:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9951:8:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9936:11:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9936:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1073,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9846:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1073,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9865:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1082,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9893:10:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1085,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9936:11:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1079,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9809:7:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1071,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9832:5:8",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1087,
                        "nodeType": "InlineAssembly",
                        "src": "9770:199:8"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1088,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "9985:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1089,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1082,
                                    "src": "9997:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10011:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9997:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1100,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1085,
                                    "src": "10048:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10063:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10048:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9997:67:8",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1099,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1094,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1071,
                                            "src": "10023:5:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$645",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$645",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1093,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "10015:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1092,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10015:7:8",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1095,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10015:14:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1096,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10030:4:8",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "10015:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1097,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10035:6:8",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10015:26:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1098,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10044:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10015:30:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1104,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9996:69:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9985:80:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1077,
                        "id": 1106,
                        "nodeType": "Return",
                        "src": "9978:87:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1068,
                    "nodeType": "StructuredDocumentation",
                    "src": "9096:491:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 1108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "9601:23:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1071,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9632:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "9625:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$645",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1070,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1069,
                            "name": "IERC20",
                            "nameLocations": [
                              "9625:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 645,
                            "src": "9625:6:8"
                          },
                          "referencedDeclaration": 645,
                          "src": "9625:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9652:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "9639:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9624:33:8"
                  },
                  "returnParameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "9675:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9675:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9674:6:8"
                  },
                  "scope": 1109,
                  "src": "9592:480:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1110,
              "src": "698:9376:8",
              "usedErrors": [
                657,
                666
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9960:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1139
            ]
          },
          "id": 1140,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1111,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1112,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:9",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1139,
              "linearizedBaseContracts": [
                1139
              ],
              "name": "Context",
              "nameLocation": "642:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1120,
                    "nodeType": "Block",
                    "src": "718:34:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1117,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1116,
                        "id": 1119,
                        "nodeType": "Return",
                        "src": "728:17:9"
                      }
                    ]
                  },
                  "id": 1121,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1113,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:9"
                  },
                  "returnParameters": {
                    "id": 1116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "709:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:9"
                  },
                  "scope": 1139,
                  "src": "656:96:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1129,
                    "nodeType": "Block",
                    "src": "825:32:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:9",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1125,
                        "id": 1128,
                        "nodeType": "Return",
                        "src": "835:15:9"
                      }
                    ]
                  },
                  "id": 1130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:9"
                  },
                  "returnParameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "809:14:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:9"
                  },
                  "scope": 1139,
                  "src": "758:99:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "935:25:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1134,
                        "id": 1136,
                        "nodeType": "Return",
                        "src": "945:8:9"
                      }
                    ]
                  },
                  "id": 1138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:9"
                  },
                  "returnParameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "926:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:9"
                  },
                  "scope": 1139,
                  "src": "863:97:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1140,
              "src": "624:338:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1151
            ]
          },
          "id": 1152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1141,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:25:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1142,
                "nodeType": "StructuredDocumentation",
                "src": "142:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1151,
              "linearizedBaseContracts": [
                1151
              ],
              "name": "IERC165",
              "nameLocation": "433:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1143,
                    "nodeType": "StructuredDocumentation",
                    "src": "447:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1150,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "801:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1145,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "826:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "819:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "818:20:10"
                  },
                  "returnParameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "862:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "861:6:10"
                  },
                  "scope": 1151,
                  "src": "792:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1152,
              "src": "423:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:756:10"
        },
        "id": 10
      },
      "contracts/BetResolver.sol": {
        "ast": {
          "absolutePath": "contracts/BetResolver.sol",
          "exportedSymbols": {
            "BetResolver": [
              1843
            ],
            "Context": [
              1139
            ],
            "DtnDefaults": [
              138
            ],
            "IBetResolver": [
              1861
            ],
            "IDtnAi": [
              293
            ],
            "IDtnAiModels": [
              148
            ],
            "IERC1363": [
              559
            ],
            "IERC20": [
              645
            ],
            "Ownable": [
              477
            ],
            "SafeERC20": [
              1109
            ],
            "WithDtnAi": [
              329
            ]
          },
          "id": 1844,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1153,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1154,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 478,
              "src": "58:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1155,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 646,
              "src": "111:56:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1156,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 1110,
              "src": "168:65:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@deeptrust/contracts/idtn-ai.sol",
              "file": "@deeptrust/contracts/idtn-ai.sol",
              "id": 1157,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 294,
              "src": "235:42:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@deeptrust/contracts/dtn-defaults.sol",
              "file": "@deeptrust/contracts/dtn-defaults.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 139,
              "src": "278:47:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@deeptrust/contracts/with-dtn-ai.sol",
              "file": "@deeptrust/contracts/with-dtn-ai.sol",
              "id": 1159,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 330,
              "src": "326:46:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IBetResolver.sol",
              "file": "./IBetResolver.sol",
              "id": 1160,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1844,
              "sourceUnit": 1862,
              "src": "374:28:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1162,
                    "name": "WithDtnAi",
                    "nameLocations": [
                      "937:9:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 329,
                    "src": "937:9:11"
                  },
                  "id": 1163,
                  "nodeType": "InheritanceSpecifier",
                  "src": "937:9:11"
                },
                {
                  "baseName": {
                    "id": 1164,
                    "name": "Ownable",
                    "nameLocations": [
                      "948:7:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 477,
                    "src": "948:7:11"
                  },
                  "id": 1165,
                  "nodeType": "InheritanceSpecifier",
                  "src": "948:7:11"
                },
                {
                  "baseName": {
                    "id": 1166,
                    "name": "IBetResolver",
                    "nameLocations": [
                      "957:12:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1861,
                    "src": "957:12:11"
                  },
                  "id": 1167,
                  "nodeType": "InheritanceSpecifier",
                  "src": "957:12:11"
                }
              ],
              "canonicalName": "BetResolver",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1161,
                "nodeType": "StructuredDocumentation",
                "src": "404:508:11",
                "text": " @title BetResolver (custom-nodes-only routing)\n @notice Resolves bets via DtnAI. The target model must return exactly \"true\" | \"false\" | \"inconclusive\".\n @dev\n  - Uses OpenZeppelin Ownable, ReentrancyGuard, SafeERC20.\n  - Uses ONLY DtnDefaults.defaultCustomNodesValidatedAny(nodes) for routing.\n  - Exposes restartSession() that forwards this contract's fee-token balance to DtnAI feeTarget and opens a session.\n  - Resolution result is stored on-chain; does not handle escrow/payouts."
              },
              "fullyImplemented": true,
              "id": 1843,
              "linearizedBaseContracts": [
                1843,
                1861,
                477,
                1139,
                329
              ],
              "name": "BetResolver",
              "nameLocation": "922:11:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1171,
                  "libraryName": {
                    "id": 1168,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "982:9:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1109,
                    "src": "982:9:11"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "976:27:11",
                  "typeName": {
                    "id": 1170,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1169,
                      "name": "IERC20",
                      "nameLocations": [
                        "996:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 645,
                      "src": "996:6:11"
                    },
                    "referencedDeclaration": 645,
                    "src": "996:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$645",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "canonicalName": "BetResolver.Bet",
                  "id": 1183,
                  "members": [
                    {
                      "constant": false,
                      "id": 1173,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "1068:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "1060:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1172,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1060:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "outcome",
                      "nameLocation": "1095:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "1087:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Outcome_$1850",
                        "typeString": "enum IBetResolver.Outcome"
                      },
                      "typeName": {
                        "id": 1175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1174,
                          "name": "Outcome",
                          "nameLocations": [
                            "1087:7:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1850,
                          "src": "1087:7:11"
                        },
                        "referencedDeclaration": 1850,
                        "src": "1087:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Outcome_$1850",
                          "typeString": "enum IBetResolver.Outcome"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1178,
                      "mutability": "mutable",
                      "name": "onResolve",
                      "nameLocation": "1119:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "1112:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1177,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1112:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "aiRawResult",
                      "nameLocation": "1145:11:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "1138:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1179,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1138:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "aiError",
                      "nameLocation": "1231:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "1224:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1224:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Bet",
                  "nameLocation": "1046:3:11",
                  "nodeType": "StructDefinition",
                  "scope": 1843,
                  "src": "1039:206:11",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cfe152c0",
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "betMarket",
                  "nameLocation": "1293:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1278:24:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "22af00fa",
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "bets",
                  "nameLocation": "1339:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1308:35:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$1183_storage_$",
                    "typeString": "mapping(uint256 => struct BetResolver.Bet)"
                  },
                  "typeName": {
                    "id": 1189,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1186,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1316:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1308:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$1183_storage_$",
                      "typeString": "mapping(uint256 => struct BetResolver.Bet)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1188,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1187,
                        "name": "Bet",
                        "nameLocations": [
                          "1327:3:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1183,
                        "src": "1327:3:11"
                      },
                      "referencedDeclaration": 1183,
                      "src": "1327:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                        "typeString": "struct BetResolver.Bet"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c8b894a3",
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "requestToBet",
                  "nameLocation": "1384:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1349:47:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                    "typeString": "mapping(bytes32 => uint256)"
                  },
                  "typeName": {
                    "id": 1193,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1191,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1357:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1349:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                      "typeString": "mapping(bytes32 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1192,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1368:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9648c9f4",
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "sessionId",
                  "nameLocation": "1450:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1435:24:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "84cc5c26",
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "systemPrompt1",
                  "nameLocation": "1511:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1497:27:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6a924cbd",
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "systemPrompt2",
                  "nameLocation": "1584:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1570:27:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a81675c7",
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "modelName",
                  "nameLocation": "1661:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1647:23:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a6edb342",
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "nodeName",
                  "nameLocation": "1742:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1728:22:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "daf81269",
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "feePerByteReq",
                  "nameLocation": "1847:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1832:52:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "315f3030305f3030305f3030305f3030305f303030",
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1863:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "value": "1_000_000_000_000_000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "31a9b104",
                  "id": 1210,
                  "mutability": "mutable",
                  "name": "feePerByteRes",
                  "nameLocation": "1930:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1915:52:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "315f3030305f3030305f3030305f3030305f303030",
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1946:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "value": "1_000_000_000_000_000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9d648d67",
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "totalFeePerRes",
                  "nameLocation": "2013:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1998:57:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "315f3030305f3030305f3030305f3030305f3030305f303030",
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2030:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1_000_000_000_000_000_000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "32165346",
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "resolutionGasLimit",
                  "nameLocation": "2092:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "2077:43:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2077:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3430305f303030",
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2113:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_400000_by_1",
                      "typeString": "int_const 400000"
                    },
                    "value": "400_000"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cefd1532ce99545b2ecdecfe9555dbb5f55800cf824606d71bd0b0e3fb54f52e",
                  "id": 1222,
                  "name": "ResolveRequested",
                  "nameLocation": "2159:16:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "betId",
                        "nameLocation": "2192:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1222,
                        "src": "2176:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2176:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1220,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "2215:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1222,
                        "src": "2199:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2199:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2175:50:11"
                  },
                  "src": "2153:73:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4cdfd2dabd9bcce8c3b563affcc5fbecb1b95914a0f02da623a9fcf5f13b0d9b",
                  "id": 1231,
                  "name": "BetResolved",
                  "nameLocation": "2237:11:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1224,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "betId",
                        "nameLocation": "2265:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2249:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1227,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "outcome",
                        "nameLocation": "2280:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2272:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Outcome_$1850",
                          "typeString": "enum IBetResolver.Outcome"
                        },
                        "typeName": {
                          "id": 1226,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1225,
                            "name": "Outcome",
                            "nameLocations": [
                              "2272:7:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1850,
                            "src": "2272:7:11"
                          },
                          "referencedDeclaration": 1850,
                          "src": "2272:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$1850",
                            "typeString": "enum IBetResolver.Outcome"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1229,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rawResult",
                        "nameLocation": "2296:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2289:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1228,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2289:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2248:58:11"
                  },
                  "src": "2231:76:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "70685f7cbeda2418040e1bd2e3e95cdda3133b1a80ea33ccaa06ce38c7c040bb",
                  "id": 1239,
                  "name": "BetResolutionFailed",
                  "nameLocation": "2318:19:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "betId",
                        "nameLocation": "2354:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "2338:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2338:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1235,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "2377:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "2361:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2361:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "2395:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "2388:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2388:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2337:66:11"
                  },
                  "src": "2312:92:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e9c0294b4419b2194cbe1d9f814a03250327281e6e123b1e7288822710d8a8bf",
                  "id": 1247,
                  "name": "BetResolutionCallbackFailed",
                  "nameLocation": "2415:27:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1241,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "betId",
                        "nameLocation": "2459:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "2443:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2443:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1243,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requestId",
                        "nameLocation": "2482:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "2466:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1242,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1245,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2499:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1247,
                        "src": "2493:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2493:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2442:62:11"
                  },
                  "src": "2409:96:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "82efe7218a4d776c25c08af33123acef8998c9049484a73357d0dd8ed91ff9dd",
                  "id": 1253,
                  "name": "SessionRestarted",
                  "nameLocation": "2516:16:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1249,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sessionId",
                        "nameLocation": "2541:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "2533:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2533:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1251,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fundedAmount",
                        "nameLocation": "2560:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "2552:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2552:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2532:41:11"
                  },
                  "src": "2510:64:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b189524b4a4d28735ed1e814418b9bde84ef638c0a2eea241e624e9a122904f4",
                  "id": 1265,
                  "name": "ConfigUpdated",
                  "nameLocation": "2585:13:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "dtnAi",
                        "nameLocation": "2607:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "2599:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1257,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "systemPrompt1",
                        "nameLocation": "2621:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "2614:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1256,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2614:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1259,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "systemPrompt2",
                        "nameLocation": "2643:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "2636:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1258,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2636:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1261,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "modelName",
                        "nameLocation": "2665:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "2658:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2658:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1263,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nodeName",
                        "nameLocation": "2683:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1265,
                        "src": "2676:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2676:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2598:94:11"
                  },
                  "src": "2579:114:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "16e6f67290546b8dd0e587f4b7f67d4f61932ae17ffd8c60d3509dbc05c175fe",
                  "id": 1275,
                  "name": "FeesUpdated",
                  "nameLocation": "2704:11:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feePerByteReq",
                        "nameLocation": "2724:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "2716:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2716:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1269,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feePerByteRes",
                        "nameLocation": "2747:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "2739:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1271,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalFeePerRes",
                        "nameLocation": "2770:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "2762:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1273,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "resolutionGasLimit",
                        "nameLocation": "2794:18:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "2786:26:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2786:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2715:98:11"
                  },
                  "src": "2698:116:11"
                },
                {
                  "body": {
                    "id": 1283,
                    "nodeType": "Block",
                    "src": "2862:7:11",
                    "statements": []
                  },
                  "id": 1284,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1280,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1277,
                          "src": "2855:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1281,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1279,
                        "name": "Ownable",
                        "nameLocations": [
                          "2847:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 477,
                        "src": "2847:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2847:14:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2840:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "2832:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2831:15:11"
                  },
                  "returnParameters": {
                    "id": 1282,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2862:0:11"
                  },
                  "scope": 1843,
                  "src": "2820:49:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1333,
                    "nodeType": "Block",
                    "src": "3114:295:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1302,
                              "name": "_dtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1288,
                              "src": "3130:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1301,
                            "name": "setAi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "3124:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3124:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1304,
                        "nodeType": "ExpressionStatement",
                        "src": "3124:13:11"
                      },
                      {
                        "expression": {
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1305,
                            "name": "betMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "3147:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1306,
                            "name": "_betMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "3159:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3147:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "3147:22:11"
                      },
                      {
                        "expression": {
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1309,
                            "name": "systemPrompt1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "3179:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1310,
                            "name": "_systemPrompt1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "3195:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3179:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "3179:30:11"
                      },
                      {
                        "expression": {
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1313,
                            "name": "systemPrompt2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "3219:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1314,
                            "name": "_systemPrompt2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "3235:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3219:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:30:11"
                      },
                      {
                        "expression": {
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1317,
                            "name": "modelName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "3259:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1318,
                            "name": "_modelName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1294,
                            "src": "3271:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3259:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1320,
                        "nodeType": "ExpressionStatement",
                        "src": "3259:22:11"
                      },
                      {
                        "expression": {
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1321,
                            "name": "nodeName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1204,
                            "src": "3291:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1322,
                            "name": "_nodeName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1296,
                            "src": "3302:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3291:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1324,
                        "nodeType": "ExpressionStatement",
                        "src": "3291:20:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1326,
                              "name": "_dtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1288,
                              "src": "3340:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1327,
                              "name": "_systemPrompt1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "3348:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1328,
                              "name": "_systemPrompt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "3364:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1329,
                              "name": "_modelName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1294,
                              "src": "3380:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1330,
                              "name": "_nodeName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1296,
                              "src": "3392:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1325,
                            "name": "ConfigUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "3326:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,string memory,string memory,string memory,string memory)"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3326:76:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1332,
                        "nodeType": "EmitStatement",
                        "src": "3321:81:11"
                      }
                    ]
                  },
                  "functionSelector": "30a9056f",
                  "id": 1334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1299,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1298,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3104:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 388,
                        "src": "3104:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3104:9:11"
                    }
                  ],
                  "name": "configure",
                  "nameLocation": "2884:9:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1286,
                        "mutability": "mutable",
                        "name": "_betMarket",
                        "nameLocation": "2911:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2903:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2903:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1288,
                        "mutability": "mutable",
                        "name": "_dtnAi",
                        "nameLocation": "2939:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2931:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1290,
                        "mutability": "mutable",
                        "name": "_systemPrompt1",
                        "nameLocation": "2969:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2955:28:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2955:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "_systemPrompt2",
                        "nameLocation": "3007:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2993:28:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2993:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1294,
                        "mutability": "mutable",
                        "name": "_modelName",
                        "nameLocation": "3045:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "3031:24:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1293,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3031:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "_nodeName",
                        "nameLocation": "3079:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "3065:23:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3065:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2893:201:11"
                  },
                  "returnParameters": {
                    "id": 1300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3114:0:11"
                  },
                  "scope": 1843,
                  "src": "2875:534:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1370,
                    "nodeType": "Block",
                    "src": "3553:275:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1347,
                            "name": "feePerByteReq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "3563:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1348,
                            "name": "_feePerByteReq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "3579:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3563:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1350,
                        "nodeType": "ExpressionStatement",
                        "src": "3563:30:11"
                      },
                      {
                        "expression": {
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1351,
                            "name": "feePerByteRes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "3603:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1352,
                            "name": "_feePerByteRes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "3619:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3603:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1354,
                        "nodeType": "ExpressionStatement",
                        "src": "3603:30:11"
                      },
                      {
                        "expression": {
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1355,
                            "name": "totalFeePerRes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1213,
                            "src": "3643:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1356,
                            "name": "_totalFeePerRes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "3660:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3643:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "3643:32:11"
                      },
                      {
                        "expression": {
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1359,
                            "name": "resolutionGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "3685:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1360,
                            "name": "_resolutionGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1342,
                            "src": "3706:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3685:40:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1362,
                        "nodeType": "ExpressionStatement",
                        "src": "3685:40:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1364,
                              "name": "_feePerByteReq",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "3752:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1365,
                              "name": "_feePerByteRes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "3768:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1366,
                              "name": "_totalFeePerRes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1340,
                              "src": "3784:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1367,
                              "name": "_resolutionGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1342,
                              "src": "3801:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1363,
                            "name": "FeesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "3740:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3740:81:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1369,
                        "nodeType": "EmitStatement",
                        "src": "3735:86:11"
                      }
                    ]
                  },
                  "functionSelector": "6fcba377",
                  "id": 1371,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1345,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1344,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3543:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 388,
                        "src": "3543:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3543:9:11"
                    }
                  ],
                  "name": "setFees",
                  "nameLocation": "3424:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "_feePerByteReq",
                        "nameLocation": "3440:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "3432:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3432:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "_feePerByteRes",
                        "nameLocation": "3464:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "3456:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3456:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "_totalFeePerRes",
                        "nameLocation": "3488:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "3480:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3480:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "_resolutionGasLimit",
                        "nameLocation": "3513:19:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "3505:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3505:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3431:102:11"
                  },
                  "returnParameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3553:0:11"
                  },
                  "scope": 1843,
                  "src": "3415:413:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1438,
                    "nodeType": "Block",
                    "src": "4113:426:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1377,
                            "name": "sessionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "4127:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4140:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4127:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1387,
                        "nodeType": "IfStatement",
                        "src": "4123:75:11",
                        "trueBody": {
                          "id": 1386,
                          "nodeType": "Block",
                          "src": "4143:55:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1383,
                                    "name": "sessionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1196,
                                    "src": "4177:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1380,
                                    "name": "ai",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 301,
                                    "src": "4157:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDtnAi_$293",
                                      "typeString": "contract IDtnAi"
                                    }
                                  },
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4160:16:11",
                                  "memberName": "closeUserSession",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 227,
                                  "src": "4157:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4157:30:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1385,
                              "nodeType": "ExpressionStatement",
                              "src": "4157:30:11"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1389
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1389,
                            "mutability": "mutable",
                            "name": "tokenAddr",
                            "nameLocation": "4216:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "4208:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1388,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4208:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1393,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1390,
                              "name": "ai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "4228:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDtnAi_$293",
                                "typeString": "contract IDtnAi"
                              }
                            },
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4231:8:11",
                            "memberName": "feeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 287,
                            "src": "4228:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4228:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4208:33:11"
                      },
                      {
                        "assignments": [
                          1396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1396,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "4258:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "4251:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$645",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 1395,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1394,
                                "name": "IERC20",
                                "nameLocations": [
                                  "4251:6:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 645,
                                "src": "4251:6:11"
                              },
                              "referencedDeclaration": 645,
                              "src": "4251:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1400,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1398,
                              "name": "tokenAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1389,
                              "src": "4273:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1397,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "4266:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$645_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4266:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$645",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4251:32:11"
                      },
                      {
                        "assignments": [
                          1402
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1402,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4301:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "4293:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1401,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4293:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1410,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1407,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4334:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BetResolver_$1843",
                                    "typeString": "contract BetResolver"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BetResolver_$1843",
                                    "typeString": "contract BetResolver"
                                  }
                                ],
                                "id": 1406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4326:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1405,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4326:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4326:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1403,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1396,
                              "src": "4310:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4316:9:11",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 602,
                            "src": "4310:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4310:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4293:47:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1412,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1402,
                                "src": "4358:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4367:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4358:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066656520746f6b656e73",
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4370:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8fadbc9f16c9999fc5af1c7e61468345db5df2b41aaf2a6a2b8562dda29c40a7",
                                "typeString": "literal_string \"No fee tokens\""
                              },
                              "value": "No fee tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8fadbc9f16c9999fc5af1c7e61468345db5df2b41aaf2a6a2b8562dda29c40a7",
                                "typeString": "literal_string \"No fee tokens\""
                              }
                            ],
                            "id": 1411,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4350:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4350:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1417,
                        "nodeType": "ExpressionStatement",
                        "src": "4350:36:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1421,
                                  "name": "ai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 301,
                                  "src": "4416:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDtnAi_$293",
                                    "typeString": "contract IDtnAi"
                                  }
                                },
                                "id": 1422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4419:9:11",
                                "memberName": "feeTarget",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 292,
                                "src": "4416:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4416:14:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1424,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "4432:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1418,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1396,
                              "src": "4397:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$645",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4403:12:11",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 690,
                            "src": "4397:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$645_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$645_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4397:42:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1426,
                        "nodeType": "ExpressionStatement",
                        "src": "4397:42:11"
                      },
                      {
                        "expression": {
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1427,
                            "name": "sessionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "4449:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1428,
                                "name": "ai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 301,
                                "src": "4461:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDtnAi_$293",
                                  "typeString": "contract IDtnAi"
                                }
                              },
                              "id": 1429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4464:16:11",
                              "memberName": "startUserSession",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 221,
                              "src": "4461:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () external returns (uint256)"
                              }
                            },
                            "id": 1430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4461:21:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4449:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1432,
                        "nodeType": "ExpressionStatement",
                        "src": "4449:33:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1434,
                              "name": "sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "4514:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1435,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "4525:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1433,
                            "name": "SessionRestarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "4497:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4497:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1437,
                        "nodeType": "EmitStatement",
                        "src": "4492:40:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1372,
                    "nodeType": "StructuredDocumentation",
                    "src": "3834:231:11",
                    "text": " @notice Starts (or restarts) a DtnAI user session using this contract’s entire fee-token balance.\n @dev Send the fee token to this contract first; this function forwards the full balance to `feeTarget()`."
                  },
                  "functionSelector": "795769e5",
                  "id": 1439,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1375,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1374,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4103:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 388,
                        "src": "4103:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4103:9:11"
                    }
                  ],
                  "name": "restartSession",
                  "nameLocation": "4079:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4093:2:11"
                  },
                  "returnParameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4113:0:11"
                  },
                  "scope": 1843,
                  "src": "4070:469:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1860
                  ],
                  "body": {
                    "id": 1643,
                    "nodeType": "Block",
                    "src": "5095:2244:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1450,
                                "name": "betId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1442,
                                "src": "5113:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5121:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5113:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964206265744964",
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5124:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04079dadd26506d5f88ef3dba90e4841bc241a768189ed65be6a59aeb3b73573",
                                "typeString": "literal_string \"invalid betId\""
                              },
                              "value": "invalid betId"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04079dadd26506d5f88ef3dba90e4841bc241a768189ed65be6a59aeb3b73573",
                                "typeString": "literal_string \"invalid betId\""
                              }
                            ],
                            "id": 1449,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5105:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5105:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "5105:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1459,
                                      "name": "betPrompt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1444,
                                      "src": "5164:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 1458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5158:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 1457,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5158:5:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5158:16:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5175:6:11",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5158:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5184:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5158:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c69642062657450726f6d7074",
                              "id": 1464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5187:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b5b458be92f3e90c30f8409deec5092b918c32a278518c10b3a6296e34941159",
                                "typeString": "literal_string \"invalid betPrompt\""
                              },
                              "value": "invalid betPrompt"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b5b458be92f3e90c30f8409deec5092b918c32a278518c10b3a6296e34941159",
                                "typeString": "literal_string \"invalid betPrompt\""
                              }
                            ],
                            "id": 1456,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5150:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5150:57:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1466,
                        "nodeType": "ExpressionStatement",
                        "src": "5150:57:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1468,
                                "name": "onResolve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1446,
                                "src": "5225:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5245:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5238:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes4_$",
                                    "typeString": "type(bytes4)"
                                  },
                                  "typeName": {
                                    "id": 1469,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5238:6:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5238:9:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "5225:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964206f6e5265736f6c7665",
                              "id": 1474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5249:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_98eef21d8410ab594815adc1ea7e90db8b19732c9d5cd6da6b3f615f77b46746",
                                "typeString": "literal_string \"invalid onResolve\""
                              },
                              "value": "invalid onResolve"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_98eef21d8410ab594815adc1ea7e90db8b19732c9d5cd6da6b3f615f77b46746",
                                "typeString": "literal_string \"invalid onResolve\""
                              }
                            ],
                            "id": 1467,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5217:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5217:52:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "5217:52:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1478,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5287:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5291:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5287:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1480,
                                "name": "betMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1185,
                                "src": "5301:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5287:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c69642073656e646572",
                              "id": 1482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5312:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                                "typeString": "literal_string \"invalid sender\""
                              },
                              "value": "invalid sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                                "typeString": "literal_string \"invalid sender\""
                              }
                            ],
                            "id": 1477,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5279:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5279:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1484,
                        "nodeType": "ExpressionStatement",
                        "src": "5279:50:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1486,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5347:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5351:5:11",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "5347:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1488,
                                "name": "resolutionGasLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1216,
                                "src": "5360:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5347:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e73756666696369656e7420676173",
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5380:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72e867dd306fe349cc773c10e75a99b798d3817a8eb2b9b9418bec917fdb90ea",
                                "typeString": "literal_string \"insufficient gas\""
                              },
                              "value": "insufficient gas"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72e867dd306fe349cc773c10e75a99b798d3817a8eb2b9b9418bec917fdb90ea",
                                "typeString": "literal_string \"insufficient gas\""
                              }
                            ],
                            "id": 1485,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5339:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5339:60:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "5339:60:11"
                      },
                      {
                        "assignments": [
                          1497
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1497,
                            "mutability": "mutable",
                            "name": "prompt_lines",
                            "nameLocation": "5482:12:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "5466:28:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1495,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "5466:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 1496,
                              "nodeType": "ArrayTypeName",
                              "src": "5466:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1503,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "33",
                              "id": 1501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5510:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 1500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5497:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1498,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "5501:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 1499,
                              "nodeType": "ArrayTypeName",
                              "src": "5501:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5497:15:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5466:46:11"
                      },
                      {
                        "expression": {
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1504,
                              "name": "prompt_lines",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "5522:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1506,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5535:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5522:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1507,
                            "name": "systemPrompt1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "5540:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5522:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "5522:31:11"
                      },
                      {
                        "expression": {
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1510,
                              "name": "prompt_lines",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "5563:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1512,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 1511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5576:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5563:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1513,
                            "name": "betPrompt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1444,
                            "src": "5581:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5563:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "5563:27:11"
                      },
                      {
                        "expression": {
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1516,
                              "name": "prompt_lines",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "5600:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1518,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 1517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5613:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5600:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1519,
                            "name": "systemPrompt2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "5618:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "5600:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1521,
                        "nodeType": "ExpressionStatement",
                        "src": "5600:31:11"
                      },
                      {
                        "assignments": [
                          1526
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1526,
                            "mutability": "mutable",
                            "name": "nodes",
                            "nameLocation": "5707:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "5690:22:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1524,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "5690:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1525,
                              "nodeType": "ArrayTypeName",
                              "src": "5690:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1532,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 1530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5729:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5715:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1527,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "5719:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1528,
                              "nodeType": "ArrayTypeName",
                              "src": "5719:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5715:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5690:41:11"
                      },
                      {
                        "expression": {
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1533,
                              "name": "nodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
                              "src": "5741:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1535,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5747:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5741:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1539,
                                    "name": "nodeName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1204,
                                    "src": "5779:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1537,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "5762:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5766:12:11",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5762:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5762:26:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1536,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "5752:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5752:37:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5741:48:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1543,
                        "nodeType": "ExpressionStatement",
                        "src": "5741:48:11"
                      },
                      {
                        "assignments": [
                          1548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1548,
                            "mutability": "mutable",
                            "name": "routing",
                            "nameLocation": "5824:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "5799:32:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                              "typeString": "struct IDtnAi.DtnRouting"
                            },
                            "typeName": {
                              "id": 1547,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1546,
                                "name": "IDtnAi.DtnRouting",
                                "nameLocations": [
                                  "5799:6:11",
                                  "5806:10:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 190,
                                "src": "5799:17:11"
                              },
                              "referencedDeclaration": 190,
                              "src": "5799:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DtnRouting_$190_storage_ptr",
                                "typeString": "struct IDtnAi.DtnRouting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1553,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1551,
                              "name": "nodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
                              "src": "5889:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            ],
                            "expression": {
                              "id": 1549,
                              "name": "DtnDefaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "5846:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DtnDefaults_$138_$",
                                "typeString": "type(library DtnDefaults)"
                              }
                            },
                            "id": 1550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5858:30:11",
                            "memberName": "defaultCustomNodesValidatedAny",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78,
                            "src": "5846:42:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_struct$_DtnRouting_$190_memory_ptr_$",
                              "typeString": "function (bytes32[] memory) pure returns (struct IDtnAi.DtnRouting memory)"
                            }
                          },
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5846:49:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                            "typeString": "struct IDtnAi.DtnRouting memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5799:96:11"
                      },
                      {
                        "assignments": [
                          1558
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1558,
                            "mutability": "mutable",
                            "name": "req",
                            "nameLocation": "5956:3:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "5931:28:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DtnRequest_$176_memory_ptr",
                              "typeString": "struct IDtnAi.DtnRequest"
                            },
                            "typeName": {
                              "id": 1557,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1556,
                                "name": "IDtnAi.DtnRequest",
                                "nameLocations": [
                                  "5931:6:11",
                                  "5938:10:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 176,
                                "src": "5931:17:11"
                              },
                              "referencedDeclaration": 176,
                              "src": "5931:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DtnRequest_$176_storage_ptr",
                                "typeString": "struct IDtnAi.DtnRequest"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1573,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1563,
                                  "name": "prompt_lines",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1497,
                                  "src": "6011:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string memory[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string memory[] memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1561,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "6000:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6004:6:11",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6000:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6000:24:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6091:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1566,
                                  "name": "IDtnAi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "6186:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                    "typeString": "type(contract IDtnAi)"
                                  }
                                },
                                "id": 1567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6193:8:11",
                                "memberName": "CallType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 155,
                                "src": "6186:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CallType_$155_$",
                                  "typeString": "type(enum IDtnAi.CallType)"
                                }
                              },
                              "id": 1568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6202:6:11",
                              "memberName": "DIRECT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 154,
                              "src": "6186:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CallType_$155",
                                "typeString": "enum IDtnAi.CallType"
                              }
                            },
                            {
                              "id": 1569,
                              "name": "feePerByteReq",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "6273:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1570,
                              "name": "feePerByteRes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "6315:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1571,
                              "name": "totalFeePerRes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "6358:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_enum$_CallType_$155",
                                "typeString": "enum IDtnAi.CallType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1559,
                              "name": "IDtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "5962:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                "typeString": "type(contract IDtnAi)"
                              }
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5969:10:11",
                            "memberName": "DtnRequest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 176,
                            "src": "5962:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DtnRequest_$176_storage_ptr_$",
                              "typeString": "type(struct IDtnAi.DtnRequest storage pointer)"
                            }
                          },
                          "id": 1572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "5994:4:11",
                            "6078:11:11",
                            "6176:8:11",
                            "6258:13:11",
                            "6300:13:11",
                            "6342:14:11"
                          ],
                          "names": [
                            "call",
                            "extraParams",
                            "calltype",
                            "feePerByteReq",
                            "feePerByteRes",
                            "totalFeePerRes"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "5962:421:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DtnRequest_$176_memory_ptr",
                            "typeString": "struct IDtnAi.DtnRequest memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5931:452:11"
                      },
                      {
                        "assignments": [
                          1578
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1578,
                            "mutability": "mutable",
                            "name": "cb",
                            "nameLocation": "6417:2:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "6394:25:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallBack_$211_memory_ptr",
                              "typeString": "struct IDtnAi.CallBack"
                            },
                            "typeName": {
                              "id": 1577,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1576,
                                "name": "IDtnAi.CallBack",
                                "nameLocations": [
                                  "6394:6:11",
                                  "6401:8:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 211,
                                "src": "6394:15:11"
                              },
                              "referencedDeclaration": 211,
                              "src": "6394:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallBack_$211_storage_ptr",
                                "typeString": "struct IDtnAi.CallBack"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1592,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1581,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6461:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BetResolver_$1843",
                                    "typeString": "contract BetResolver"
                                  }
                                },
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6466:15:11",
                                "memberName": "callbackResolve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1739,
                                "src": "6461:20:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                                  "typeString": "function (bytes32) external"
                                }
                              },
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6482:8:11",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "6461:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1584,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6513:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BetResolver_$1843",
                                    "typeString": "contract BetResolver"
                                  }
                                },
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6518:20:11",
                                "memberName": "callbackResolveError",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1779,
                                "src": "6513:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                                  "typeString": "function (bytes32) external"
                                }
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6539:8:11",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "6513:34:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1589,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6577:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BetResolver_$1843",
                                    "typeString": "contract BetResolver"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BetResolver_$1843",
                                    "typeString": "contract BetResolver"
                                  }
                                ],
                                "id": 1588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6569:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1587,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6569:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6569:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1579,
                              "name": "IDtnAi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "6422:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDtnAi_$293_$",
                                "typeString": "type(contract IDtnAi)"
                              }
                            },
                            "id": 1580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6429:8:11",
                            "memberName": "CallBack",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "6422:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CallBack_$211_storage_ptr_$",
                              "typeString": "type(struct IDtnAi.CallBack storage pointer)"
                            }
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "6452:7:11",
                            "6504:7:11",
                            "6561:6:11"
                          ],
                          "names": [
                            "success",
                            "failure",
                            "target"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "6422:171:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallBack_$211_memory_ptr",
                            "typeString": "struct IDtnAi.CallBack memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6394:199:11"
                      },
                      {
                        "assignments": [
                          1594
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1594,
                            "mutability": "mutable",
                            "name": "modelId",
                            "nameLocation": "6692:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "6684:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1593,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6684:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1601,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1598,
                                  "name": "modelName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1202,
                                  "src": "6729:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 1596,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "6712:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6716:12:11",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6712:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6712:27:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1595,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "6702:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6702:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6684:56:11"
                      },
                      {
                        "assignments": [
                          1603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1603,
                            "mutability": "mutable",
                            "name": "requestId",
                            "nameLocation": "6785:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1643,
                            "src": "6777:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1602,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6777:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1618,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1609,
                              "name": "sessionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "6839:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1610,
                              "name": "modelId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "6862:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1611,
                              "name": "routing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1548,
                              "src": "6883:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                                "typeString": "struct IDtnAi.DtnRouting memory"
                              }
                            },
                            {
                              "id": 1612,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1558,
                              "src": "6904:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DtnRequest_$176_memory_ptr",
                                "typeString": "struct IDtnAi.DtnRequest memory"
                              }
                            },
                            {
                              "id": 1613,
                              "name": "cb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1578,
                              "src": "6921:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallBack_$211_memory_ptr",
                                "typeString": "struct IDtnAi.CallBack memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1614,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6937:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6941:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6937:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1616,
                              "name": "resolutionGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "6985:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                                "typeString": "struct IDtnAi.DtnRouting memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_DtnRequest_$176_memory_ptr",
                                "typeString": "struct IDtnAi.DtnRequest memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_CallBack_$211_memory_ptr",
                                "typeString": "struct IDtnAi.CallBack memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_struct$_DtnRouting_$190_memory_ptr",
                                  "typeString": "struct IDtnAi.DtnRouting memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_DtnRequest_$176_memory_ptr",
                                  "typeString": "struct IDtnAi.DtnRequest memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_CallBack_$211_memory_ptr",
                                  "typeString": "struct IDtnAi.CallBack memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1604,
                                "name": "ai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 301,
                                "src": "6797:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDtnAi_$293",
                                  "typeString": "contract IDtnAi"
                                }
                              },
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6800:7:11",
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "6797:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes32_$_t_struct$_DtnRouting_$190_memory_ptr_$_t_struct$_DtnRequest_$176_memory_ptr_$_t_struct$_CallBack_$211_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,bytes32,struct IDtnAi.DtnRouting memory,struct IDtnAi.DtnRequest memory,struct IDtnAi.CallBack memory,address,uint256) payable external returns (bytes32)"
                              }
                            },
                            "id": 1608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1606,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6815:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6819:5:11",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6815:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "6797:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes32_$_t_struct$_DtnRouting_$190_memory_ptr_$_t_struct$_DtnRequest_$176_memory_ptr_$_t_struct$_CallBack_$211_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bytes32_$value",
                              "typeString": "function (uint256,bytes32,struct IDtnAi.DtnRouting memory,struct IDtnAi.DtnRequest memory,struct IDtnAi.CallBack memory,address,uint256) payable external returns (bytes32)"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6797:216:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6777:236:11"
                      },
                      {
                        "expression": {
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1619,
                              "name": "requestToBet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "7052:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 1621,
                            "indexExpression": {
                              "id": 1620,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "7065:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7052:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1622,
                            "name": "betId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "7078:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7052:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1624,
                        "nodeType": "ExpressionStatement",
                        "src": "7052:31:11"
                      },
                      {
                        "expression": {
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1625,
                              "name": "bets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "7093:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$1183_storage_$",
                                "typeString": "mapping(uint256 => struct BetResolver.Bet storage ref)"
                              }
                            },
                            "id": 1627,
                            "indexExpression": {
                              "id": 1626,
                              "name": "betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1442,
                              "src": "7098:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7093:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$1183_storage",
                              "typeString": "struct BetResolver.Bet storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1629,
                                "name": "requestId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1603,
                                "src": "7136:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1630,
                                  "name": "Outcome",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1850,
                                  "src": "7168:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Outcome_$1850_$",
                                    "typeString": "type(enum IBetResolver.Outcome)"
                                  }
                                },
                                "id": 1631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7176:7:11",
                                "memberName": "Unknown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1846,
                                "src": "7168:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Outcome_$1850",
                                  "typeString": "enum IBetResolver.Outcome"
                                }
                              },
                              {
                                "id": 1632,
                                "name": "onResolve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1446,
                                "src": "7208:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7244:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "hexValue": "",
                                "id": 1634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7269:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Outcome_$1850",
                                  "typeString": "enum IBetResolver.Outcome"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "id": 1628,
                              "name": "Bet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "7107:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Bet_$1183_storage_ptr_$",
                                "typeString": "type(struct BetResolver.Bet storage pointer)"
                              }
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "7125:9:11",
                              "7159:7:11",
                              "7197:9:11",
                              "7231:11:11",
                              "7260:7:11"
                            ],
                            "names": [
                              "requestId",
                              "outcome",
                              "onResolve",
                              "aiRawResult",
                              "aiError"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "7107:175:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$1183_memory_ptr",
                              "typeString": "struct BetResolver.Bet memory"
                            }
                          },
                          "src": "7093:189:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$1183_storage",
                            "typeString": "struct BetResolver.Bet storage ref"
                          }
                        },
                        "id": 1637,
                        "nodeType": "ExpressionStatement",
                        "src": "7093:189:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1639,
                              "name": "betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1442,
                              "src": "7315:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1640,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "7322:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1638,
                            "name": "ResolveRequested",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1222,
                            "src": "7298:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7298:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1642,
                        "nodeType": "EmitStatement",
                        "src": "7293:39:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1440,
                    "nodeType": "StructuredDocumentation",
                    "src": "4545:453:11",
                    "text": " @notice Triggers AI resolution for a bet that has passed its close time.\n @param betId The bet to resolve.\n @param betPrompt The prompt for the bet.\n @param onResolve The callback function to call when the bet is resolved. The function should have the following signature:\n   onResolve(uint256 betId, Outcome outcome)\n @dev Send ETH with {value: ...} if the DtnAI deployment requires it for callback gas."
                  },
                  "functionSelector": "7bf13d4d",
                  "id": 1644,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "resolve",
                  "nameLocation": "5012:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1442,
                        "mutability": "mutable",
                        "name": "betId",
                        "nameLocation": "5028:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1644,
                        "src": "5020:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5020:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1444,
                        "mutability": "mutable",
                        "name": "betPrompt",
                        "nameLocation": "5049:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1644,
                        "src": "5035:23:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1443,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5035:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1446,
                        "mutability": "mutable",
                        "name": "onResolve",
                        "nameLocation": "5067:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1644,
                        "src": "5060:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1445,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "5060:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5019:58:11"
                  },
                  "returnParameters": {
                    "id": 1448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5095:0:11"
                  },
                  "scope": 1843,
                  "src": "5003:2336:11",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1738,
                    "nodeType": "Block",
                    "src": "7475:696:11",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          null,
                          1652
                        ],
                        "declarations": [
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 1652,
                            "mutability": "mutable",
                            "name": "response",
                            "nameLocation": "7503:8:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7490:21:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1651,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7490:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1657,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1655,
                              "name": "_requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1646,
                              "src": "7532:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1653,
                              "name": "ai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "7515:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDtnAi_$293",
                                "typeString": "contract IDtnAi"
                              }
                            },
                            "id": 1654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7518:13:11",
                            "memberName": "fetchResponse",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 263,
                            "src": "7515:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_enum$_ResponseStatus_$215_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes32) view external returns (enum IDtnAi.ResponseStatus,string memory,bytes memory)"
                            }
                          },
                          "id": 1656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7515:28:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_enum$_ResponseStatus_$215_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(enum IDtnAi.ResponseStatus,string memory,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7485:58:11"
                      },
                      {
                        "assignments": [
                          1659
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1659,
                            "mutability": "mutable",
                            "name": "raw",
                            "nameLocation": "7639:3:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7625:17:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1658,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "7625:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1667,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1662,
                              "name": "response",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "7656:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7667:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1663,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7667:6:11",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1665,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7666:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 1660,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
                              "src": "7645:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7649:6:11",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "7645:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7645:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7625:50:11"
                      },
                      {
                        "assignments": [
                          1670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1670,
                            "mutability": "mutable",
                            "name": "out",
                            "nameLocation": "7694:3:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7686:11:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Outcome_$1850",
                              "typeString": "enum IBetResolver.Outcome"
                            },
                            "typeName": {
                              "id": 1669,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1668,
                                "name": "Outcome",
                                "nameLocations": [
                                  "7686:7:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1850,
                                "src": "7686:7:11"
                              },
                              "referencedDeclaration": 1850,
                              "src": "7686:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Outcome_$1850",
                                "typeString": "enum IBetResolver.Outcome"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1674,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1672,
                              "name": "raw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1659,
                              "src": "7714:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1671,
                            "name": "_parseOutcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1842,
                            "src": "7700:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_enum$_Outcome_$1850_$",
                              "typeString": "function (string memory) pure returns (enum IBetResolver.Outcome)"
                            }
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7700:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$1850",
                            "typeString": "enum IBetResolver.Outcome"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7686:32:11"
                      },
                      {
                        "assignments": [
                          1676
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1676,
                            "mutability": "mutable",
                            "name": "betId",
                            "nameLocation": "7736:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7728:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1675,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7728:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1680,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1677,
                            "name": "requestToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "7744:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1679,
                          "indexExpression": {
                            "id": 1678,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1646,
                            "src": "7757:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7744:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7728:40:11"
                      },
                      {
                        "assignments": [
                          1683
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1683,
                            "mutability": "mutable",
                            "name": "b",
                            "nameLocation": "7790:1:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7778:13:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                              "typeString": "struct BetResolver.Bet"
                            },
                            "typeName": {
                              "id": 1682,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1681,
                                "name": "Bet",
                                "nameLocations": [
                                  "7778:3:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1183,
                                "src": "7778:3:11"
                              },
                              "referencedDeclaration": 1183,
                              "src": "7778:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                                "typeString": "struct BetResolver.Bet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1687,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1684,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "7794:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$1183_storage_$",
                              "typeString": "mapping(uint256 => struct BetResolver.Bet storage ref)"
                            }
                          },
                          "id": 1686,
                          "indexExpression": {
                            "id": 1685,
                            "name": "betId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1676,
                            "src": "7799:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7794:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$1183_storage",
                            "typeString": "struct BetResolver.Bet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7778:27:11"
                      },
                      {
                        "assignments": [
                          1689
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1689,
                            "mutability": "mutable",
                            "name": "onResolve",
                            "nameLocation": "7822:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7815:16:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 1688,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "7815:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1692,
                        "initialValue": {
                          "expression": {
                            "id": 1690,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1683,
                            "src": "7834:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                              "typeString": "struct BetResolver.Bet storage pointer"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7836:9:11",
                          "memberName": "onResolve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1178,
                          "src": "7834:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7815:30:11"
                      },
                      {
                        "expression": {
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1693,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1683,
                              "src": "7855:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                                "typeString": "struct BetResolver.Bet storage pointer"
                              }
                            },
                            "id": 1695,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7857:7:11",
                            "memberName": "outcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1176,
                            "src": "7855:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Outcome_$1850",
                              "typeString": "enum IBetResolver.Outcome"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1696,
                            "name": "out",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "7867:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Outcome_$1850",
                              "typeString": "enum IBetResolver.Outcome"
                            }
                          },
                          "src": "7855:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$1850",
                            "typeString": "enum IBetResolver.Outcome"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "7855:15:11"
                      },
                      {
                        "expression": {
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1699,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1683,
                              "src": "7880:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                                "typeString": "struct BetResolver.Bet storage pointer"
                              }
                            },
                            "id": 1701,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7882:11:11",
                            "memberName": "aiRawResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1180,
                            "src": "7880:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1702,
                            "name": "raw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1659,
                            "src": "7896:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "7880:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1704,
                        "nodeType": "ExpressionStatement",
                        "src": "7880:19:11"
                      },
                      {
                        "assignments": [
                          1706,
                          1708
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1706,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7916:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7911:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1705,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7911:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1708,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "7938:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1738,
                            "src": "7925:17:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1707,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7925:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1721,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1716,
                                  "name": "onResolve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1689,
                                  "src": "7993:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 1717,
                                  "name": "betId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1676,
                                  "src": "8004:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1718,
                                  "name": "out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "8011:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Outcome_$1850",
                                    "typeString": "enum IBetResolver.Outcome"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Outcome_$1850",
                                    "typeString": "enum IBetResolver.Outcome"
                                  }
                                ],
                                "expression": {
                                  "id": 1714,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "7970:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7974:18:11",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "7970:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7970:45:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1711,
                                  "name": "betMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1185,
                                  "src": "7954:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7946:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1709,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7946:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7946:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7965:4:11",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "7946:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7946:70:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7910:106:11"
                      },
                      {
                        "condition": {
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8030:8:11",
                          "subExpression": {
                            "id": 1722,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1706,
                            "src": "8031:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1731,
                        "nodeType": "IfStatement",
                        "src": "8026:96:11",
                        "trueBody": {
                          "id": 1730,
                          "nodeType": "Block",
                          "src": "8040:82:11",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1725,
                                    "name": "betId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1676,
                                    "src": "8087:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1726,
                                    "name": "_requestId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1646,
                                    "src": "8094:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1727,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1708,
                                    "src": "8106:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1724,
                                  "name": "BetResolutionCallbackFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1247,
                                  "src": "8059:27:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,bytes32,bytes memory)"
                                  }
                                },
                                "id": 1728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8059:52:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1729,
                              "nodeType": "EmitStatement",
                              "src": "8054:57:11"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1733,
                              "name": "betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "8148:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1734,
                              "name": "out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "8155:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Outcome_$1850",
                                "typeString": "enum IBetResolver.Outcome"
                              }
                            },
                            {
                              "id": 1735,
                              "name": "raw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1659,
                              "src": "8160:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Outcome_$1850",
                                "typeString": "enum IBetResolver.Outcome"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1732,
                            "name": "BetResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "8136:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_Outcome_$1850_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,enum IBetResolver.Outcome,string memory)"
                            }
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8136:28:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1737,
                        "nodeType": "EmitStatement",
                        "src": "8131:33:11"
                      }
                    ]
                  },
                  "functionSelector": "288d29dc",
                  "id": 1739,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1649,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1648,
                        "name": "onlyDtn",
                        "nameLocations": [
                          "7467:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 316,
                        "src": "7467:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7467:7:11"
                    }
                  ],
                  "name": "callbackResolve",
                  "nameLocation": "7422:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1646,
                        "mutability": "mutable",
                        "name": "_requestId",
                        "nameLocation": "7446:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1739,
                        "src": "7438:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1645,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7438:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7437:20:11"
                  },
                  "returnParameters": {
                    "id": 1650,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7475:0:11"
                  },
                  "scope": 1843,
                  "src": "7413:758:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1778,
                    "nodeType": "Block",
                    "src": "8244:255:11",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          1747,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 1747,
                            "mutability": "mutable",
                            "name": "message",
                            "nameLocation": "8271:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1778,
                            "src": "8257:21:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1746,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8257:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1752,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1750,
                              "name": "_requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "8301:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1748,
                              "name": "ai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "8284:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDtnAi_$293",
                                "typeString": "contract IDtnAi"
                              }
                            },
                            "id": 1749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8287:13:11",
                            "memberName": "fetchResponse",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 263,
                            "src": "8284:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_enum$_ResponseStatus_$215_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes32) view external returns (enum IDtnAi.ResponseStatus,string memory,bytes memory)"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8284:28:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_enum$_ResponseStatus_$215_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(enum IDtnAi.ResponseStatus,string memory,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8254:58:11"
                      },
                      {
                        "assignments": [
                          1754
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1754,
                            "mutability": "mutable",
                            "name": "betId",
                            "nameLocation": "8331:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1778,
                            "src": "8323:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1753,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8323:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1758,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1755,
                            "name": "requestToBet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "8339:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1757,
                          "indexExpression": {
                            "id": 1756,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1741,
                            "src": "8352:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8339:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8323:40:11"
                      },
                      {
                        "assignments": [
                          1761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1761,
                            "mutability": "mutable",
                            "name": "b",
                            "nameLocation": "8385:1:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1778,
                            "src": "8373:13:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                              "typeString": "struct BetResolver.Bet"
                            },
                            "typeName": {
                              "id": 1760,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1759,
                                "name": "Bet",
                                "nameLocations": [
                                  "8373:3:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1183,
                                "src": "8373:3:11"
                              },
                              "referencedDeclaration": 1183,
                              "src": "8373:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                                "typeString": "struct BetResolver.Bet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1765,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1762,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "8389:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bet_$1183_storage_$",
                              "typeString": "mapping(uint256 => struct BetResolver.Bet storage ref)"
                            }
                          },
                          "id": 1764,
                          "indexExpression": {
                            "id": 1763,
                            "name": "betId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1754,
                            "src": "8394:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8389:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$1183_storage",
                            "typeString": "struct BetResolver.Bet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8373:27:11"
                      },
                      {
                        "expression": {
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1766,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1761,
                              "src": "8410:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$1183_storage_ptr",
                                "typeString": "struct BetResolver.Bet storage pointer"
                              }
                            },
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8412:7:11",
                            "memberName": "aiError",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1182,
                            "src": "8410:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1769,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "8422:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "8410:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1771,
                        "nodeType": "ExpressionStatement",
                        "src": "8410:19:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1773,
                              "name": "betId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1754,
                              "src": "8465:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1774,
                              "name": "_requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "8472:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1775,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1747,
                              "src": "8484:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1772,
                            "name": "BetResolutionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1239,
                            "src": "8445:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes32,string memory)"
                            }
                          },
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8445:47:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1777,
                        "nodeType": "EmitStatement",
                        "src": "8440:52:11"
                      }
                    ]
                  },
                  "functionSelector": "fa2b9443",
                  "id": 1779,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1744,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1743,
                        "name": "onlyDtn",
                        "nameLocations": [
                          "8236:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 316,
                        "src": "8236:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8236:7:11"
                    }
                  ],
                  "name": "callbackResolveError",
                  "nameLocation": "8186:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "_requestId",
                        "nameLocation": "8215:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1779,
                        "src": "8207:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8207:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8206:20:11"
                  },
                  "returnParameters": {
                    "id": 1745,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8244:0:11"
                  },
                  "scope": 1843,
                  "src": "8177:322:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1841,
                    "nodeType": "Block",
                    "src": "8696:355:11",
                    "statements": [
                      {
                        "assignments": [
                          1788
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1788,
                            "mutability": "mutable",
                            "name": "h",
                            "nameLocation": "8714:1:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1841,
                            "src": "8706:9:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1787,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8706:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1795,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1792,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1781,
                                  "src": "8734:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8728:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1790,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8728:5:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8728:8:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1789,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "8718:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8718:19:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8706:31:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1796,
                                "name": "h",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1788,
                                "src": "8764:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 1798,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8779:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                      "typeString": "literal_string \"true\""
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                      "typeString": "literal_string \"true\""
                                    }
                                  ],
                                  "id": 1797,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "8769:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8769:17:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "8764:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1801,
                                "name": "h",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1788,
                                "src": "8791:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "54727565",
                                    "id": 1803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8806:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_23025ebdc5cdfc5bdfe2d2c2a52d7e7f374f5c135d6d47e3c935c86567e86a53",
                                      "typeString": "literal_string \"True\""
                                    },
                                    "value": "True"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_23025ebdc5cdfc5bdfe2d2c2a52d7e7f374f5c135d6d47e3c935c86567e86a53",
                                      "typeString": "literal_string \"True\""
                                    }
                                  ],
                                  "id": 1802,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "8796:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8796:17:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "8791:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8764:49:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1807,
                              "name": "h",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1788,
                              "src": "8818:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "54525545",
                                  "id": 1809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8833:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7749ed7587e6dbf171ce6be50bea67236732d7ccfd51e327bc28b612ec06faa7",
                                    "typeString": "literal_string \"TRUE\""
                                  },
                                  "value": "TRUE"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7749ed7587e6dbf171ce6be50bea67236732d7ccfd51e327bc28b612ec06faa7",
                                    "typeString": "literal_string \"TRUE\""
                                  }
                                ],
                                "id": 1808,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "8823:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 1810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8823:17:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "8818:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8764:76:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1816,
                        "nodeType": "IfStatement",
                        "src": "8747:123:11",
                        "trueBody": {
                          "expression": {
                            "expression": {
                              "id": 1813,
                              "name": "Outcome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1850,
                              "src": "8858:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Outcome_$1850_$",
                                "typeString": "type(enum IBetResolver.Outcome)"
                              }
                            },
                            "id": 1814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8866:4:11",
                            "memberName": "True",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1847,
                            "src": "8858:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Outcome_$1850",
                              "typeString": "enum IBetResolver.Outcome"
                            }
                          },
                          "functionReturnParameters": 1786,
                          "id": 1815,
                          "nodeType": "Return",
                          "src": "8851:19:11"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1817,
                                "name": "h",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1788,
                                "src": "8898:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 1819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8913:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a",
                                      "typeString": "literal_string \"false\""
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a",
                                      "typeString": "literal_string \"false\""
                                    }
                                  ],
                                  "id": 1818,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "8903:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8903:18:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "8898:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1822,
                                "name": "h",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1788,
                                "src": "8925:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "46616c7365",
                                    "id": 1824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8940:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b",
                                      "typeString": "literal_string \"False\""
                                    },
                                    "value": "False"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b",
                                      "typeString": "literal_string \"False\""
                                    }
                                  ],
                                  "id": 1823,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "8930:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8930:18:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "8925:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8898:50:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1828,
                              "name": "h",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1788,
                              "src": "8952:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "46414c5345",
                                  "id": 1830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8967:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a357fcb91396b2afa7ab60192e270c625a2eb250b8f839ddb179f207b40459b4",
                                    "typeString": "literal_string \"FALSE\""
                                  },
                                  "value": "FALSE"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_a357fcb91396b2afa7ab60192e270c625a2eb250b8f839ddb179f207b40459b4",
                                    "typeString": "literal_string \"FALSE\""
                                  }
                                ],
                                "id": 1829,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "8957:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 1831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8957:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "8952:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8898:77:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1837,
                        "nodeType": "IfStatement",
                        "src": "8881:125:11",
                        "trueBody": {
                          "expression": {
                            "expression": {
                              "id": 1834,
                              "name": "Outcome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1850,
                              "src": "8993:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Outcome_$1850_$",
                                "typeString": "type(enum IBetResolver.Outcome)"
                              }
                            },
                            "id": 1835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9001:5:11",
                            "memberName": "False",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1848,
                            "src": "8993:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Outcome_$1850",
                              "typeString": "enum IBetResolver.Outcome"
                            }
                          },
                          "functionReturnParameters": 1786,
                          "id": 1836,
                          "nodeType": "Return",
                          "src": "8986:20:11"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1838,
                            "name": "Outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1850,
                            "src": "9024:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Outcome_$1850_$",
                              "typeString": "type(enum IBetResolver.Outcome)"
                            }
                          },
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9032:12:11",
                          "memberName": "Inconclusive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1849,
                          "src": "9024:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$1850",
                            "typeString": "enum IBetResolver.Outcome"
                          }
                        },
                        "functionReturnParameters": 1786,
                        "id": 1840,
                        "nodeType": "Return",
                        "src": "9017:27:11"
                      }
                    ]
                  },
                  "id": 1842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_parseOutcome",
                  "nameLocation": "8633:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "8661:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "8647:15:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8647:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8646:17:11"
                  },
                  "returnParameters": {
                    "id": 1786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1785,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "8687:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Outcome_$1850",
                          "typeString": "enum IBetResolver.Outcome"
                        },
                        "typeName": {
                          "id": 1784,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1783,
                            "name": "Outcome",
                            "nameLocations": [
                              "8687:7:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1850,
                            "src": "8687:7:11"
                          },
                          "referencedDeclaration": 1850,
                          "src": "8687:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Outcome_$1850",
                            "typeString": "enum IBetResolver.Outcome"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8686:9:11"
                  },
                  "scope": 1843,
                  "src": "8624:427:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1844,
              "src": "913:8140:11",
              "usedErrors": [
                343,
                348,
                657
              ],
              "usedEvents": [
                354,
                1222,
                1231,
                1239,
                1247,
                1253,
                1265,
                1275
              ]
            }
          ],
          "src": "32:9022:11"
        },
        "id": 11
      },
      "contracts/IBetResolver.sol": {
        "ast": {
          "absolutePath": "contracts/IBetResolver.sol",
          "exportedSymbols": {
            "IBetResolver": [
              1861
            ]
          },
          "id": 1862,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1845,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBetResolver",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1861,
              "linearizedBaseContracts": [
                1861
              ],
              "name": "IBetResolver",
              "nameLocation": "68:12:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IBetResolver.Outcome",
                  "id": 1850,
                  "members": [
                    {
                      "id": 1846,
                      "name": "Unknown",
                      "nameLocation": "102:7:12",
                      "nodeType": "EnumValue",
                      "src": "102:7:12"
                    },
                    {
                      "id": 1847,
                      "name": "True",
                      "nameLocation": "111:4:12",
                      "nodeType": "EnumValue",
                      "src": "111:4:12"
                    },
                    {
                      "id": 1848,
                      "name": "False",
                      "nameLocation": "117:5:12",
                      "nodeType": "EnumValue",
                      "src": "117:5:12"
                    },
                    {
                      "id": 1849,
                      "name": "Inconclusive",
                      "nameLocation": "124:12:12",
                      "nodeType": "EnumValue",
                      "src": "124:12:12"
                    }
                  ],
                  "name": "Outcome",
                  "nameLocation": "92:7:12",
                  "nodeType": "EnumDefinition",
                  "src": "87:51:12"
                },
                {
                  "documentation": {
                    "id": 1851,
                    "nodeType": "StructuredDocumentation",
                    "src": "144:282:12",
                    "text": " @notice Requests to resolve a bet.\n @param betPrompt The prompt for the bet.\n @param onResolve The callback function to call when the bet is resolved. The function should have the following signature:\n   onResolve(uint256 betId, Outcome outcome)"
                  },
                  "functionSelector": "7bf13d4d",
                  "id": 1860,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "resolve",
                  "nameLocation": "440:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1858,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1853,
                        "mutability": "mutable",
                        "name": "betId",
                        "nameLocation": "465:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "457:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1852,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "457:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1855,
                        "mutability": "mutable",
                        "name": "betPrompt",
                        "nameLocation": "494:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "480:23:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1854,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "480:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1857,
                        "mutability": "mutable",
                        "name": "onResolve",
                        "nameLocation": "520:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "513:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1856,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "513:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "447:83:12"
                  },
                  "returnParameters": {
                    "id": 1859,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "547:0:12"
                  },
                  "scope": 1861,
                  "src": "431:117:12",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1862,
              "src": "58:492:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:518:12"
        },
        "id": 12
      }
    },
    "contracts": {
      "@deeptrust/contracts/dtn-defaults.sol": {
        "DtnDefaults": {
          "abi": [
            {
              "inputs": [],
              "name": "ROUTING_SYSTEM_VALIDATED_ANY_CONSTANT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760759081601d823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c63dd26fb4514602657600080fd5b6000366003190112603a5780600160209252f35b600080fdfea26469706673582212207751720dd4284b28cd580cf00fe93833ab2110834140714f0d713a67557a809264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x75 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xDD26FB45 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3A JUMPI DUP1 PUSH1 0x1 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x51720DD4284B28CD580CF00FE93833AB2110834140714F0D PUSH18 0x3A67557A809264736F6C634300081C003300 ",
              "sourceMap": "82:1412:0:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015601257600080fd5b60003560e01c63dd26fb4514602657600080fd5b6000366003190112603a5780600160209252f35b600080fdfea26469706673582212207751720dd4284b28cd580cf00fe93833ab2110834140714f0d713a67557a809264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xDD26FB45 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3A JUMPI DUP1 PUSH1 0x1 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x51720DD4284B28CD580CF00FE93833AB2110834140714F0D PUSH18 0x3A67557A809264736F6C634300081C003300 ",
              "sourceMap": "82:1412:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;82:1412:0;;;;;1490:1;82:1412;;;;;;;"
            },
            "methodIdentifiers": {
              "ROUTING_SYSTEM_VALIDATED_ANY_CONSTANT()": "dd26fb45"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ROUTING_SYSTEM_VALIDATED_ANY_CONSTANT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@deeptrust/contracts/dtn-defaults.sol\":\"DtnDefaults\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@deeptrust/contracts/dtn-defaults.sol\":{\"keccak256\":\"0x5c7fc809f8dc9db7ab07fe91ded465db1a91c2894704d5ec46c1ec18899d470d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://583c828baa407f3e8e76fa27f31b7661dff056342b0aab18c7fbb11c5d62eb9f\",\"dweb:/ipfs/QmU4hRGUauw299P3cEH8sQL3WCuJ5kNjXwMByd8t5Djkch\"]},\"@deeptrust/contracts/idtn-ai.sol\":{\"keccak256\":\"0x30d923dda31f1f160a0af143f383469f263c23b047bf4217168a2ed8b529dc88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328015e986de0022fdb56c33891ee14d8e9cc13be43fe92cd4b4d2b56239c446\",\"dweb:/ipfs/QmP5CxohVDd8YCeQ5jvvfamgfcMyQxaHhLhfTqHQuDGtj7\"]}},\"version\":1}"
        }
      },
      "@deeptrust/contracts/idtn-ai.sol": {
        "IDtnAi": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                }
              ],
              "name": "closeUserSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTarget",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                }
              ],
              "name": "fetchResponse",
              "outputs": [
                {
                  "internalType": "enum IDtnAi.ResponseStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "message",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "modelName",
                  "type": "string"
                }
              ],
              "name": "modelId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "modelId",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32[]",
                      "name": "trustNamespaceIds",
                      "type": "bytes32[]"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "trustedNodeIds",
                      "type": "bytes32[]"
                    },
                    {
                      "internalType": "uint32",
                      "name": "redundancy",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "confidenceLevel",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum IDtnAi.AggregationType",
                      "name": "aggregationType",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct IDtnAi.DtnRouting",
                  "name": "routingSystem",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "call",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraParams",
                      "type": "bytes"
                    },
                    {
                      "internalType": "enum IDtnAi.CallType",
                      "name": "calltype",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePerByteReq",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePerByteRes",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalFeePerRes",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IDtnAi.DtnRequest",
                  "name": "dtnRequest",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes4",
                      "name": "success",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "failure",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IDtnAi.CallBack",
                  "name": "callback",
                  "type": "tuple"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "callbackGas",
                  "type": "uint256"
                }
              ],
              "name": "request",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IDtnAi.ResponseStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "message",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "nodeId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "requestSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "responseSize",
                  "type": "uint256"
                }
              ],
              "name": "respondToRequest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startUserSession",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "closeUserSession(uint256)": "e2d6f51b",
              "feeTarget()": "cd3c695a",
              "feeToken()": "647846a5",
              "fetchResponse(bytes32)": "d1e4be07",
              "modelId(string)": "437172bc",
              "request(uint256,bytes32,(bytes32[],bytes32[],uint32,uint8,uint8),(bytes,bytes,uint8,uint256,uint256,uint256),(bytes4,bytes4,address),address,uint256)": "e51d6822",
              "respondToRequest(bytes32,uint8,string,bytes,bytes32,uint256,uint256)": "ce0a5187",
              "startUserSession()": "6d8de31f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"closeUserSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"fetchResponse\",\"outputs\":[{\"internalType\":\"enum IDtnAi.ResponseStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"modelName\",\"type\":\"string\"}],\"name\":\"modelId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"modelId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"trustNamespaceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"trustedNodeIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"redundancy\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"confidenceLevel\",\"type\":\"uint8\"},{\"internalType\":\"enum IDtnAi.AggregationType\",\"name\":\"aggregationType\",\"type\":\"uint8\"}],\"internalType\":\"struct IDtnAi.DtnRouting\",\"name\":\"routingSystem\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"call\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"},{\"internalType\":\"enum IDtnAi.CallType\",\"name\":\"calltype\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"feePerByteReq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePerByteRes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFeePerRes\",\"type\":\"uint256\"}],\"internalType\":\"struct IDtnAi.DtnRequest\",\"name\":\"dtnRequest\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"success\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"failure\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"internalType\":\"struct IDtnAi.CallBack\",\"name\":\"callback\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"callbackGas\",\"type\":\"uint256\"}],\"name\":\"request\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IDtnAi.ResponseStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"nodeId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requestSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"responseSize\",\"type\":\"uint256\"}],\"name\":\"respondToRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startUserSession\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"closeUserSession(uint256)\":{\"params\":{\"sessionId\":\"ID of the session to close\"}},\"fetchResponse(bytes32)\":{\"returns\":{\"message\":\"Additional message or error details\",\"response\":\"The actual response data\",\"status\":\"Response status\"}},\"request(uint256,bytes32,(bytes32[],bytes32[],uint32,uint8,uint8),(bytes,bytes,uint8,uint256,uint256,uint256),(bytes4,bytes4,address),address,uint256)\":{\"params\":{\"callback\":\"Callback information for handling response\",\"callbackGas\":\"Gas limit for callback execution\",\"dtnRequest\":\"Request parameters including call data and type\",\"modelId\":\"ID of the AI model to use\",\"routingSystem\":\"Routing system configuration\",\"sessionId\":\"Active session ID\",\"user\":\"Address of the user making the request\"},\"returns\":{\"requestId\":\"Unique identifier for the request\"}},\"respondToRequest(bytes32,uint8,string,bytes,bytes32,uint256,uint256)\":{\"params\":{\"message\":\"Additional message or error details\",\"nodeId\":\"The ID of the responding node\",\"requestId\":\"The ID of the request to respond to\",\"requestSize\":\"Size of request in bytes\",\"response\":\"The actual response data\",\"responseSize\":\"Size of response in bytes\",\"status\":\"The status of the response (0 for success)\"}},\"startUserSession()\":{\"returns\":{\"sessionId\":\"Unique identifier for the created session\"}}},\"title\":\"IDtnAi\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"closeUserSession(uint256)\":{\"notice\":\"Closes an active user session\"},\"fetchResponse(bytes32)\":{\"notice\":\"Fetches the response from the last AI request\"},\"request(uint256,bytes32,(bytes32[],bytes32[],uint32,uint8,uint8),(bytes,bytes,uint8,uint256,uint256,uint256),(bytes4,bytes4,address),address,uint256)\":{\"notice\":\"Makes an AI request\"},\"respondToRequest(bytes32,uint8,string,bytes,bytes32,uint256,uint256)\":{\"notice\":\"Responds to an AI request\"},\"startUserSession()\":{\"notice\":\"Starts a new user session with specified token amount\"}},\"notice\":\"Interface for DtnAI, defining the core AI interaction methods\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@deeptrust/contracts/idtn-ai.sol\":\"IDtnAi\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@deeptrust/contracts/idtn-ai.sol\":{\"keccak256\":\"0x30d923dda31f1f160a0af143f383469f263c23b047bf4217168a2ed8b529dc88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328015e986de0022fdb56c33891ee14d8e9cc13be43fe92cd4b4d2b56239c446\",\"dweb:/ipfs/QmP5CxohVDd8YCeQ5jvvfamgfcMyQxaHhLhfTqHQuDGtj7\"]}},\"version\":1}"
        },
        "IDtnAiModels": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "modelName",
                  "type": "string"
                }
              ],
              "name": "modelId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "modelId(string)": "437172bc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"modelName\",\"type\":\"string\"}],\"name\":\"modelId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@deeptrust/contracts/idtn-ai.sol\":\"IDtnAiModels\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@deeptrust/contracts/idtn-ai.sol\":{\"keccak256\":\"0x30d923dda31f1f160a0af143f383469f263c23b047bf4217168a2ed8b529dc88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328015e986de0022fdb56c33891ee14d8e9cc13be43fe92cd4b4d2b56239c446\",\"dweb:/ipfs/QmP5CxohVDd8YCeQ5jvvfamgfcMyQxaHhLhfTqHQuDGtj7\"]}},\"version\":1}"
        }
      },
      "@deeptrust/contracts/with-dtn-ai.sol": {
        "WithDtnAi": {
          "abi": [
            {
              "inputs": [],
              "name": "ai",
              "outputs": [
                {
                  "internalType": "contract IDtnAi",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "ai()": "68be1b1e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ai\",\"outputs\":[{\"internalType\":\"contract IDtnAi\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"WithDtnAi\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implement this interface to use DtnAI\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@deeptrust/contracts/with-dtn-ai.sol\":\"WithDtnAi\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@deeptrust/contracts/idtn-ai.sol\":{\"keccak256\":\"0x30d923dda31f1f160a0af143f383469f263c23b047bf4217168a2ed8b529dc88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328015e986de0022fdb56c33891ee14d8e9cc13be43fe92cd4b4d2b56239c446\",\"dweb:/ipfs/QmP5CxohVDd8YCeQ5jvvfamgfcMyQxaHhLhfTqHQuDGtj7\"]},\"@deeptrust/contracts/with-dtn-ai.sol\":{\"keccak256\":\"0xa525462bced20557758c1b84fbcc730ee35a1075b13c6258c7931fcc3cd3337e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae28a7e7cdb6c56b405f3e01e20273d5c76caac25f2f3399c38ec7a9ba253f5\",\"dweb:/ipfs/QmZJtHfpupE8FvfaEm7HUEjoSEi2z77hJK7brWeMokUNdt\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122097d158919503a9f0dd4ce4d5b297198cb95751be8560901308772f4ff5b8434a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xD1 PC SWAP2 SWAP6 SUB 0xA9 CREATE 0xDD 0x4C 0xE4 0xD5 0xB2 SWAP8 NOT DUP13 0xB9 JUMPI MLOAD 0xBE DUP6 PUSH1 0x90 SGT ADDMOD PUSH24 0x2F4FF5B8434A64736F6C634300081C003300000000000000 ",
              "sourceMap": "698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122097d158919503a9f0dd4ce4d5b297198cb95751be8560901308772f4ff5b8434a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xD1 PC SWAP2 SWAP6 SUB 0xA9 CREATE 0xDD 0x4C 0xE4 0xD5 0xB2 SWAP8 NOT DUP13 0xB9 JUMPI MLOAD 0xBE DUP6 PUSH1 0x90 SGT ADDMOD PUSH24 0x2F4FF5B8434A64736F6C634300081C003300000000000000 ",
              "sourceMap": "698:9376:8:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "contracts/BetResolver.sol": {
        "BetResolver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "betId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "BetResolutionCallbackFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "betId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "message",
                  "type": "string"
                }
              ],
              "name": "BetResolutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "betId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum IBetResolver.Outcome",
                  "name": "outcome",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "rawResult",
                  "type": "string"
                }
              ],
              "name": "BetResolved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "dtnAi",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "systemPrompt1",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "systemPrompt2",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "modelName",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "nodeName",
                  "type": "string"
                }
              ],
              "name": "ConfigUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feePerByteReq",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feePerByteRes",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalFeePerRes",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "resolutionGasLimit",
                  "type": "uint256"
                }
              ],
              "name": "FeesUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "betId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                }
              ],
              "name": "ResolveRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "sessionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fundedAmount",
                  "type": "uint256"
                }
              ],
              "name": "SessionRestarted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ai",
              "outputs": [
                {
                  "internalType": "contract IDtnAi",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "betMarket",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "bets",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "requestId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IBetResolver.Outcome",
                  "name": "outcome",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4",
                  "name": "onResolve",
                  "type": "bytes4"
                },
                {
                  "internalType": "string",
                  "name": "aiRawResult",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "aiError",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_requestId",
                  "type": "bytes32"
                }
              ],
              "name": "callbackResolve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_requestId",
                  "type": "bytes32"
                }
              ],
              "name": "callbackResolveError",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_betMarket",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_dtnAi",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_systemPrompt1",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_systemPrompt2",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_modelName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_nodeName",
                  "type": "string"
                }
              ],
              "name": "configure",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feePerByteReq",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feePerByteRes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "modelName",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nodeName",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "requestToBet",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resolutionGasLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "betId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "betPrompt",
                  "type": "string"
                },
                {
                  "internalType": "bytes4",
                  "name": "onResolve",
                  "type": "bytes4"
                }
              ],
              "name": "resolve",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "restartSession",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sessionId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_feePerByteReq",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_feePerByteRes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalFeePerRes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_resolutionGasLimit",
                  "type": "uint256"
                }
              ],
              "name": "setFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "systemPrompt1",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "systemPrompt2",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeePerRes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080346100e957601f61268638819003918201601f19168301916001600160401b038311848410176100ee578084926020946040528339810103126100e957516001600160a01b038116908190036100e95780156100d357600180546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a366038d7ea4c68000600a5566038d7ea4c68000600b55670de0b6b3a7640000600c5562061a80600d5561258190816101058239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c806322af00fa14611e07578063288d29dc14611ac057806330a9056f1461144a57806331a9b1041461142c578063321653461461140e57806368be1b1e146113e75780636a924cbd146113cb5780636fcba37714611359578063715018a6146112fc578063795769e514610fdb5780637bf13d4d1461060157806384cc5c26146105e55780638da5cb5b146105bc5780639648c9f41461059e5780639d648d6714610580578063a6edb342146104eb578063a81675c71461042a578063c8b894a314610400578063cfe152c0146103d7578063daf81269146103b9578063f2fde38b146103305763fa2b94431461010f57600080fd5b3461032d57602036600319011261032d5780546004359060249083906001600160a01b031661013f3382146121c6565b6040519283809263d1e4be0760e01b82528660048301525afa9081156103225783916102fd575b50818352600460205260408320549081845260036020526003604085200181516001600160401b0381116102e95761019e8254611e89565b601f81116102a4575b506020601f821160011461021e5791817f70685f7cbeda2418040e1bd2e3e95cdda3133b1a80ea33ccaa06ce38c7c040bb949261020d948991610213575b508160011b916000199060031b1c19161790555b604051918291602083526020830190612129565b0390a380f35b9050830151386101e5565b82875280872090601f198316885b81811061028c57509261020d9492600192827f70685f7cbeda2418040e1bd2e3e95cdda3133b1a80ea33ccaa06ce38c7c040bb989610610273575b5050811b0190556101f9565b85015160001960f88460031b161c191690553880610267565b9192602060018192868a01518155019401920161022c565b82875260208720601f830160051c810191602084106102df575b601f0160051c01905b8181106102d457506101a7565b8781556001016102c7565b90915081906102be565b634e487b7160e01b86526041600452602486fd5b61031991503d8085833e6103118183611ef4565b810190612264565b50905038610166565b6040513d85823e3d90fd5b80fd5b503461032d57602036600319011261032d5761034a61214e565b6103526124a2565b6001600160a01b031680156103a557600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461032d578060031936011261032d576020600a54604051908152f35b503461032d578060031936011261032d576002546040516001600160a01b039091168152602090f35b503461032d57602036600319011261032d5760406020916004358152600483522054604051908152f35b503461032d578060031936011261032d5760405190806008549061044d82611e89565b80855291600181169081156104c45750600114610479575b610475846101f981860382611ef4565b0390f35b600881526000805160206124ec833981519152939250905b8082106104aa575090915081016020016101f982610465565b919260018160209254838588010152019101909291610491565b60ff191660208087019190915292151560051b850190920192506101f99150839050610465565b503461032d578060031936011261032d5760405190806009549061050e82611e89565b80855291600181169081156104c4575060011461053557610475846101f981860382611ef4565b6009815260008051602061250c833981519152939250905b808210610566575090915081016020016101f982610465565b91926001816020925483858801015201910190929161054d565b503461032d578060031936011261032d576020600c54604051908152f35b503461032d578060031936011261032d576020600554604051908152f35b503461032d578060031936011261032d576001546040516001600160a01b039091168152602090f35b503461032d578060031936011261032d576104756101f9611fbc565b50606036600319011261032d576024356001600160401b038111610fd75761062d90369060040161217f565b906044356001600160e01b031981168103610fd75760043515610fa257825115610f69576001600160e01b0319811615610f30576002546001600160a01b03163303610efa57600d5490813410610ec2576080906040519461068f8387611ef4565b60038652601f198301855b818110610eb15750506106ab611fbc565b6106b487612302565b526106be86612302565b506106c886612325565b526106d285612325565b506106db611f15565b6106e486612335565b526106ee85612335565b50604080516106fd8282611ef4565b60018152601f1982013660208301378151602081019087816009549161072283611e89565b9260018116908115610e965750600114610e4d575b61074a925003601f198101835282611ef4565b51902061075682612302565b528584835161076481611ec3565b60608152606060208201528285820152826060820152015260209682519161078c8984611ef4565b87835260003681378351926107a084611ec3565b83528883015260018383015260086060830152868583015282519081848101918a80830152805180935260608201928b60608260051b8501019201938b905b8d838310610e2157505050506107fe925003601f198101835282611ef4565b600a54600b54600c54918551938460c08101106001600160401b0360c087011117610e0d5760c085018752845285516108378c82611ef4565b8a81528b85015260018685015260608401528683015260a08201528251958660608101106001600160401b03606089011117610df957606087018452630a234a7760e21b875263fa2b944360e01b89880152308488015283516008548a9082908b906108a281611e89565b9060018116908115610ddb5750600114610da0575b506108cb925003601f198101835282611ef4565b8981519101209660018060a01b03895416936005549886519963728eb41160e11b8b5260048b015260248a015261012060448a01528761093461091d8b60a061012486519201526101c48d0190612345565b838e01518c820361012319016101448e0152612345565b9163ffffffff88820151166101648c015260ff6060820151166101848c015201516005811015610d8c576101a48a01526003198982030160648a0152610996610986855160c0845260c0840190612129565b858d0151838203848f0152612129565b93868101516002811015610d78578783015260608082015190830152888101518983015260a09081015191015280516001600160e01b031990811660848a01528a8201511660a48901528401516001600160a01b031660c48801523360e48801526101048701528791869182900390829034905af1938415610d6e578594610d3b575b508385526004865260043581862055805191610a3483611ec3565b8483528683018681526001600160e01b0319909116828401908152825192610a5c8985611ef4565b87845260608501938452805195610a738a88611ef4565b88875285019586526004358852600389528720935184556001840191516004811015610d2757610aa390836122cb565b51815464ffffffff00191660d89190911c64ffffffff001617905551805160028301916001600160401b038211610d1357610ade8354611e89565b601f8111610cd0575b508790601f8311600114610c6a57600394939291889183610c5f575b50508160011b9160001990861b1c19161790555b019051938451906001600160401b038211610c4b57610b368354611e89565b601f8111610c08575b5080601f8311600114610ba3575084958293949592610b98575b50508160011b916000199060031b1c19161790555b6004357fcefd1532ce99545b2ecdecfe9555dbb5f55800cf824606d71bd0b0e3fb54f52e8380a380f35b015190503880610b59565b90601f198316968487528287209287905b898210610bf05750508360019596979810610bd7575b505050811b019055610b6e565b015160001960f88460031b161c19169055388080610bca565b80600185968294968601518155019501930190610bb4565b838652818620601f840160051c810191838510610c41575b601f0160051c01905b818110610c365750610b3f565b868155600101610c29565b9091508190610c20565b634e487b7160e01b85526041600452602485fd5b015190503880610b03565b8388528888209190601f198416895b8b828210610cba57505091600193918560039897969410610ca2575b505050811b019055610b17565b015160001983881b60f8161c19169055388080610c95565b6001859682939686015181550195019301610c79565b838852888820601f840160051c8101918a8510610d09575b601f0160051c01905b818110610cfe5750610ae7565b888155600101610cf1565b9091508190610ce8565b634e487b7160e01b87526041600452602487fd5b634e487b7160e01b88526021600452602488fd5b9093508581813d8311610d67575b610d538183611ef4565b81010312610d6357519238610a19565b8480fd5b503d610d49565b81513d87823e3d90fd5b634e487b7160e01b8c52602160045260248cfd5b634e487b7160e01b8b52602160045260248bfd5b905060088c52828c208c905b828210610dc4575050916108cb928201018c926108b7565b805486830186015285935090840190600101610dac565b60ff191684860152508d9381151590910283010190506108cb6108b7565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b8b52604160045260248bfd5b8091939550610e3d60019395605f198a82030186528851612129565b96019201920185939194926107df565b505060098952818960008051602061250c8339815191525b838210610e7c575050602061074a92820101610737565b602091925080600191548385880101520191018391610e65565b60ff191686525061074a928015150282016020019050610737565b806060602080938b0101520161069a565b60405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742067617360801b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270696e76616c6964206f6e5265736f6c766560781b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a590818995d141c9bdb5c1d607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a590818995d1259609a1b6044820152606490fd5b5080fd5b503461032d578060031936011261032d57610ff46124a2565b80600554806112a5575b5050805460405163647846a560e01b81526001600160a01b0390911690602081600481855afa908115610322578391611286575b506040516370a0823160e01b8152306004820152916001600160a01b039190911690602083602481855afa92831561127b578493611247575b508215611212578360206004926040519384809263669e34ad60e11b82525afa80156112055760209282916111d8575b5060405163a9059cbb60e01b8482019081526001600160a01b039092166024820152604480820187905281526110d2606482611ef4565b519082855af1156111cd5782513d6111c45750803b155b6111b257508154604051636d8de31f60e01b8152906020908290600490829087906001600160a01b03165af190811561032257839161115b575b50807f82efe7218a4d776c25c08af33123acef8998c9049484a73357d0dd8ed91ff9dd9260409260055582519182526020820152a180f35b90506020813d6020116111aa575b8161117660209383611ef4565b810103126111a557517f82efe7218a4d776c25c08af33123acef8998c9049484a73357d0dd8ed91ff9dd611123565b600080fd5b3d9150611169565b635274afe760e01b8352600452602482fd5b600114156110e9565b6040513d84823e3d90fd5b6111f89150833d85116111fe575b6111f08183611ef4565b8101906122e3565b3861109b565b503d6111e6565b50604051903d90823e3d90fd5b60405162461bcd60e51b815260206004820152600d60248201526c4e6f2066656520746f6b656e7360981b6044820152606490fd5b9092506020813d602011611273575b8161126360209383611ef4565b810103126111a55751913861106b565b3d9150611256565b6040513d86823e3d90fd5b61129f915060203d6020116111fe576111f08183611ef4565b38611032565b81546001600160a01b031690813b156112f857829160248392604051958693849263e2d6f51b60e01b845260048401525af18015611205576112e8575b90610ffe565b6112f191611ef4565b38816112e2565b5050fd5b503461032d578060031936011261032d576113156124a2565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461032d57608036600319011261032d577f16e6f67290546b8dd0e587f4b7f67d4f61932ae17ffd8c60d3509dbc05c175fe60806004356064356044356024356113a26124a2565b83600a5580600b5581600c5582600d55604051938452602084015260408301526060820152a180f35b503461032d578060031936011261032d576104756101f9611f15565b503461032d578060031936011261032d57546040516001600160a01b039091168152602090f35b503461032d578060031936011261032d576020600d54604051908152f35b503461032d578060031936011261032d576020600b54604051908152f35b503461032d5760c036600319011261032d5761146461214e565b906024356001600160a01b03811690819003610fd7576044356001600160401b038111611abc5761149990369060040161217f565b906064356001600160401b038111611ab8576114b990369060040161217f565b936084356001600160401b038111610d63576114d990369060040161217f565b60a4356001600160401b038111611ab4576114f890369060040161217f565b916115016124a2565b836bffffffffffffffffffffffff60a01b87541617865560018060a01b03166bffffffffffffffffffffffff60a01b600254161760025583516001600160401b0381116102e957611553600654611e89565b601f8111611a49575b50806020601f82116001146119da5787916119cf575b508160011b916000199060031b1c1916176006555b85516001600160401b0381116102e9576115a2600754611e89565b601f8111611964575b50806020601f82116001146118f35787916118e8575b508160011b916000199060031b1c1916176007555b80516001600160401b0381116102e9576115f1600854611e89565b601f811161187d575b50806020601f821160011461180e578791611803575b508160011b916000199060031b1c1916176008555b8151956001600160401b0387116102e957611641600954611e89565b601f8111611798575b50602096601f81116001146116fd57916116d06116de92846116ec96958a9b7fb189524b4a4d28735ed1e814418b9bde84ef638c0a2eea241e624e9a122904f49b916116f2575b508160011b916000199060031b1c1916176009555b6116c2604051988998895260a060208a015260a0890190612129565b908782036040890152612129565b908582036060870152612129565b908382036080850152612129565b0390a180f35b905086015138611691565b6009875260008051602061250c833981519152601f198216885b8181106117805750926001836116d0937fb189524b4a4d28735ed1e814418b9bde84ef638c0a2eea241e624e9a122904f49b9c6116ec9998966116de9810611767575b5050811b016009556116a6565b88015160001960f88460031b161c19169055388061175a565b868b0151835560209a8b019a60019093019201611717565b60098752601f880160051c60008051602061250c8339815191520190602089106117ed575b601f0160051c60008051602061250c83398151915201905b8181106117e2575061164a565b8781556001016117d5565b60008051602061250c83398151915291506117bd565b905082015138611610565b600888526000805160206124ec8339815191529150601f198316885b8181106118655750908360019493921061184c575b5050811b01600855611625565b84015160001960f88460031b161c19169055388061183f565b9192602060018192868901518155019401920161182a565b60088752601f820160051c6000805160206124ec8339815191520190602083106118d2575b601f0160051c6000805160206124ec83398151915201905b8181106118c757506115fa565b8781556001016118ba565b6000805160206124ec83398151915291506118a2565b9050870151386115c1565b600788526000805160206124cc8339815191529150601f198316885b8a82821061194c5750509083600194939210611933575b5050811b016007556115d6565b89015160001960f88460031b161c191690553880611926565b6001849560209395849301518155019401920161190f565b60078752601f820160051c6000805160206124cc8339815191520190602083106119b9575b601f0160051c6000805160206124cc83398151915201905b8181106119ae57506115ab565b8781556001016119a1565b6000805160206124cc8339815191529150611989565b905085015138611572565b6006885260008051602061252c8339815191529150601f198316885b818110611a3157509083600194939210611a18575b5050811b01600655611587565b87015160001960f88460031b161c191690553880611a0b565b9192602060018192868c0151815501940192016119f6565b60068752601f820160051c60008051602061252c833981519152019060208310611a9e575b601f0160051c60008051602061252c83398151915201905b818110611a93575061155c565b878155600101611a86565b60008051602061252c8339815191529150611a6e565b8580fd5b8380fd5b8280fd5b503461032d57602036600319011261032d5780546004359060249083906001600160a01b0316611af13382146121c6565b6040519283809263d1e4be0760e01b82528660048301525afa908115610322578391611dea575b508051810190602081830312611ab8576020810151916001600160401b038311610d6357611b4d926020809201920101612247565b611b5681612379565b90828452600460205260408420549283855260036020526040852060026001820191611b908663ffffffff60e01b855460d81b16946122cb565b0183516001600160401b038111610df95791818793611bb08a9454611e89565b601f8111611d93575b506020601f8211600114611cfd57937f4cdfd2dabd9bcce8c3b563affcc5fbecb1b95914a0f02da623a9fcf5f13b0d9b989693611ca09693838394611c8f9b988591611cf2575b508160011b916000199060031b1c19161790555b60018060a01b0360025416908260405160208101928352866024820152611c3e604482018c6120e3565b60448152611c4d606482611ef4565b51925af13d15611cea573d90611c6282612164565b91611c706040519384611ef4565b82523d8b602084013e5b15611ca6575b505050604051938480946120e3565b604060208401526040830190612129565b0390a280f35b611cdf7fe9c0294b4419b2194cbe1d9f814a03250327281e6e123b1e7288822710d8a8bf91604051918291602083526020830190612129565b0390a3388681611c80565b606090611c7a565b905088015138611c00565b82855280852090601f198316865b818110611d755750936001848895947f4cdfd2dabd9bcce8c3b563affcc5fbecb1b95914a0f02da623a9fcf5f13b0d9b9d9b9894611c8f9d9a96611ca09c9910611d5c575b5050811b019055611c14565b8a015160001960f88460031b161c191690553880611d50565b8a83015184558c98508d975060019093019260209283019201611d0b565b919384919395505260208920601f830160051c81019160208410611de0575b9189959391601f8c96940160051c01905b818110611dd05750611bb9565b9485558995508a94600101611dc3565b9091508190611db2565b611dfe91503d8085833e6103118183611ef4565b91505038611b18565b503461032d57602036600319011261032d57604090600435815260036020522080546104756001830154926116de611e4d6003611e4660028501612041565b9301612041565b916040519586958652611e666020870160ff83166120e3565b60d81b6001600160e01b031916604086015260a060608601819052850190612129565b90600182811c92168015611eb9575b6020831014611ea357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e98565b60a081019081106001600160401b03821117611ede57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117611ede57604052565b6040519060008260075491611f2983611e89565b8083529260018116908115611f9d5750600114611f4f575b611f4d92500383611ef4565b565b506007600090815290916000805160206124cc8339815191525b818310611f81575050906020611f4d92820101611f41565b6020919350806001915483858901015201910190918492611f69565b60209250611f4d94915060ff191682840152151560051b820101611f41565b6040519060008260065491611fd083611e89565b8083529260018116908115611f9d5750600114611ff357611f4d92500383611ef4565b5060066000908152909160008051602061252c8339815191525b818310612025575050906020611f4d92820101611f41565b602091935080600191548385890101520191019091849261200d565b906040519182600082549261205584611e89565b80845293600181169081156120c1575060011461207a575b50611f4d92500383611ef4565b90506000929192526020600020906000915b8183106120a5575050906020611f4d928201013861206d565b602091935080600191548385890101520191019091849261208c565b905060209250611f4d94915060ff191682840152151560051b8201013861206d565b9060048210156120f05752565b634e487b7160e01b600052602160045260246000fd5b60005b8381106121195750506000910152565b8181015183820152602001612109565b9060209161214281518092818552858086019101612106565b601f01601f1916010190565b600435906001600160a01b03821682036111a557565b6001600160401b038111611ede57601f01601f191660200190565b81601f820112156111a55780359061219682612164565b926121a46040519485611ef4565b828452602083830101116111a557816000926020809301838601378301015290565b156121cd57565b60405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792044746e2063616e2063616c6c20746869732066756e6374696f6e006044820152606490fd5b9092919261221f81612164565b9161222d6040519384611ef4565b8294828452828201116111a5576020611f4d930190612106565b9080601f830112156111a557815161226192602001612212565b90565b90916060828403126111a557815160038110156111a5579260208301516001600160401b0381116111a5578161229b918501612247565b926040810151906001600160401b0382116111a557019080601f830112156111a557815161226192602001612212565b9060048110156120f05760ff80198354169116179055565b908160209103126111a557516001600160a01b03811681036111a55790565b80511561230f5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561230f5760400190565b80516002101561230f5760600190565b906020808351928381520192019060005b8181106123635750505090565b8251845260209384019390920191600101612356565b602081519101207f6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc03481148015612479575b8015612450575b61244a577fba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a8114908115612420575b81156123f6575b506123f157600390565b600290565b7fa357fcb91396b2afa7ab60192e270c625a2eb250b8f839ddb179f207b40459b4915014386123e7565b7fa2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b811491506123e0565b50600190565b507f7749ed7587e6dbf171ce6be50bea67236732d7ccfd51e327bc28b612ec06faa781146123b1565b507f23025ebdc5cdfc5bdfe2d2c2a52d7e7f374f5c135d6d47e3c935c86567e86a5381146123aa565b6001546001600160a01b031633036124b657565b63118cdaa760e01b6000523360045260246000fdfea66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688f3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7aff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3fa264697066735822122021bd7399c88d6c43537956bfd535d6eaa29ec233077aa20be66b4b3abdd64e0164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x1F PUSH2 0x2686 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xEE JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xE9 JUMPI DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH7 0x38D7EA4C68000 PUSH1 0xA SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0xB SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xC SSTORE PUSH3 0x61A80 PUSH1 0xD SSTORE PUSH2 0x2581 SWAP1 DUP2 PUSH2 0x105 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22AF00FA EQ PUSH2 0x1E07 JUMPI DUP1 PUSH4 0x288D29DC EQ PUSH2 0x1AC0 JUMPI DUP1 PUSH4 0x30A9056F EQ PUSH2 0x144A JUMPI DUP1 PUSH4 0x31A9B104 EQ PUSH2 0x142C JUMPI DUP1 PUSH4 0x32165346 EQ PUSH2 0x140E JUMPI DUP1 PUSH4 0x68BE1B1E EQ PUSH2 0x13E7 JUMPI DUP1 PUSH4 0x6A924CBD EQ PUSH2 0x13CB JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x1359 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12FC JUMPI DUP1 PUSH4 0x795769E5 EQ PUSH2 0xFDB JUMPI DUP1 PUSH4 0x7BF13D4D EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x84CC5C26 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x9648C9F4 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x9D648D67 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xA6EDB342 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xA81675C7 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xC8B894A3 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xCFE152C0 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xDAF81269 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH4 0xFA2B9443 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI DUP1 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F CALLER DUP3 EQ PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD1E4BE07 PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x2FD JUMPI JUMPDEST POP DUP2 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP1 DUP2 DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 DUP6 KECCAK256 ADD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x19E DUP3 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2A4 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x21E JUMPI SWAP2 DUP2 PUSH32 0x70685F7CBEDA2418040E1BD2E3E95CDDA3133B1A80EA33CCAA06CE38C7C040BB SWAP5 SWAP3 PUSH2 0x20D SWAP5 DUP10 SWAP2 PUSH2 0x213 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0x1E5 JUMP JUMPDEST DUP3 DUP8 MSTORE DUP1 DUP8 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x28C JUMPI POP SWAP3 PUSH2 0x20D SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH32 0x70685F7CBEDA2418040E1BD2E3E95CDDA3133B1A80EA33CCAA06CE38C7C040BB SWAP9 SWAP7 LT PUSH2 0x273 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F9 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x267 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x22C JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2DF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2D4 JUMPI POP PUSH2 0x1A7 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x319 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x311 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2264 JUMP JUMPDEST POP SWAP1 POP CODESIZE PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH2 0x34A PUSH2 0x214E JUMP JUMPDEST PUSH2 0x352 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x44D DUP3 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x479 JUMPI JUMPDEST PUSH2 0x475 DUP5 PUSH2 0x1F9 DUP2 DUP7 SUB DUP3 PUSH2 0x1EF4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x4AA JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1F9 DUP3 PUSH2 0x465 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x491 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1F9 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x465 JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x50E DUP3 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x535 JUMPI PUSH2 0x475 DUP5 PUSH2 0x1F9 DUP2 DUP7 SUB DUP3 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x566 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1F9 DUP3 PUSH2 0x465 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x54D JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0x475 PUSH2 0x1F9 PUSH2 0x1FBC JUMP JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xFD7 JUMPI PUSH2 0x62D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xFD7 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0xFA2 JUMPI DUP3 MLOAD ISZERO PUSH2 0xF69 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND ISZERO PUSH2 0xF30 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xEFA JUMPI PUSH1 0xD SLOAD SWAP1 DUP2 CALLVALUE LT PUSH2 0xEC2 JUMPI PUSH1 0x80 SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x68F DUP4 DUP8 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x3 DUP7 MSTORE PUSH1 0x1F NOT DUP4 ADD DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xEB1 JUMPI POP POP PUSH2 0x6AB PUSH2 0x1FBC JUMP JUMPDEST PUSH2 0x6B4 DUP8 PUSH2 0x2302 JUMP JUMPDEST MSTORE PUSH2 0x6BE DUP7 PUSH2 0x2302 JUMP JUMPDEST POP PUSH2 0x6C8 DUP7 PUSH2 0x2325 JUMP JUMPDEST MSTORE PUSH2 0x6D2 DUP6 PUSH2 0x2325 JUMP JUMPDEST POP PUSH2 0x6DB PUSH2 0x1F15 JUMP JUMPDEST PUSH2 0x6E4 DUP7 PUSH2 0x2335 JUMP JUMPDEST MSTORE PUSH2 0x6EE DUP6 PUSH2 0x2335 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x6FD DUP3 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x1F NOT DUP3 ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP2 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP8 DUP2 PUSH1 0x9 SLOAD SWAP2 PUSH2 0x722 DUP4 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE96 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE4D JUMPI JUMPDEST PUSH2 0x74A SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1EF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x756 DUP3 PUSH2 0x2302 JUMP JUMPDEST MSTORE DUP6 DUP5 DUP4 MLOAD PUSH2 0x764 DUP2 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x20 SWAP7 DUP3 MLOAD SWAP2 PUSH2 0x78C DUP10 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST DUP8 DUP4 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY DUP4 MLOAD SWAP3 PUSH2 0x7A0 DUP5 PUSH2 0x1EC3 JUMP JUMPDEST DUP4 MSTORE DUP9 DUP4 ADD MSTORE PUSH1 0x1 DUP4 DUP4 ADD MSTORE PUSH1 0x8 PUSH1 0x60 DUP4 ADD MSTORE DUP7 DUP6 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 DUP5 DUP2 ADD SWAP2 DUP11 DUP1 DUP4 ADD MSTORE DUP1 MLOAD DUP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP12 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 ADD SWAP4 DUP12 SWAP1 JUMPDEST DUP14 DUP4 DUP4 LT PUSH2 0xE21 JUMPI POP POP POP POP PUSH2 0x7FE SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD SWAP2 DUP6 MLOAD SWAP4 DUP5 PUSH1 0xC0 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 DUP8 ADD GT OR PUSH2 0xE0D JUMPI PUSH1 0xC0 DUP6 ADD DUP8 MSTORE DUP5 MSTORE DUP6 MLOAD PUSH2 0x837 DUP13 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST DUP11 DUP2 MSTORE DUP12 DUP6 ADD MSTORE PUSH1 0x1 DUP7 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP7 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MLOAD SWAP6 DUP7 PUSH1 0x60 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x60 DUP10 ADD GT OR PUSH2 0xDF9 JUMPI PUSH1 0x60 DUP8 ADD DUP5 MSTORE PUSH4 0xA234A77 PUSH1 0xE2 SHL DUP8 MSTORE PUSH4 0xFA2B9443 PUSH1 0xE0 SHL DUP10 DUP9 ADD MSTORE ADDRESS DUP5 DUP9 ADD MSTORE DUP4 MLOAD PUSH1 0x8 SLOAD DUP11 SWAP1 DUP3 SWAP1 DUP12 SWAP1 PUSH2 0x8A2 DUP2 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xDDB JUMPI POP PUSH1 0x1 EQ PUSH2 0xDA0 JUMPI JUMPDEST POP PUSH2 0x8CB SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1EF4 JUMP JUMPDEST DUP10 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 SLOAD AND SWAP4 PUSH1 0x5 SLOAD SWAP9 DUP7 MLOAD SWAP10 PUSH4 0x728EB411 PUSH1 0xE1 SHL DUP12 MSTORE PUSH1 0x4 DUP12 ADD MSTORE PUSH1 0x24 DUP11 ADD MSTORE PUSH2 0x120 PUSH1 0x44 DUP11 ADD MSTORE DUP8 PUSH2 0x934 PUSH2 0x91D DUP12 PUSH1 0xA0 PUSH2 0x124 DUP7 MLOAD SWAP3 ADD MSTORE PUSH2 0x1C4 DUP14 ADD SWAP1 PUSH2 0x2345 JUMP JUMPDEST DUP4 DUP15 ADD MLOAD DUP13 DUP3 SUB PUSH2 0x123 NOT ADD PUSH2 0x144 DUP15 ADD MSTORE PUSH2 0x2345 JUMP JUMPDEST SWAP2 PUSH4 0xFFFFFFFF DUP9 DUP3 ADD MLOAD AND PUSH2 0x164 DUP13 ADD MSTORE PUSH1 0xFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH2 0x184 DUP13 ADD MSTORE ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xD8C JUMPI PUSH2 0x1A4 DUP11 ADD MSTORE PUSH1 0x3 NOT DUP10 DUP3 SUB ADD PUSH1 0x64 DUP11 ADD MSTORE PUSH2 0x996 PUSH2 0x986 DUP6 MLOAD PUSH1 0xC0 DUP5 MSTORE PUSH1 0xC0 DUP5 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST DUP6 DUP14 ADD MLOAD DUP4 DUP3 SUB DUP5 DUP16 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SWAP4 DUP7 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xD78 JUMPI DUP8 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP10 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x84 DUP11 ADD MSTORE DUP11 DUP3 ADD MLOAD AND PUSH1 0xA4 DUP10 ADD MSTORE DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC4 DUP9 ADD MSTORE CALLER PUSH1 0xE4 DUP9 ADD MSTORE PUSH2 0x104 DUP8 ADD MSTORE DUP8 SWAP2 DUP7 SWAP2 DUP3 SWAP1 SUB SWAP1 DUP3 SWAP1 CALLVALUE SWAP1 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xD6E JUMPI DUP6 SWAP5 PUSH2 0xD3B JUMPI JUMPDEST POP DUP4 DUP6 MSTORE PUSH1 0x4 DUP7 MSTORE PUSH1 0x4 CALLDATALOAD DUP2 DUP7 KECCAK256 SSTORE DUP1 MLOAD SWAP2 PUSH2 0xA34 DUP4 PUSH2 0x1EC3 JUMP JUMPDEST DUP5 DUP4 MSTORE DUP7 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP3 DUP5 ADD SWAP1 DUP2 MSTORE DUP3 MLOAD SWAP3 PUSH2 0xA5C DUP10 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 DUP5 MSTORE DUP1 MLOAD SWAP6 PUSH2 0xA73 DUP11 DUP9 PUSH2 0x1EF4 JUMP JUMPDEST DUP9 DUP8 MSTORE DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x4 CALLDATALOAD DUP9 MSTORE PUSH1 0x3 DUP10 MSTORE DUP8 KECCAK256 SWAP4 MLOAD DUP5 SSTORE PUSH1 0x1 DUP5 ADD SWAP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xAA3 SWAP1 DUP4 PUSH2 0x22CB JUMP JUMPDEST MLOAD DUP2 SLOAD PUSH5 0xFFFFFFFF00 NOT AND PUSH1 0xD8 SWAP2 SWAP1 SWAP2 SHR PUSH5 0xFFFFFFFF00 AND OR SWAP1 SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD13 JUMPI PUSH2 0xADE DUP4 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCD0 JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC6A JUMPI PUSH1 0x3 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 DUP4 PUSH2 0xC5F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP7 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST ADD SWAP1 MLOAD SWAP4 DUP5 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC4B JUMPI PUSH2 0xB36 DUP4 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC08 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBA3 JUMPI POP DUP5 SWAP6 DUP3 SWAP4 SWAP5 SWAP6 SWAP3 PUSH2 0xB98 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH32 0xCEFD1532CE99545B2ECDECFE9555DBB5F55800CF824606D71BD0B0E3FB54F52E DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB59 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP7 DUP5 DUP8 MSTORE DUP3 DUP8 KECCAK256 SWAP3 DUP8 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH2 0xBF0 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0xBD7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB6E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xBCA JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xBB4 JUMP JUMPDEST DUP4 DUP7 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xC41 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC36 JUMPI POP PUSH2 0xB3F JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC29 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB03 JUMP JUMPDEST DUP4 DUP9 MSTORE DUP9 DUP9 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP12 DUP3 DUP3 LT PUSH2 0xCBA JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x3 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0xCA2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB17 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xC79 JUMP JUMPDEST DUP4 DUP9 MSTORE DUP9 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP11 DUP6 LT PUSH2 0xD09 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xCFE JUMPI POP PUSH2 0xAE7 JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 SWAP4 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD67 JUMPI JUMPDEST PUSH2 0xD53 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD63 JUMPI MLOAD SWAP3 CODESIZE PUSH2 0xA19 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xD49 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 POP PUSH1 0x8 DUP13 MSTORE DUP3 DUP13 KECCAK256 DUP13 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xDC4 JUMPI POP POP SWAP2 PUSH2 0x8CB SWAP3 DUP3 ADD ADD DUP13 SWAP3 PUSH2 0x8B7 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP4 ADD DUP7 ADD MSTORE DUP6 SWAP4 POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xDAC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP7 ADD MSTORE POP DUP14 SWAP4 DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL DUP4 ADD ADD SWAP1 POP PUSH2 0x8CB PUSH2 0x8B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP1 SWAP2 SWAP4 SWAP6 POP PUSH2 0xE3D PUSH1 0x1 SWAP4 SWAP6 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2129 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP4 SWAP2 SWAP5 SWAP3 PUSH2 0x7DF JUMP JUMPDEST POP POP PUSH1 0x9 DUP10 MSTORE DUP2 DUP10 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP4 DUP3 LT PUSH2 0xE7C JUMPI POP POP PUSH1 0x20 PUSH2 0x74A SWAP3 DUP3 ADD ADD PUSH2 0x737 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD DUP4 SWAP2 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 MSTORE POP PUSH2 0x74A SWAP3 DUP1 ISZERO ISZERO MUL DUP3 ADD PUSH1 0x20 ADD SWAP1 POP PUSH2 0x737 JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP12 ADD ADD MSTORE ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E73756666696369656E7420676173 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x34B73B30B634B21039B2B73232B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964206F6E5265736F6C7665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1A5B9D985B1A590818995D141C9BDB5C1D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1A5B9D985B1A590818995D1259 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0xFF4 PUSH2 0x24A2 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD DUP1 PUSH2 0x12A5 JUMPI JUMPDEST POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x647846A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x1286 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x127B JUMPI DUP5 SWAP4 PUSH2 0x1247 JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0x1212 JUMPI DUP4 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x669E34AD PUSH1 0xE1 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1205 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 PUSH2 0x11D8 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 MSTORE PUSH2 0x10D2 PUSH1 0x64 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x11CD JUMPI DUP3 MLOAD RETURNDATASIZE PUSH2 0x11C4 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x11B2 JUMPI POP DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6D8DE31F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x115B JUMPI JUMPDEST POP DUP1 PUSH32 0x82EFE7218A4D776C25C08AF33123ACEF8998C9049484A73357D0DD8ED91FF9DD SWAP3 PUSH1 0x40 SWAP3 PUSH1 0x5 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11AA JUMPI JUMPDEST DUP2 PUSH2 0x1176 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11A5 JUMPI MLOAD PUSH32 0x82EFE7218A4D776C25C08AF33123ACEF8998C9049484A73357D0DD8ED91FF9DD PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1169 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x11F8 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x11FE JUMPI JUMPDEST PUSH2 0x11F0 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x22E3 JUMP JUMPDEST CODESIZE PUSH2 0x109B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11E6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F2066656520746F6B656E73 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1273 JUMPI JUMPDEST DUP2 PUSH2 0x1263 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11A5 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x106B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x129F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11FE JUMPI PUSH2 0x11F0 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST CODESIZE PUSH2 0x1032 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x12F8 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0xE2D6F51B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1205 JUMPI PUSH2 0x12E8 JUMPI JUMPDEST SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x12F1 SWAP2 PUSH2 0x1EF4 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x12E2 JUMP JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0x1315 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH32 0x16E6F67290546B8DD0E587F4B7F67D4F61932AE17FFD8C60D3509DBC05C175FE PUSH1 0x80 PUSH1 0x4 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x13A2 PUSH2 0x24A2 JUMP JUMPDEST DUP4 PUSH1 0xA SSTORE DUP1 PUSH1 0xB SSTORE DUP2 PUSH1 0xC SSTORE DUP3 PUSH1 0xD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0x475 PUSH2 0x1F9 PUSH2 0x1F15 JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH2 0x1464 PUSH2 0x214E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xFD7 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1ABC JUMPI PUSH2 0x1499 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB8 JUMPI PUSH2 0x14B9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD63 JUMPI PUSH2 0x14D9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB4 JUMPI PUSH2 0x14F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP2 PUSH2 0x1501 PUSH2 0x24A2 JUMP JUMPDEST DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x1553 PUSH1 0x6 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A49 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x19DA JUMPI DUP8 SWAP2 PUSH2 0x19CF JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x15A2 PUSH1 0x7 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1964 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x18F3 JUMPI DUP8 SWAP2 PUSH2 0x18E8 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x15F1 PUSH1 0x8 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x187D JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x180E JUMPI DUP8 SWAP2 PUSH2 0x1803 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 SSTORE JUMPDEST DUP2 MLOAD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT PUSH2 0x2E9 JUMPI PUSH2 0x1641 PUSH1 0x9 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1798 JUMPI JUMPDEST POP PUSH1 0x20 SWAP7 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x16FD JUMPI SWAP2 PUSH2 0x16D0 PUSH2 0x16DE SWAP3 DUP5 PUSH2 0x16EC SWAP7 SWAP6 DUP11 SWAP12 PUSH32 0xB189524B4A4D28735ED1E814418B9BDE84EF638C0A2EEA241E624E9A122904F4 SWAP12 SWAP2 PUSH2 0x16F2 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 SSTORE JUMPDEST PUSH2 0x16C2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP7 ADD MLOAD CODESIZE PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x9 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F NOT DUP3 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x1780 JUMPI POP SWAP3 PUSH1 0x1 DUP4 PUSH2 0x16D0 SWAP4 PUSH32 0xB189524B4A4D28735ED1E814418B9BDE84EF638C0A2EEA241E624E9A122904F4 SWAP12 SWAP13 PUSH2 0x16EC SWAP10 SWAP9 SWAP7 PUSH2 0x16DE SWAP9 LT PUSH2 0x1767 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x9 SSTORE PUSH2 0x16A6 JUMP JUMPDEST DUP9 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x175A JUMP JUMPDEST DUP7 DUP12 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP11 DUP12 ADD SWAP11 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x9 DUP8 MSTORE PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP10 LT PUSH2 0x17ED JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x17E2 JUMPI POP PUSH2 0x164A JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x17BD JUMP JUMPDEST SWAP1 POP DUP3 ADD MLOAD CODESIZE PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x8 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x1865 JUMPI POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x184C JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE PUSH2 0x1625 JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x183F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x182A JUMP JUMPDEST PUSH1 0x8 DUP8 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x18D2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x18C7 JUMPI POP PUSH2 0x15FA JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD CODESIZE PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x7 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x194C JUMPI POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1933 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH2 0x15D6 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP6 PUSH1 0x20 SWAP4 SWAP6 DUP5 SWAP4 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x190F JUMP JUMPDEST PUSH1 0x7 DUP8 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x19B9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x19AE JUMPI POP PUSH2 0x15AB JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP DUP6 ADD MLOAD CODESIZE PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x6 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A31 JUMPI POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1A18 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH2 0x1587 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1A0B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x6 DUP8 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x1A9E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A93 JUMPI POP PUSH2 0x155C JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x1A6E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI DUP1 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AF1 CALLER DUP3 EQ PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD1E4BE07 PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x1DEA JUMPI JUMPDEST POP DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1AB8 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xD63 JUMPI PUSH2 0x1B4D SWAP3 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 ADD ADD PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x2379 JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP3 DUP4 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SWAP2 PUSH2 0x1B90 DUP7 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP6 SLOAD PUSH1 0xD8 SHL AND SWAP5 PUSH2 0x22CB JUMP JUMPDEST ADD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDF9 JUMPI SWAP2 DUP2 DUP8 SWAP4 PUSH2 0x1BB0 DUP11 SWAP5 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D93 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1CFD JUMPI SWAP4 PUSH32 0x4CDFD2DABD9BCCE8C3B563AFFCC5FBECB1B95914A0F02DA623A9FCF5F13B0D9B SWAP9 SWAP7 SWAP4 PUSH2 0x1CA0 SWAP7 SWAP4 DUP4 DUP4 SWAP5 PUSH2 0x1C8F SWAP12 SWAP9 DUP6 SWAP2 PUSH2 0x1CF2 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE DUP7 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1C3E PUSH1 0x44 DUP3 ADD DUP13 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x44 DUP2 MSTORE PUSH2 0x1C4D PUSH1 0x64 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST MLOAD SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x1CEA JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1C62 DUP3 PUSH2 0x2164 JUMP JUMPDEST SWAP2 PUSH2 0x1C70 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP12 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1CA6 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP5 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1CDF PUSH32 0xE9C0294B4419B2194CBE1D9F814A03250327281E6E123B1E7288822710D8A8BF SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP7 DUP2 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST SWAP1 POP DUP9 ADD MLOAD CODESIZE PUSH2 0x1C00 JUMP JUMPDEST DUP3 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D75 JUMPI POP SWAP4 PUSH1 0x1 DUP5 DUP9 SWAP6 SWAP5 PUSH32 0x4CDFD2DABD9BCCE8C3B563AFFCC5FBECB1B95914A0F02DA623A9FCF5F13B0D9B SWAP14 SWAP12 SWAP9 SWAP5 PUSH2 0x1C8F SWAP14 SWAP11 SWAP7 PUSH2 0x1CA0 SWAP13 SWAP10 LT PUSH2 0x1D5C JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1C14 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1D50 JUMP JUMPDEST DUP11 DUP4 ADD MLOAD DUP5 SSTORE DUP13 SWAP9 POP DUP14 SWAP8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 SWAP4 DUP5 SWAP2 SWAP4 SWAP6 POP MSTORE PUSH1 0x20 DUP10 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1DE0 JUMPI JUMPDEST SWAP2 DUP10 SWAP6 SWAP4 SWAP2 PUSH1 0x1F DUP13 SWAP7 SWAP5 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DD0 JUMPI POP PUSH2 0x1BB9 JUMP JUMPDEST SWAP5 DUP6 SSTORE DUP10 SWAP6 POP DUP11 SWAP5 PUSH1 0x1 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0x1DFE SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x311 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP POP CODESIZE PUSH2 0x1B18 JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x475 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH2 0x16DE PUSH2 0x1E4D PUSH1 0x3 PUSH2 0x1E46 PUSH1 0x2 DUP6 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP4 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH2 0x1E66 PUSH1 0x20 DUP8 ADD PUSH1 0xFF DUP4 AND PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0xD8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE DUP6 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1EB9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1EA3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EDE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EDE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x7 SLOAD SWAP2 PUSH2 0x1F29 DUP4 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1F9D JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F4F JUMPI JUMPDEST PUSH2 0x1F4D SWAP3 POP SUB DUP4 PUSH2 0x1EF4 JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP2 DUP4 LT PUSH2 0x1F81 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F4D SWAP3 DUP3 ADD ADD PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 SWAP3 POP PUSH2 0x1F4D SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x6 SLOAD SWAP2 PUSH2 0x1FD0 DUP4 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1F9D JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FF3 JUMPI PUSH2 0x1F4D SWAP3 POP SUB DUP4 PUSH2 0x1EF4 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP2 DUP4 LT PUSH2 0x2025 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F4D SWAP3 DUP3 ADD ADD PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x200D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2055 DUP5 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x20C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x207A JUMPI JUMPDEST POP PUSH2 0x1F4D SWAP3 POP SUB DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x20A5 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F4D SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x206D JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x208C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1F4D SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x206D JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x20F0 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2119 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2109 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2142 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11A5 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1EDE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x11A5 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2196 DUP3 PUSH2 0x2164 JUMP JUMPDEST SWAP3 PUSH2 0x21A4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x11A5 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x21CD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792044746E2063616E2063616C6C20746869732066756E6374696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x221F DUP2 PUSH2 0x2164 JUMP JUMPDEST SWAP2 PUSH2 0x222D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 SWAP5 DUP3 DUP5 MSTORE DUP3 DUP3 ADD GT PUSH2 0x11A5 JUMPI PUSH1 0x20 PUSH2 0x1F4D SWAP4 ADD SWAP1 PUSH2 0x2106 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x11A5 JUMPI DUP2 MLOAD PUSH2 0x2261 SWAP3 PUSH1 0x20 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x11A5 JUMPI DUP2 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x11A5 JUMPI SWAP3 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A5 JUMPI DUP2 PUSH2 0x229B SWAP2 DUP6 ADD PUSH2 0x2247 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x11A5 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x11A5 JUMPI DUP2 MLOAD PUSH2 0x2261 SWAP3 PUSH1 0x20 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x20F0 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x11A5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11A5 JUMPI SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x230F JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x230F JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x230F JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2363 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH32 0x6273151F959616268004B58DBB21E5C851B7B8D04498B4AABEE12291D22FC034 DUP2 EQ DUP1 ISZERO PUSH2 0x2479 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2450 JUMPI JUMPDEST PUSH2 0x244A JUMPI PUSH32 0xBA9154E0BAA69C78E0CA563B867DF81BAE9D177C4EA1452C35C84386A70F0F7A DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2420 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x23F6 JUMPI JUMPDEST POP PUSH2 0x23F1 JUMPI PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH32 0xA357FCB91396B2AFA7AB60192E270C625A2EB250B8F839DDB179F207B40459B4 SWAP2 POP EQ CODESIZE PUSH2 0x23E7 JUMP JUMPDEST PUSH32 0xA2DAD57CC42B2B0635F411233812E479F7896335AE3219AC4EF034F5A34C3F0B DUP2 EQ SWAP2 POP PUSH2 0x23E0 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH32 0x7749ED7587E6DBF171CE6BE50BEA67236732D7CCFD51E327BC28B612EC06FAA7 DUP2 EQ PUSH2 0x23B1 JUMP JUMPDEST POP PUSH32 0x23025EBDC5CDFC5BDFE2D2C2A52D7E7F374F5C135D6D47E3C935C86567E86A53 DUP2 EQ PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x24B6 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xA6 PUSH13 0xC928B5EDB82AF9BD4992295415 GAS 0xB7 0xB0 SWAP5 0x26 SWAP5 0xBE LOG4 0xCE PREVRANDAO PUSH7 0x1D9A8736C688F3 0xF7 0xA9 INVALID CALLDATASIZE 0x4F 0xAA 0xB9 EXTCODESIZE 0x21 PUSH14 0xA50A3214154F22A0A2B415B23A84 0xC8 AND SWAP15 DUP12 PUSH4 0x6EE36E15 BLOCKHASH OR SHL PUSH13 0xC960B71A7020D9F60077F6AF9 BALANCE 0xA8 0xBB CREATE2 SWAP1 0xDA MUL 0x23 0xDA 0xCF PUSH22 0xC7AFF652222313E28459528D920B65115C16C04F3EFC DUP3 0xAA 0xED 0xC9 PUSH28 0xE59F3F377C0D3FA264697066735822122021BD7399C88D6C43537956 0xBF 0xD5 CALLDATALOAD 0xD6 0xEA LOG2 SWAP15 0xC2 CALLER SMOD PUSH27 0xA20BE66B4B3ABDD64E0164736F6C634300081C0033000000000000 ",
              "sourceMap": "913:8140:11:-:0;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;1273:26:3;;1269:95;;3004:6;913:8140:11;;-1:-1:-1;;;;;;913:8140:11;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;3052:40:3;-1:-1:-1;;3052:40:3;1863:21:11;;913:8140;1863:21;1946;913:8140;2030:25;;913:8140;2113:7;;913:8140;;;;;;;;1269:95:3;1322:31;;;-1:-1:-1;1322:31:3;-1:-1:-1;1322:31:3;913:8140:11;;-1:-1:-1;1322:31:3;913:8140:11;-1:-1:-1;913:8140:11;;;;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;913:8140:11"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 8526,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 8931,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_available_length_string_fromMemory": {
                  "entryPoint": 8722,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_enum_ResponseStatust_stringt_bytes_fromMemory": {
                  "entryPoint": 8804,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_string": {
                  "entryPoint": 8575,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 8775,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_bytes32_dyn": {
                  "entryPoint": 9029,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_Outcome": {
                  "entryPoint": 8419,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 8489,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 8548,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 8257,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string_24047": {
                  "entryPoint": 7957,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string_24051": {
                  "entryPoint": 8124,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 8454,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 7817,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 7924,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_24063": {
                  "entryPoint": 7875,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 9378,
                  "id": 414,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_parseOutcome": {
                  "entryPoint": 9081,
                  "id": 1842,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_string_dyn": {
                  "entryPoint": 8962,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_string_dyn_24054": {
                  "entryPoint": 8997,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_string_dyn_24057": {
                  "entryPoint": 9013,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_798f": {
                  "entryPoint": 8646,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_enum_Outcome_to_enum_Outcome": {
                  "entryPoint": 8907,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c806322af00fa14611e07578063288d29dc14611ac057806330a9056f1461144a57806331a9b1041461142c578063321653461461140e57806368be1b1e146113e75780636a924cbd146113cb5780636fcba37714611359578063715018a6146112fc578063795769e514610fdb5780637bf13d4d1461060157806384cc5c26146105e55780638da5cb5b146105bc5780639648c9f41461059e5780639d648d6714610580578063a6edb342146104eb578063a81675c71461042a578063c8b894a314610400578063cfe152c0146103d7578063daf81269146103b9578063f2fde38b146103305763fa2b94431461010f57600080fd5b3461032d57602036600319011261032d5780546004359060249083906001600160a01b031661013f3382146121c6565b6040519283809263d1e4be0760e01b82528660048301525afa9081156103225783916102fd575b50818352600460205260408320549081845260036020526003604085200181516001600160401b0381116102e95761019e8254611e89565b601f81116102a4575b506020601f821160011461021e5791817f70685f7cbeda2418040e1bd2e3e95cdda3133b1a80ea33ccaa06ce38c7c040bb949261020d948991610213575b508160011b916000199060031b1c19161790555b604051918291602083526020830190612129565b0390a380f35b9050830151386101e5565b82875280872090601f198316885b81811061028c57509261020d9492600192827f70685f7cbeda2418040e1bd2e3e95cdda3133b1a80ea33ccaa06ce38c7c040bb989610610273575b5050811b0190556101f9565b85015160001960f88460031b161c191690553880610267565b9192602060018192868a01518155019401920161022c565b82875260208720601f830160051c810191602084106102df575b601f0160051c01905b8181106102d457506101a7565b8781556001016102c7565b90915081906102be565b634e487b7160e01b86526041600452602486fd5b61031991503d8085833e6103118183611ef4565b810190612264565b50905038610166565b6040513d85823e3d90fd5b80fd5b503461032d57602036600319011261032d5761034a61214e565b6103526124a2565b6001600160a01b031680156103a557600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b503461032d578060031936011261032d576020600a54604051908152f35b503461032d578060031936011261032d576002546040516001600160a01b039091168152602090f35b503461032d57602036600319011261032d5760406020916004358152600483522054604051908152f35b503461032d578060031936011261032d5760405190806008549061044d82611e89565b80855291600181169081156104c45750600114610479575b610475846101f981860382611ef4565b0390f35b600881526000805160206124ec833981519152939250905b8082106104aa575090915081016020016101f982610465565b919260018160209254838588010152019101909291610491565b60ff191660208087019190915292151560051b850190920192506101f99150839050610465565b503461032d578060031936011261032d5760405190806009549061050e82611e89565b80855291600181169081156104c4575060011461053557610475846101f981860382611ef4565b6009815260008051602061250c833981519152939250905b808210610566575090915081016020016101f982610465565b91926001816020925483858801015201910190929161054d565b503461032d578060031936011261032d576020600c54604051908152f35b503461032d578060031936011261032d576020600554604051908152f35b503461032d578060031936011261032d576001546040516001600160a01b039091168152602090f35b503461032d578060031936011261032d576104756101f9611fbc565b50606036600319011261032d576024356001600160401b038111610fd75761062d90369060040161217f565b906044356001600160e01b031981168103610fd75760043515610fa257825115610f69576001600160e01b0319811615610f30576002546001600160a01b03163303610efa57600d5490813410610ec2576080906040519461068f8387611ef4565b60038652601f198301855b818110610eb15750506106ab611fbc565b6106b487612302565b526106be86612302565b506106c886612325565b526106d285612325565b506106db611f15565b6106e486612335565b526106ee85612335565b50604080516106fd8282611ef4565b60018152601f1982013660208301378151602081019087816009549161072283611e89565b9260018116908115610e965750600114610e4d575b61074a925003601f198101835282611ef4565b51902061075682612302565b528584835161076481611ec3565b60608152606060208201528285820152826060820152015260209682519161078c8984611ef4565b87835260003681378351926107a084611ec3565b83528883015260018383015260086060830152868583015282519081848101918a80830152805180935260608201928b60608260051b8501019201938b905b8d838310610e2157505050506107fe925003601f198101835282611ef4565b600a54600b54600c54918551938460c08101106001600160401b0360c087011117610e0d5760c085018752845285516108378c82611ef4565b8a81528b85015260018685015260608401528683015260a08201528251958660608101106001600160401b03606089011117610df957606087018452630a234a7760e21b875263fa2b944360e01b89880152308488015283516008548a9082908b906108a281611e89565b9060018116908115610ddb5750600114610da0575b506108cb925003601f198101835282611ef4565b8981519101209660018060a01b03895416936005549886519963728eb41160e11b8b5260048b015260248a015261012060448a01528761093461091d8b60a061012486519201526101c48d0190612345565b838e01518c820361012319016101448e0152612345565b9163ffffffff88820151166101648c015260ff6060820151166101848c015201516005811015610d8c576101a48a01526003198982030160648a0152610996610986855160c0845260c0840190612129565b858d0151838203848f0152612129565b93868101516002811015610d78578783015260608082015190830152888101518983015260a09081015191015280516001600160e01b031990811660848a01528a8201511660a48901528401516001600160a01b031660c48801523360e48801526101048701528791869182900390829034905af1938415610d6e578594610d3b575b508385526004865260043581862055805191610a3483611ec3565b8483528683018681526001600160e01b0319909116828401908152825192610a5c8985611ef4565b87845260608501938452805195610a738a88611ef4565b88875285019586526004358852600389528720935184556001840191516004811015610d2757610aa390836122cb565b51815464ffffffff00191660d89190911c64ffffffff001617905551805160028301916001600160401b038211610d1357610ade8354611e89565b601f8111610cd0575b508790601f8311600114610c6a57600394939291889183610c5f575b50508160011b9160001990861b1c19161790555b019051938451906001600160401b038211610c4b57610b368354611e89565b601f8111610c08575b5080601f8311600114610ba3575084958293949592610b98575b50508160011b916000199060031b1c19161790555b6004357fcefd1532ce99545b2ecdecfe9555dbb5f55800cf824606d71bd0b0e3fb54f52e8380a380f35b015190503880610b59565b90601f198316968487528287209287905b898210610bf05750508360019596979810610bd7575b505050811b019055610b6e565b015160001960f88460031b161c19169055388080610bca565b80600185968294968601518155019501930190610bb4565b838652818620601f840160051c810191838510610c41575b601f0160051c01905b818110610c365750610b3f565b868155600101610c29565b9091508190610c20565b634e487b7160e01b85526041600452602485fd5b015190503880610b03565b8388528888209190601f198416895b8b828210610cba57505091600193918560039897969410610ca2575b505050811b019055610b17565b015160001983881b60f8161c19169055388080610c95565b6001859682939686015181550195019301610c79565b838852888820601f840160051c8101918a8510610d09575b601f0160051c01905b818110610cfe5750610ae7565b888155600101610cf1565b9091508190610ce8565b634e487b7160e01b87526041600452602487fd5b634e487b7160e01b88526021600452602488fd5b9093508581813d8311610d67575b610d538183611ef4565b81010312610d6357519238610a19565b8480fd5b503d610d49565b81513d87823e3d90fd5b634e487b7160e01b8c52602160045260248cfd5b634e487b7160e01b8b52602160045260248bfd5b905060088c52828c208c905b828210610dc4575050916108cb928201018c926108b7565b805486830186015285935090840190600101610dac565b60ff191684860152508d9381151590910283010190506108cb6108b7565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b8b52604160045260248bfd5b8091939550610e3d60019395605f198a82030186528851612129565b96019201920185939194926107df565b505060098952818960008051602061250c8339815191525b838210610e7c575050602061074a92820101610737565b602091925080600191548385880101520191018391610e65565b60ff191686525061074a928015150282016020019050610737565b806060602080938b0101520161069a565b60405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742067617360801b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270696e76616c6964206f6e5265736f6c766560781b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a590818995d141c9bdb5c1d607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a590818995d1259609a1b6044820152606490fd5b5080fd5b503461032d578060031936011261032d57610ff46124a2565b80600554806112a5575b5050805460405163647846a560e01b81526001600160a01b0390911690602081600481855afa908115610322578391611286575b506040516370a0823160e01b8152306004820152916001600160a01b039190911690602083602481855afa92831561127b578493611247575b508215611212578360206004926040519384809263669e34ad60e11b82525afa80156112055760209282916111d8575b5060405163a9059cbb60e01b8482019081526001600160a01b039092166024820152604480820187905281526110d2606482611ef4565b519082855af1156111cd5782513d6111c45750803b155b6111b257508154604051636d8de31f60e01b8152906020908290600490829087906001600160a01b03165af190811561032257839161115b575b50807f82efe7218a4d776c25c08af33123acef8998c9049484a73357d0dd8ed91ff9dd9260409260055582519182526020820152a180f35b90506020813d6020116111aa575b8161117660209383611ef4565b810103126111a557517f82efe7218a4d776c25c08af33123acef8998c9049484a73357d0dd8ed91ff9dd611123565b600080fd5b3d9150611169565b635274afe760e01b8352600452602482fd5b600114156110e9565b6040513d84823e3d90fd5b6111f89150833d85116111fe575b6111f08183611ef4565b8101906122e3565b3861109b565b503d6111e6565b50604051903d90823e3d90fd5b60405162461bcd60e51b815260206004820152600d60248201526c4e6f2066656520746f6b656e7360981b6044820152606490fd5b9092506020813d602011611273575b8161126360209383611ef4565b810103126111a55751913861106b565b3d9150611256565b6040513d86823e3d90fd5b61129f915060203d6020116111fe576111f08183611ef4565b38611032565b81546001600160a01b031690813b156112f857829160248392604051958693849263e2d6f51b60e01b845260048401525af18015611205576112e8575b90610ffe565b6112f191611ef4565b38816112e2565b5050fd5b503461032d578060031936011261032d576113156124a2565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461032d57608036600319011261032d577f16e6f67290546b8dd0e587f4b7f67d4f61932ae17ffd8c60d3509dbc05c175fe60806004356064356044356024356113a26124a2565b83600a5580600b5581600c5582600d55604051938452602084015260408301526060820152a180f35b503461032d578060031936011261032d576104756101f9611f15565b503461032d578060031936011261032d57546040516001600160a01b039091168152602090f35b503461032d578060031936011261032d576020600d54604051908152f35b503461032d578060031936011261032d576020600b54604051908152f35b503461032d5760c036600319011261032d5761146461214e565b906024356001600160a01b03811690819003610fd7576044356001600160401b038111611abc5761149990369060040161217f565b906064356001600160401b038111611ab8576114b990369060040161217f565b936084356001600160401b038111610d63576114d990369060040161217f565b60a4356001600160401b038111611ab4576114f890369060040161217f565b916115016124a2565b836bffffffffffffffffffffffff60a01b87541617865560018060a01b03166bffffffffffffffffffffffff60a01b600254161760025583516001600160401b0381116102e957611553600654611e89565b601f8111611a49575b50806020601f82116001146119da5787916119cf575b508160011b916000199060031b1c1916176006555b85516001600160401b0381116102e9576115a2600754611e89565b601f8111611964575b50806020601f82116001146118f35787916118e8575b508160011b916000199060031b1c1916176007555b80516001600160401b0381116102e9576115f1600854611e89565b601f811161187d575b50806020601f821160011461180e578791611803575b508160011b916000199060031b1c1916176008555b8151956001600160401b0387116102e957611641600954611e89565b601f8111611798575b50602096601f81116001146116fd57916116d06116de92846116ec96958a9b7fb189524b4a4d28735ed1e814418b9bde84ef638c0a2eea241e624e9a122904f49b916116f2575b508160011b916000199060031b1c1916176009555b6116c2604051988998895260a060208a015260a0890190612129565b908782036040890152612129565b908582036060870152612129565b908382036080850152612129565b0390a180f35b905086015138611691565b6009875260008051602061250c833981519152601f198216885b8181106117805750926001836116d0937fb189524b4a4d28735ed1e814418b9bde84ef638c0a2eea241e624e9a122904f49b9c6116ec9998966116de9810611767575b5050811b016009556116a6565b88015160001960f88460031b161c19169055388061175a565b868b0151835560209a8b019a60019093019201611717565b60098752601f880160051c60008051602061250c8339815191520190602089106117ed575b601f0160051c60008051602061250c83398151915201905b8181106117e2575061164a565b8781556001016117d5565b60008051602061250c83398151915291506117bd565b905082015138611610565b600888526000805160206124ec8339815191529150601f198316885b8181106118655750908360019493921061184c575b5050811b01600855611625565b84015160001960f88460031b161c19169055388061183f565b9192602060018192868901518155019401920161182a565b60088752601f820160051c6000805160206124ec8339815191520190602083106118d2575b601f0160051c6000805160206124ec83398151915201905b8181106118c757506115fa565b8781556001016118ba565b6000805160206124ec83398151915291506118a2565b9050870151386115c1565b600788526000805160206124cc8339815191529150601f198316885b8a82821061194c5750509083600194939210611933575b5050811b016007556115d6565b89015160001960f88460031b161c191690553880611926565b6001849560209395849301518155019401920161190f565b60078752601f820160051c6000805160206124cc8339815191520190602083106119b9575b601f0160051c6000805160206124cc83398151915201905b8181106119ae57506115ab565b8781556001016119a1565b6000805160206124cc8339815191529150611989565b905085015138611572565b6006885260008051602061252c8339815191529150601f198316885b818110611a3157509083600194939210611a18575b5050811b01600655611587565b87015160001960f88460031b161c191690553880611a0b565b9192602060018192868c0151815501940192016119f6565b60068752601f820160051c60008051602061252c833981519152019060208310611a9e575b601f0160051c60008051602061252c83398151915201905b818110611a93575061155c565b878155600101611a86565b60008051602061252c8339815191529150611a6e565b8580fd5b8380fd5b8280fd5b503461032d57602036600319011261032d5780546004359060249083906001600160a01b0316611af13382146121c6565b6040519283809263d1e4be0760e01b82528660048301525afa908115610322578391611dea575b508051810190602081830312611ab8576020810151916001600160401b038311610d6357611b4d926020809201920101612247565b611b5681612379565b90828452600460205260408420549283855260036020526040852060026001820191611b908663ffffffff60e01b855460d81b16946122cb565b0183516001600160401b038111610df95791818793611bb08a9454611e89565b601f8111611d93575b506020601f8211600114611cfd57937f4cdfd2dabd9bcce8c3b563affcc5fbecb1b95914a0f02da623a9fcf5f13b0d9b989693611ca09693838394611c8f9b988591611cf2575b508160011b916000199060031b1c19161790555b60018060a01b0360025416908260405160208101928352866024820152611c3e604482018c6120e3565b60448152611c4d606482611ef4565b51925af13d15611cea573d90611c6282612164565b91611c706040519384611ef4565b82523d8b602084013e5b15611ca6575b505050604051938480946120e3565b604060208401526040830190612129565b0390a280f35b611cdf7fe9c0294b4419b2194cbe1d9f814a03250327281e6e123b1e7288822710d8a8bf91604051918291602083526020830190612129565b0390a3388681611c80565b606090611c7a565b905088015138611c00565b82855280852090601f198316865b818110611d755750936001848895947f4cdfd2dabd9bcce8c3b563affcc5fbecb1b95914a0f02da623a9fcf5f13b0d9b9d9b9894611c8f9d9a96611ca09c9910611d5c575b5050811b019055611c14565b8a015160001960f88460031b161c191690553880611d50565b8a83015184558c98508d975060019093019260209283019201611d0b565b919384919395505260208920601f830160051c81019160208410611de0575b9189959391601f8c96940160051c01905b818110611dd05750611bb9565b9485558995508a94600101611dc3565b9091508190611db2565b611dfe91503d8085833e6103118183611ef4565b91505038611b18565b503461032d57602036600319011261032d57604090600435815260036020522080546104756001830154926116de611e4d6003611e4660028501612041565b9301612041565b916040519586958652611e666020870160ff83166120e3565b60d81b6001600160e01b031916604086015260a060608601819052850190612129565b90600182811c92168015611eb9575b6020831014611ea357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e98565b60a081019081106001600160401b03821117611ede57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117611ede57604052565b6040519060008260075491611f2983611e89565b8083529260018116908115611f9d5750600114611f4f575b611f4d92500383611ef4565b565b506007600090815290916000805160206124cc8339815191525b818310611f81575050906020611f4d92820101611f41565b6020919350806001915483858901015201910190918492611f69565b60209250611f4d94915060ff191682840152151560051b820101611f41565b6040519060008260065491611fd083611e89565b8083529260018116908115611f9d5750600114611ff357611f4d92500383611ef4565b5060066000908152909160008051602061252c8339815191525b818310612025575050906020611f4d92820101611f41565b602091935080600191548385890101520191019091849261200d565b906040519182600082549261205584611e89565b80845293600181169081156120c1575060011461207a575b50611f4d92500383611ef4565b90506000929192526020600020906000915b8183106120a5575050906020611f4d928201013861206d565b602091935080600191548385890101520191019091849261208c565b905060209250611f4d94915060ff191682840152151560051b8201013861206d565b9060048210156120f05752565b634e487b7160e01b600052602160045260246000fd5b60005b8381106121195750506000910152565b8181015183820152602001612109565b9060209161214281518092818552858086019101612106565b601f01601f1916010190565b600435906001600160a01b03821682036111a557565b6001600160401b038111611ede57601f01601f191660200190565b81601f820112156111a55780359061219682612164565b926121a46040519485611ef4565b828452602083830101116111a557816000926020809301838601378301015290565b156121cd57565b60405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792044746e2063616e2063616c6c20746869732066756e6374696f6e006044820152606490fd5b9092919261221f81612164565b9161222d6040519384611ef4565b8294828452828201116111a5576020611f4d930190612106565b9080601f830112156111a557815161226192602001612212565b90565b90916060828403126111a557815160038110156111a5579260208301516001600160401b0381116111a5578161229b918501612247565b926040810151906001600160401b0382116111a557019080601f830112156111a557815161226192602001612212565b9060048110156120f05760ff80198354169116179055565b908160209103126111a557516001600160a01b03811681036111a55790565b80511561230f5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561230f5760400190565b80516002101561230f5760600190565b906020808351928381520192019060005b8181106123635750505090565b8251845260209384019390920191600101612356565b602081519101207f6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc03481148015612479575b8015612450575b61244a577fba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a8114908115612420575b81156123f6575b506123f157600390565b600290565b7fa357fcb91396b2afa7ab60192e270c625a2eb250b8f839ddb179f207b40459b4915014386123e7565b7fa2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b811491506123e0565b50600190565b507f7749ed7587e6dbf171ce6be50bea67236732d7ccfd51e327bc28b612ec06faa781146123b1565b507f23025ebdc5cdfc5bdfe2d2c2a52d7e7f374f5c135d6d47e3c935c86567e86a5381146123aa565b6001546001600160a01b031633036124b657565b63118cdaa760e01b6000523360045260246000fdfea66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688f3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee36e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7aff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3fa264697066735822122021bd7399c88d6c43537956bfd535d6eaa29ec233077aa20be66b4b3abdd64e0164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22AF00FA EQ PUSH2 0x1E07 JUMPI DUP1 PUSH4 0x288D29DC EQ PUSH2 0x1AC0 JUMPI DUP1 PUSH4 0x30A9056F EQ PUSH2 0x144A JUMPI DUP1 PUSH4 0x31A9B104 EQ PUSH2 0x142C JUMPI DUP1 PUSH4 0x32165346 EQ PUSH2 0x140E JUMPI DUP1 PUSH4 0x68BE1B1E EQ PUSH2 0x13E7 JUMPI DUP1 PUSH4 0x6A924CBD EQ PUSH2 0x13CB JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x1359 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12FC JUMPI DUP1 PUSH4 0x795769E5 EQ PUSH2 0xFDB JUMPI DUP1 PUSH4 0x7BF13D4D EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x84CC5C26 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x9648C9F4 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x9D648D67 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xA6EDB342 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xA81675C7 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xC8B894A3 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xCFE152C0 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xDAF81269 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH4 0xFA2B9443 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI DUP1 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F CALLER DUP3 EQ PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD1E4BE07 PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x2FD JUMPI JUMPDEST POP DUP2 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP1 DUP2 DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 DUP6 KECCAK256 ADD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x19E DUP3 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2A4 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x21E JUMPI SWAP2 DUP2 PUSH32 0x70685F7CBEDA2418040E1BD2E3E95CDDA3133B1A80EA33CCAA06CE38C7C040BB SWAP5 SWAP3 PUSH2 0x20D SWAP5 DUP10 SWAP2 PUSH2 0x213 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0x1E5 JUMP JUMPDEST DUP3 DUP8 MSTORE DUP1 DUP8 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x28C JUMPI POP SWAP3 PUSH2 0x20D SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH32 0x70685F7CBEDA2418040E1BD2E3E95CDDA3133B1A80EA33CCAA06CE38C7C040BB SWAP9 SWAP7 LT PUSH2 0x273 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F9 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x267 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x22C JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2DF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2D4 JUMPI POP PUSH2 0x1A7 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH2 0x319 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x311 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2264 JUMP JUMPDEST POP SWAP1 POP CODESIZE PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH2 0x34A PUSH2 0x214E JUMP JUMPDEST PUSH2 0x352 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x44D DUP3 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x479 JUMPI JUMPDEST PUSH2 0x475 DUP5 PUSH2 0x1F9 DUP2 DUP7 SUB DUP3 PUSH2 0x1EF4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x4AA JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1F9 DUP3 PUSH2 0x465 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x491 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1F9 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x465 JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x9 SLOAD SWAP1 PUSH2 0x50E DUP3 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x4C4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x535 JUMPI PUSH2 0x475 DUP5 PUSH2 0x1F9 DUP2 DUP7 SUB DUP3 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x566 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1F9 DUP3 PUSH2 0x465 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x54D JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0x475 PUSH2 0x1F9 PUSH2 0x1FBC JUMP JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xFD7 JUMPI PUSH2 0x62D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xFD7 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0xFA2 JUMPI DUP3 MLOAD ISZERO PUSH2 0xF69 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND ISZERO PUSH2 0xF30 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xEFA JUMPI PUSH1 0xD SLOAD SWAP1 DUP2 CALLVALUE LT PUSH2 0xEC2 JUMPI PUSH1 0x80 SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x68F DUP4 DUP8 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x3 DUP7 MSTORE PUSH1 0x1F NOT DUP4 ADD DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xEB1 JUMPI POP POP PUSH2 0x6AB PUSH2 0x1FBC JUMP JUMPDEST PUSH2 0x6B4 DUP8 PUSH2 0x2302 JUMP JUMPDEST MSTORE PUSH2 0x6BE DUP7 PUSH2 0x2302 JUMP JUMPDEST POP PUSH2 0x6C8 DUP7 PUSH2 0x2325 JUMP JUMPDEST MSTORE PUSH2 0x6D2 DUP6 PUSH2 0x2325 JUMP JUMPDEST POP PUSH2 0x6DB PUSH2 0x1F15 JUMP JUMPDEST PUSH2 0x6E4 DUP7 PUSH2 0x2335 JUMP JUMPDEST MSTORE PUSH2 0x6EE DUP6 PUSH2 0x2335 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x6FD DUP3 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x1F NOT DUP3 ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP2 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP8 DUP2 PUSH1 0x9 SLOAD SWAP2 PUSH2 0x722 DUP4 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE96 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE4D JUMPI JUMPDEST PUSH2 0x74A SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1EF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x756 DUP3 PUSH2 0x2302 JUMP JUMPDEST MSTORE DUP6 DUP5 DUP4 MLOAD PUSH2 0x764 DUP2 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x20 SWAP7 DUP3 MLOAD SWAP2 PUSH2 0x78C DUP10 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST DUP8 DUP4 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY DUP4 MLOAD SWAP3 PUSH2 0x7A0 DUP5 PUSH2 0x1EC3 JUMP JUMPDEST DUP4 MSTORE DUP9 DUP4 ADD MSTORE PUSH1 0x1 DUP4 DUP4 ADD MSTORE PUSH1 0x8 PUSH1 0x60 DUP4 ADD MSTORE DUP7 DUP6 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 DUP5 DUP2 ADD SWAP2 DUP11 DUP1 DUP4 ADD MSTORE DUP1 MLOAD DUP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP12 PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 ADD SWAP4 DUP12 SWAP1 JUMPDEST DUP14 DUP4 DUP4 LT PUSH2 0xE21 JUMPI POP POP POP POP PUSH2 0x7FE SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD SWAP2 DUP6 MLOAD SWAP4 DUP5 PUSH1 0xC0 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 DUP8 ADD GT OR PUSH2 0xE0D JUMPI PUSH1 0xC0 DUP6 ADD DUP8 MSTORE DUP5 MSTORE DUP6 MLOAD PUSH2 0x837 DUP13 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST DUP11 DUP2 MSTORE DUP12 DUP6 ADD MSTORE PUSH1 0x1 DUP7 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP7 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MLOAD SWAP6 DUP7 PUSH1 0x60 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x60 DUP10 ADD GT OR PUSH2 0xDF9 JUMPI PUSH1 0x60 DUP8 ADD DUP5 MSTORE PUSH4 0xA234A77 PUSH1 0xE2 SHL DUP8 MSTORE PUSH4 0xFA2B9443 PUSH1 0xE0 SHL DUP10 DUP9 ADD MSTORE ADDRESS DUP5 DUP9 ADD MSTORE DUP4 MLOAD PUSH1 0x8 SLOAD DUP11 SWAP1 DUP3 SWAP1 DUP12 SWAP1 PUSH2 0x8A2 DUP2 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xDDB JUMPI POP PUSH1 0x1 EQ PUSH2 0xDA0 JUMPI JUMPDEST POP PUSH2 0x8CB SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1EF4 JUMP JUMPDEST DUP10 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 SLOAD AND SWAP4 PUSH1 0x5 SLOAD SWAP9 DUP7 MLOAD SWAP10 PUSH4 0x728EB411 PUSH1 0xE1 SHL DUP12 MSTORE PUSH1 0x4 DUP12 ADD MSTORE PUSH1 0x24 DUP11 ADD MSTORE PUSH2 0x120 PUSH1 0x44 DUP11 ADD MSTORE DUP8 PUSH2 0x934 PUSH2 0x91D DUP12 PUSH1 0xA0 PUSH2 0x124 DUP7 MLOAD SWAP3 ADD MSTORE PUSH2 0x1C4 DUP14 ADD SWAP1 PUSH2 0x2345 JUMP JUMPDEST DUP4 DUP15 ADD MLOAD DUP13 DUP3 SUB PUSH2 0x123 NOT ADD PUSH2 0x144 DUP15 ADD MSTORE PUSH2 0x2345 JUMP JUMPDEST SWAP2 PUSH4 0xFFFFFFFF DUP9 DUP3 ADD MLOAD AND PUSH2 0x164 DUP13 ADD MSTORE PUSH1 0xFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH2 0x184 DUP13 ADD MSTORE ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xD8C JUMPI PUSH2 0x1A4 DUP11 ADD MSTORE PUSH1 0x3 NOT DUP10 DUP3 SUB ADD PUSH1 0x64 DUP11 ADD MSTORE PUSH2 0x996 PUSH2 0x986 DUP6 MLOAD PUSH1 0xC0 DUP5 MSTORE PUSH1 0xC0 DUP5 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST DUP6 DUP14 ADD MLOAD DUP4 DUP3 SUB DUP5 DUP16 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SWAP4 DUP7 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xD78 JUMPI DUP8 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP10 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x84 DUP11 ADD MSTORE DUP11 DUP3 ADD MLOAD AND PUSH1 0xA4 DUP10 ADD MSTORE DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC4 DUP9 ADD MSTORE CALLER PUSH1 0xE4 DUP9 ADD MSTORE PUSH2 0x104 DUP8 ADD MSTORE DUP8 SWAP2 DUP7 SWAP2 DUP3 SWAP1 SUB SWAP1 DUP3 SWAP1 CALLVALUE SWAP1 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xD6E JUMPI DUP6 SWAP5 PUSH2 0xD3B JUMPI JUMPDEST POP DUP4 DUP6 MSTORE PUSH1 0x4 DUP7 MSTORE PUSH1 0x4 CALLDATALOAD DUP2 DUP7 KECCAK256 SSTORE DUP1 MLOAD SWAP2 PUSH2 0xA34 DUP4 PUSH2 0x1EC3 JUMP JUMPDEST DUP5 DUP4 MSTORE DUP7 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP3 DUP5 ADD SWAP1 DUP2 MSTORE DUP3 MLOAD SWAP3 PUSH2 0xA5C DUP10 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 DUP5 MSTORE DUP1 MLOAD SWAP6 PUSH2 0xA73 DUP11 DUP9 PUSH2 0x1EF4 JUMP JUMPDEST DUP9 DUP8 MSTORE DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x4 CALLDATALOAD DUP9 MSTORE PUSH1 0x3 DUP10 MSTORE DUP8 KECCAK256 SWAP4 MLOAD DUP5 SSTORE PUSH1 0x1 DUP5 ADD SWAP2 MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xAA3 SWAP1 DUP4 PUSH2 0x22CB JUMP JUMPDEST MLOAD DUP2 SLOAD PUSH5 0xFFFFFFFF00 NOT AND PUSH1 0xD8 SWAP2 SWAP1 SWAP2 SHR PUSH5 0xFFFFFFFF00 AND OR SWAP1 SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD13 JUMPI PUSH2 0xADE DUP4 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCD0 JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC6A JUMPI PUSH1 0x3 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 DUP4 PUSH2 0xC5F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP7 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST ADD SWAP1 MLOAD SWAP4 DUP5 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC4B JUMPI PUSH2 0xB36 DUP4 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC08 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBA3 JUMPI POP DUP5 SWAP6 DUP3 SWAP4 SWAP5 SWAP6 SWAP3 PUSH2 0xB98 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH32 0xCEFD1532CE99545B2ECDECFE9555DBB5F55800CF824606D71BD0B0E3FB54F52E DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB59 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP7 DUP5 DUP8 MSTORE DUP3 DUP8 KECCAK256 SWAP3 DUP8 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH2 0xBF0 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0xBD7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB6E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xBCA JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xBB4 JUMP JUMPDEST DUP4 DUP7 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xC41 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xC36 JUMPI POP PUSH2 0xB3F JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC29 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB03 JUMP JUMPDEST DUP4 DUP9 MSTORE DUP9 DUP9 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP12 DUP3 DUP3 LT PUSH2 0xCBA JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0x3 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0xCA2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB17 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xC79 JUMP JUMPDEST DUP4 DUP9 MSTORE DUP9 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP11 DUP6 LT PUSH2 0xD09 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xCFE JUMPI POP PUSH2 0xAE7 JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 SWAP4 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD67 JUMPI JUMPDEST PUSH2 0xD53 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD63 JUMPI MLOAD SWAP3 CODESIZE PUSH2 0xA19 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xD49 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 POP PUSH1 0x8 DUP13 MSTORE DUP3 DUP13 KECCAK256 DUP13 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xDC4 JUMPI POP POP SWAP2 PUSH2 0x8CB SWAP3 DUP3 ADD ADD DUP13 SWAP3 PUSH2 0x8B7 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP4 ADD DUP7 ADD MSTORE DUP6 SWAP4 POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xDAC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP7 ADD MSTORE POP DUP14 SWAP4 DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL DUP4 ADD ADD SWAP1 POP PUSH2 0x8CB PUSH2 0x8B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP1 SWAP2 SWAP4 SWAP6 POP PUSH2 0xE3D PUSH1 0x1 SWAP4 SWAP6 PUSH1 0x5F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2129 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP4 SWAP2 SWAP5 SWAP3 PUSH2 0x7DF JUMP JUMPDEST POP POP PUSH1 0x9 DUP10 MSTORE DUP2 DUP10 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP4 DUP3 LT PUSH2 0xE7C JUMPI POP POP PUSH1 0x20 PUSH2 0x74A SWAP3 DUP3 ADD ADD PUSH2 0x737 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD DUP4 SWAP2 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 MSTORE POP PUSH2 0x74A SWAP3 DUP1 ISZERO ISZERO MUL DUP3 ADD PUSH1 0x20 ADD SWAP1 POP PUSH2 0x737 JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP12 ADD ADD MSTORE ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E73756666696369656E7420676173 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x34B73B30B634B21039B2B73232B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964206F6E5265736F6C7665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1A5B9D985B1A590818995D141C9BDB5C1D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1A5B9D985B1A590818995D1259 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0xFF4 PUSH2 0x24A2 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD DUP1 PUSH2 0x12A5 JUMPI JUMPDEST POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x647846A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x1286 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x127B JUMPI DUP5 SWAP4 PUSH2 0x1247 JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0x1212 JUMPI DUP4 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x669E34AD PUSH1 0xE1 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1205 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 PUSH2 0x11D8 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 MSTORE PUSH2 0x10D2 PUSH1 0x64 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x11CD JUMPI DUP3 MLOAD RETURNDATASIZE PUSH2 0x11C4 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x11B2 JUMPI POP DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6D8DE31F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x115B JUMPI JUMPDEST POP DUP1 PUSH32 0x82EFE7218A4D776C25C08AF33123ACEF8998C9049484A73357D0DD8ED91FF9DD SWAP3 PUSH1 0x40 SWAP3 PUSH1 0x5 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11AA JUMPI JUMPDEST DUP2 PUSH2 0x1176 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11A5 JUMPI MLOAD PUSH32 0x82EFE7218A4D776C25C08AF33123ACEF8998C9049484A73357D0DD8ED91FF9DD PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1169 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x11F8 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x11FE JUMPI JUMPDEST PUSH2 0x11F0 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x22E3 JUMP JUMPDEST CODESIZE PUSH2 0x109B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11E6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F2066656520746F6B656E73 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1273 JUMPI JUMPDEST DUP2 PUSH2 0x1263 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11A5 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x106B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x129F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11FE JUMPI PUSH2 0x11F0 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST CODESIZE PUSH2 0x1032 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x12F8 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0xE2D6F51B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1205 JUMPI PUSH2 0x12E8 JUMPI JUMPDEST SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x12F1 SWAP2 PUSH2 0x1EF4 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x12E2 JUMP JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0x1315 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH32 0x16E6F67290546B8DD0E587F4B7F67D4F61932AE17FFD8C60D3509DBC05C175FE PUSH1 0x80 PUSH1 0x4 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x13A2 PUSH2 0x24A2 JUMP JUMPDEST DUP4 PUSH1 0xA SSTORE DUP1 PUSH1 0xB SSTORE DUP2 PUSH1 0xC SSTORE DUP3 PUSH1 0xD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH2 0x475 PUSH2 0x1F9 PUSH2 0x1F15 JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x32D JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH2 0x1464 PUSH2 0x214E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xFD7 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1ABC JUMPI PUSH2 0x1499 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB8 JUMPI PUSH2 0x14B9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD63 JUMPI PUSH2 0x14D9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB4 JUMPI PUSH2 0x14F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x217F JUMP JUMPDEST SWAP2 PUSH2 0x1501 PUSH2 0x24A2 JUMP JUMPDEST DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x1553 PUSH1 0x6 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A49 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x19DA JUMPI DUP8 SWAP2 PUSH2 0x19CF JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x15A2 PUSH1 0x7 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1964 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x18F3 JUMPI DUP8 SWAP2 PUSH2 0x18E8 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2E9 JUMPI PUSH2 0x15F1 PUSH1 0x8 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x187D JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x180E JUMPI DUP8 SWAP2 PUSH2 0x1803 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 SSTORE JUMPDEST DUP2 MLOAD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT PUSH2 0x2E9 JUMPI PUSH2 0x1641 PUSH1 0x9 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1798 JUMPI JUMPDEST POP PUSH1 0x20 SWAP7 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x16FD JUMPI SWAP2 PUSH2 0x16D0 PUSH2 0x16DE SWAP3 DUP5 PUSH2 0x16EC SWAP7 SWAP6 DUP11 SWAP12 PUSH32 0xB189524B4A4D28735ED1E814418B9BDE84EF638C0A2EEA241E624E9A122904F4 SWAP12 SWAP2 PUSH2 0x16F2 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 SSTORE JUMPDEST PUSH2 0x16C2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP7 ADD MLOAD CODESIZE PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x9 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F NOT DUP3 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x1780 JUMPI POP SWAP3 PUSH1 0x1 DUP4 PUSH2 0x16D0 SWAP4 PUSH32 0xB189524B4A4D28735ED1E814418B9BDE84EF638C0A2EEA241E624E9A122904F4 SWAP12 SWAP13 PUSH2 0x16EC SWAP10 SWAP9 SWAP7 PUSH2 0x16DE SWAP9 LT PUSH2 0x1767 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x9 SSTORE PUSH2 0x16A6 JUMP JUMPDEST DUP9 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x175A JUMP JUMPDEST DUP7 DUP12 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP11 DUP12 ADD SWAP11 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x9 DUP8 MSTORE PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP10 LT PUSH2 0x17ED JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x17E2 JUMPI POP PUSH2 0x164A JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x250C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x17BD JUMP JUMPDEST SWAP1 POP DUP3 ADD MLOAD CODESIZE PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x8 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x1865 JUMPI POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x184C JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE PUSH2 0x1625 JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x183F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x182A JUMP JUMPDEST PUSH1 0x8 DUP8 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x18D2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x18C7 JUMPI POP PUSH2 0x15FA JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD CODESIZE PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x7 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x194C JUMPI POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1933 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH2 0x15D6 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP6 PUSH1 0x20 SWAP4 SWAP6 DUP5 SWAP4 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x190F JUMP JUMPDEST PUSH1 0x7 DUP8 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x19B9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x19AE JUMPI POP PUSH2 0x15AB JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP DUP6 ADD MLOAD CODESIZE PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x6 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A31 JUMPI POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1A18 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH2 0x1587 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1A0B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x6 DUP8 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x1A9E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A93 JUMPI POP PUSH2 0x155C JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x1A6E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI DUP1 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AF1 CALLER DUP3 EQ PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD1E4BE07 PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x322 JUMPI DUP4 SWAP2 PUSH2 0x1DEA JUMPI JUMPDEST POP DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1AB8 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xD63 JUMPI PUSH2 0x1B4D SWAP3 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 ADD ADD PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x2379 JUMP JUMPDEST SWAP1 DUP3 DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP3 DUP4 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SWAP2 PUSH2 0x1B90 DUP7 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP6 SLOAD PUSH1 0xD8 SHL AND SWAP5 PUSH2 0x22CB JUMP JUMPDEST ADD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDF9 JUMPI SWAP2 DUP2 DUP8 SWAP4 PUSH2 0x1BB0 DUP11 SWAP5 SLOAD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D93 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1CFD JUMPI SWAP4 PUSH32 0x4CDFD2DABD9BCCE8C3B563AFFCC5FBECB1B95914A0F02DA623A9FCF5F13B0D9B SWAP9 SWAP7 SWAP4 PUSH2 0x1CA0 SWAP7 SWAP4 DUP4 DUP4 SWAP5 PUSH2 0x1C8F SWAP12 SWAP9 DUP6 SWAP2 PUSH2 0x1CF2 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE DUP7 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1C3E PUSH1 0x44 DUP3 ADD DUP13 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x44 DUP2 MSTORE PUSH2 0x1C4D PUSH1 0x64 DUP3 PUSH2 0x1EF4 JUMP JUMPDEST MLOAD SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x1CEA JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1C62 DUP3 PUSH2 0x2164 JUMP JUMPDEST SWAP2 PUSH2 0x1C70 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP12 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1CA6 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP5 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1CDF PUSH32 0xE9C0294B4419B2194CBE1D9F814A03250327281E6E123B1E7288822710D8A8BF SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP7 DUP2 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST SWAP1 POP DUP9 ADD MLOAD CODESIZE PUSH2 0x1C00 JUMP JUMPDEST DUP3 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D75 JUMPI POP SWAP4 PUSH1 0x1 DUP5 DUP9 SWAP6 SWAP5 PUSH32 0x4CDFD2DABD9BCCE8C3B563AFFCC5FBECB1B95914A0F02DA623A9FCF5F13B0D9B SWAP14 SWAP12 SWAP9 SWAP5 PUSH2 0x1C8F SWAP14 SWAP11 SWAP7 PUSH2 0x1CA0 SWAP13 SWAP10 LT PUSH2 0x1D5C JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1C14 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1D50 JUMP JUMPDEST DUP11 DUP4 ADD MLOAD DUP5 SSTORE DUP13 SWAP9 POP DUP14 SWAP8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 SWAP4 DUP5 SWAP2 SWAP4 SWAP6 POP MSTORE PUSH1 0x20 DUP10 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1DE0 JUMPI JUMPDEST SWAP2 DUP10 SWAP6 SWAP4 SWAP2 PUSH1 0x1F DUP13 SWAP7 SWAP5 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DD0 JUMPI POP PUSH2 0x1BB9 JUMP JUMPDEST SWAP5 DUP6 SSTORE DUP10 SWAP6 POP DUP11 SWAP5 PUSH1 0x1 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0x1DFE SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x311 DUP2 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP POP CODESIZE PUSH2 0x1B18 JUMP JUMPDEST POP CALLVALUE PUSH2 0x32D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32D JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x475 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH2 0x16DE PUSH2 0x1E4D PUSH1 0x3 PUSH2 0x1E46 PUSH1 0x2 DUP6 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP4 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH2 0x1E66 PUSH1 0x20 DUP8 ADD PUSH1 0xFF DUP4 AND PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0xD8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE DUP6 ADD SWAP1 PUSH2 0x2129 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1EB9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1EA3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EDE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EDE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x7 SLOAD SWAP2 PUSH2 0x1F29 DUP4 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1F9D JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F4F JUMPI JUMPDEST PUSH2 0x1F4D SWAP3 POP SUB DUP4 PUSH2 0x1EF4 JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP2 DUP4 LT PUSH2 0x1F81 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F4D SWAP3 DUP3 ADD ADD PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x20 SWAP3 POP PUSH2 0x1F4D SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x6 SLOAD SWAP2 PUSH2 0x1FD0 DUP4 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1F9D JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FF3 JUMPI PUSH2 0x1F4D SWAP3 POP SUB DUP4 PUSH2 0x1EF4 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x252C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP2 DUP4 LT PUSH2 0x2025 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F4D SWAP3 DUP3 ADD ADD PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x200D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2055 DUP5 PUSH2 0x1E89 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x20C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x207A JUMPI JUMPDEST POP PUSH2 0x1F4D SWAP3 POP SUB DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x20A5 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F4D SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x206D JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x208C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1F4D SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x206D JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x20F0 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2119 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2109 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2142 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11A5 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1EDE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x11A5 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2196 DUP3 PUSH2 0x2164 JUMP JUMPDEST SWAP3 PUSH2 0x21A4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x11A5 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x21CD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792044746E2063616E2063616C6C20746869732066756E6374696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x221F DUP2 PUSH2 0x2164 JUMP JUMPDEST SWAP2 PUSH2 0x222D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 SWAP5 DUP3 DUP5 MSTORE DUP3 DUP3 ADD GT PUSH2 0x11A5 JUMPI PUSH1 0x20 PUSH2 0x1F4D SWAP4 ADD SWAP1 PUSH2 0x2106 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x11A5 JUMPI DUP2 MLOAD PUSH2 0x2261 SWAP3 PUSH1 0x20 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x11A5 JUMPI DUP2 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x11A5 JUMPI SWAP3 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A5 JUMPI DUP2 PUSH2 0x229B SWAP2 DUP6 ADD PUSH2 0x2247 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x11A5 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x11A5 JUMPI DUP2 MLOAD PUSH2 0x2261 SWAP3 PUSH1 0x20 ADD PUSH2 0x2212 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x20F0 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x11A5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11A5 JUMPI SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x230F JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x230F JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x230F JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2363 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH32 0x6273151F959616268004B58DBB21E5C851B7B8D04498B4AABEE12291D22FC034 DUP2 EQ DUP1 ISZERO PUSH2 0x2479 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2450 JUMPI JUMPDEST PUSH2 0x244A JUMPI PUSH32 0xBA9154E0BAA69C78E0CA563B867DF81BAE9D177C4EA1452C35C84386A70F0F7A DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2420 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x23F6 JUMPI JUMPDEST POP PUSH2 0x23F1 JUMPI PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH32 0xA357FCB91396B2AFA7AB60192E270C625A2EB250B8F839DDB179F207B40459B4 SWAP2 POP EQ CODESIZE PUSH2 0x23E7 JUMP JUMPDEST PUSH32 0xA2DAD57CC42B2B0635F411233812E479F7896335AE3219AC4EF034F5A34C3F0B DUP2 EQ SWAP2 POP PUSH2 0x23E0 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH32 0x7749ED7587E6DBF171CE6BE50BEA67236732D7CCFD51E327BC28B612EC06FAA7 DUP2 EQ PUSH2 0x23B1 JUMP JUMPDEST POP PUSH32 0x23025EBDC5CDFC5BDFE2D2C2A52D7E7F374F5C135D6D47E3C935C86567E86A53 DUP2 EQ PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x24B6 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xA6 PUSH13 0xC928B5EDB82AF9BD4992295415 GAS 0xB7 0xB0 SWAP5 0x26 SWAP5 0xBE LOG4 0xCE PREVRANDAO PUSH7 0x1D9A8736C688F3 0xF7 0xA9 INVALID CALLDATASIZE 0x4F 0xAA 0xB9 EXTCODESIZE 0x21 PUSH14 0xA50A3214154F22A0A2B415B23A84 0xC8 AND SWAP15 DUP12 PUSH4 0x6EE36E15 BLOCKHASH OR SHL PUSH13 0xC960B71A7020D9F60077F6AF9 BALANCE 0xA8 0xBB CREATE2 SWAP1 0xDA MUL 0x23 0xDA 0xCF PUSH22 0xC7AFF652222313E28459528D920B65115C16C04F3EFC DUP3 0xAA 0xED 0xC9 PUSH28 0xE59F3F377C0D3FA264697066735822122021BD7399C88D6C43537956 0xBF 0xD5 CALLDATALOAD 0xD6 0xEA LOG2 SWAP15 0xC2 CALLER SMOD PUSH27 0xA20BE66B4B3ABDD64E0164736F6C634300081C0033000000000000 ",
              "sourceMap": "913:8140:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;8284:28;;913:8140;;-1:-1:-1;;;;;913:8140:11;261:69:2;269:10;:25;;261:69;:::i;:::-;913:8140:11;;;;;;;;;8284:28;;;913:8140;8284:28;;913:8140;8284:28;;;;;;;913:8140;8284:28;;;913:8140;;;;;;;;;;;;;;;;8389:4;913:8140;;8389:4;913:8140;;;8410:9;913:8140;;-1:-1:-1;;;;;913:8140:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8445:47;913:8140;;;;;;;;;;;;;;;;;8389:4;913:8140;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8445:47;;;913:8140;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;;;;8445:47;913:8140;;;;;;;;;;;;;;;;;;;;;;;8389:4;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;;;913:8140:11;;;;;8284:28;913:8140;;8284:28;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;913:8140;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;:::i;:::-;1500:62:3;;:::i;:::-;-1:-1:-1;;;;;913:8140:11;2627:22:3;;2623:91;;3004:6;913:8140:11;;-1:-1:-1;;;;;;913:8140:11;;;;;;;-1:-1:-1;;;;;913:8140:11;3052:40:3;;;;913:8140:11;;2623:91:3;-1:-1:-1;;;2672:31:3;;913:8140:11;;;;;2672:31:3;;913:8140:11;;;;;;;;;;;;;;1832:52;913:8140;;;;;;;;;;;;;;;;;;;;1278:24;913:8140;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:23;913:8140;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1647:23;913:8140;;-1:-1:-1;;;;;;;;;;;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;-1:-1:-1;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;-1:-1:-1;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;1728:22;913:8140;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:22;913:8140;;-1:-1:-1;;;;;;;;;;;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;-1:-1:-1;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:57;913:8140;;;;;;;;;;;;;;;;;;;;;1435:24;913:8140;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;913:8140:11;;-1:-1:-1;;913:8140:11;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;913:8140:11;;;;;;;;5113:9;913:8140;;;;5158:27;913:8140;;-1:-1:-1;;;;;;913:8140:11;;5225:22;913:8140;;5301:9;913:8140;-1:-1:-1;;;;;913:8140:11;5287:10;:23;913:8140;;5360:18;913:8140;5347:9;;;:31;913:8140;;;;;;;;;;;:::i;:::-;5510:1;913:8140;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;:::i;:::-;5522:31;;;:::i;:::-;;;;;:::i;:::-;;5563:27;;;:::i;:::-;;;;;:::i;:::-;;913:8140;;:::i;:::-;5600:31;;;:::i;:::-;;;;;:::i;:::-;;913:8140;;;;;;;:::i;:::-;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;5762:26;;913:8140;;;5779:8;913:8140;;;;;:::i;:::-;;;;;;;;;;;;;;;;5762:26;;;;913:8140;;5762:26;;;;;;:::i;:::-;913:8140;5752:37;;5741:48;;;:::i;:::-;913:8140;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;803:229:0;;;913:8140:11;;803:229:0;;;913:8140:11;963:1:0;913:8140:11;803:229:0;;913:8140:11;803:229:0;;;;913:8140:11;;;;;;;;6000:24;;;;;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6000:24;;;;;;;;913:8140;;6000:24;;;;;;:::i;:::-;6273:13;913:8140;6315:13;913:8140;6358:14;913:8140;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5962:421;;;913:8140;;5962:421;;;913:8140;;5962:421;;913:8140;5962:421;;;913:8140;;5962:421;;913:8140;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;-1:-1:-1;;;6422:171:11;;;913:8140;6577:4;6422:171;;;913:8140;;;963:1:0;913:8140:11;6422:171;;913:8140;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6712:27;;;;;913:8140;;6712:27;;;;;;:::i;:::-;913:8140;;;6712:27;;6702:38;913:8140;;;;;;;;;;;;;;;;;;;6797:216;;913:8140;6797:216;;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;803:229:0;;;913:8140:11;;;;-1:-1:-1;;913:8140:11;;;;;;:::i;:::-;803:229:0;913:8140:11;803:229:0;;;913:8140:11;;;;;;;;803:229:0;;913:8140:11;;;;;;803:229:0;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5962:421;;;913:8140;;;;;;;;;:::i;:::-;5962:421;;;;913:8140;5301:9;913:8140;;;;;;;;;;5962:421;;;913:8140;;;;;5962:421;;;913:8140;;;;;;5962:421;;;913:8140;;;;;;-1:-1:-1;;;;;;913:8140:11;;;;;;;6422:171;;;913:8140;;;;;;6422:171;;913:8140;-1:-1:-1;;;;;913:8140:11;;;;;5287:10;913:8140;;;;;;;;;;;;6797:216;;;;913:8140;;5347:9;;6797:216;;;;;;;;;;;913:8140;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7107:175;;;913:8140;;;-1:-1:-1;;;;;;913:8140:11;;;7107:175;;;913:8140;;;;;;;7107:175;913:8140;;:::i;:::-;;;;;7107:175;;913:8140;;;;;;;;;;:::i;:::-;;;;7107:175;;913:8140;;;;;;;5510:1;913:8140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;5301:9;913:8140;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5510:1;;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5510:1;913:8140;;;;;;;;;;7298:34;;;;913:8140;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5510:1;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;;;;5510:1;913:8140;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;6797:216;;;;;;;;;;;;;;;;;:::i;:::-;;;913:8140;;;;;6797:216;;;;913:8140;;;;6797:216;;;;;;913:8140;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;963:1:0;913:8140:11;;;;;;;;;;;;;;;;6712:27;913:8140;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;-1:-1:-1;;913:8140:11;6712:27;;;913:8140;-1:-1:-1;913:8140:11;;;;;;;;;;;;-1:-1:-1;6712:27:11;913:8140;;;-1:-1:-1;;;913:8140:11;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;5779:8:11;913:8140;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;5762:26;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;-1:-1:-1;5762:26:11;;913:8140;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;1500:62:3;;:::i;:::-;913:8140:11;4127:9;913:8140;4127:14;4123:75;;913:8140;-1:-1:-1;;913:8140:11;;;;-1:-1:-1;;;4228:13:11;;-1:-1:-1;;;;;913:8140:11;;;;4228:13;913:8140;;;;4228:13;;;;;;;;;;;913:8140;-1:-1:-1;913:8140:11;;-1:-1:-1;;;4310:30:11;;4334:4;913:8140;4310:30;;913:8140;;-1:-1:-1;;;;;913:8140:11;;;;;4228:13;913:8140;4310:30;913:8140;;4310:30;;;;;;;;;;;913:8140;4358:10;;;913:8140;;;4228:13;913:8140;;;;;;;;;;;4416:14;;;;;;;;4228:13;4416:14;;;;;913:8140;-1:-1:-1;913:8140:11;;-1:-1:-1;;;1328:43:8;;;;;;-1:-1:-1;;;;;913:8140:11;;;4310:30;1328:43:8;;913:8140:11;;;;;;;;1328:43:8;;;;913:8140:11;1328:43:8;:::i;:::-;8507:421;;;;;;;;;;;;8942:15;;8960:26;;;:31;8942:68;8938:146;;-1:-1:-1;913:8140:11;;;;-1:-1:-1;;;4461:21:11;;913:8140;4228:13;;913:8140;;;;;;;;-1:-1:-1;;;;;913:8140:11;4461:21;;;;;;;;;;;8942:68:8;913:8140:11;;4497:35;913:8140;;;4127:9;913:8140;;;;;;4228:13;913:8140;;;4497:35;913:8140;;4461:21;;;4228:13;4461:21;;4228:13;4461:21;;;;;;913:8140;4461:21;;;:::i;:::-;;;913:8140;;;;;4497:35;4461:21;;913:8140;-1:-1:-1;913:8140:11;;4461:21;;;-1:-1:-1;4461:21:11;;8938:146:8;-1:-1:-1;;;9033:40:8;;913:8140:11;;4310:30;9033:40:8;;8942:68;9009:1;8994:16;;8942:68;;8507:421;913:8140:11;8507:421:8;;;;;;;;4416:14:11;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;913:8140;;;;;;;;;;;;;;-1:-1:-1;;;913:8140:11;;4228:13;913:8140;;;;;4310:30;913:8140;;;-1:-1:-1;;;913:8140:11;;;;;;;4310:30;;;;4228:13;4310:30;;4228:13;4310:30;;;;;;913:8140;4310:30;;;:::i;:::-;;;913:8140;;;;;4310:30;;;;;;;-1:-1:-1;4310:30:11;;;913:8140;;;;;;;;;4228:13;;;;;;;;;;;;;;:::i;:::-;;;;4123:75;913:8140;;-1:-1:-1;;;;;913:8140:11;;4157:30;;;;;913:8140;;4157:30;913:8140;;;;;;;;;;;;4157:30;;913:8140;4157:30;;913:8140;4157:30;;;;;;;;4123:75;;;;4157:30;;;;:::i;:::-;;;;;;913:8140;;;;;;;;;;;;;;;;1500:62:3;;:::i;:::-;3004:6;913:8140:11;;-1:-1:-1;;;;;;913:8140:11;;;;;;;-1:-1:-1;;;;;913:8140:11;3052:40:3;913:8140:11;;3052:40:3;913:8140:11;;;;;;;;;-1:-1:-1;;913:8140:11;;;;3740:81;913:8140;;;;;;;;;1500:62:3;;:::i;:::-;913:8140:11;3563:30;913:8140;;3603:30;913:8140;;3643:32;913:8140;;3685:40;913:8140;;;;;;;;;;;;;;;;;;3740:81;913:8140;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;2077:43;913:8140;;;;;;;;;;;;;;;;;;;;;1915:52;913:8140;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;:::i;:::-;1500:62:3;;;:::i;:::-;913:8140:11;;;;;;;;;;;;;;;;;;;3147:22;913:8140;;;3147:22;913:8140;;;-1:-1:-1;;;;;913:8140:11;;;;;3179:30;913:8140;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3179:30;913:8140;;;;-1:-1:-1;;;;;913:8140:11;;;;;3219:30;913:8140;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:30;913:8140;;;;-1:-1:-1;;;;;913:8140:11;;;;;3259:22;913:8140;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:22;913:8140;;;;;-1:-1:-1;;;;;913:8140:11;;;;;3291:20;913:8140;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:76;913:8140;;;;;;;;;;;;;;;;;;;3291:20;913:8140;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;3326:76;;;913:8140;;;;;;;;;;;;3291:20;913:8140;;-1:-1:-1;;;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;3326:76;913:8140;;;;;;;;;;;;;;;;;3291:20;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3291:20;913:8140;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;913:8140:11;;;;;;;;;;;;3259:22;913:8140;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;3259:22;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:22;913:8140;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;913:8140:11;;;;;;;;;;;;3219:30;913:8140;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:30;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:30;913:8140;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;913:8140:11;;;;;;;;;;;;3179:30;913:8140;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;3179:30;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3179:30;913:8140;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;7515:28;;913:8140;;-1:-1:-1;;;;;913:8140:11;261:69:2;269:10;:25;;261:69;:::i;:::-;913:8140:11;;;;;;;;;7515:28;;;913:8140;7515:28;;913:8140;7515:28;;;;;;;913:8140;7515:28;;;913:8140;;;;7645:30;;913:8140;;;;;;;;;7645:30;;913:8140;;-1:-1:-1;;;;;913:8140:11;;;;;7645:30;913:8140;7645:30;;;913:8140;;;;:::i;:::-;7700:18;;;:::i;:::-;913:8140;;;;;;;;;;;;;;;7794:4;913:8140;;;;;7880:13;913:8140;7834:11;;913:8140;7855:15;913:8140;;;;;;;;;7855:15;;:::i;:::-;7880:13;913:8140;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8136:28;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;7794:4;913:8140;;;;;;;;;;;;;7880:13;913:8140;;;;;;;7970:45;;;;;;7515:28;7970:45;;913:8140;;;;;;;:::i;:::-;;7970:45;;;;;;:::i;:::-;7946:70;;;;913:8140;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;8030:8;8026:96;;913:8140;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;8136:28;;;913:8140;;8026:96;913:8140;8059:52;913:8140;;;;;;;;;;;;;;:::i;:::-;8059:52;;;8026:96;;;;;913:8140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;;;;;;;8136:28;913:8140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7794:4;913:8140;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;-1:-1:-1;913:8140:11;;;;7515:28;;;;;;;;;;;;;:::i;:::-;;;;;;;913:8140;;;;;;;-1:-1:-1;;913:8140:11;;;;;;;;;;1308:35;913:8140;;;;;;;1308:35;;913:8140;1308:35;913:8140;1308:35;;;;;;;:::i;:::-;;;;:::i;:::-;913:8140;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;913:8140:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;:::o;:::-;;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;:::o;:::-;;;;-1:-1:-1;913:8140:11;1570:27;913:8140;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;1570:27:11;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;5540:13;913:8140;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5540:13:11;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;;;;;;;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;913:8140:11;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;913:8140:11;;;;;-1:-1:-1;913:8140:11;;;;;;;;;-1:-1:-1;;913:8140:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;913:8140:11;;;;:::o;:::-;;;;-1:-1:-1;;;;;913:8140:11;;;;;;:::o;:::-;-1:-1:-1;;;;;913:8140:11;;;;;;-1:-1:-1;;913:8140:11;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;913:8140:11;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;5576:1;913:8140;;;;;;;:::o;:::-;;;5301:9;913:8140;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;913:8140:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;8624:427;913:8140;;;;;8718:19;8769:17;8764:22;;:49;;;;8624:427;8764:76;;;;8624:427;8747:123;;8903:18;8898:23;;:50;;;;;8624:427;8898:77;;;;8624:427;8881:125;;;9024:20;8624:427;:::o;8881:125::-;8993:13;8986:20;:::o;8898:77::-;8957:18;8952:23;;;8898:77;;;:50;8930:18;8925:23;;;-1:-1:-1;8898:50:11;;8747:123;8851:19;8858:12;8851:19;:::o;8764:76::-;8818:22;8823:17;8818:22;;8764:76;;:49;8791:22;8796:17;8791:22;;8764:49;;1796:162:3;913:8140:11;;-1:-1:-1;;;;;913:8140:11;735:10:9;1855:23:3;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:3;735:10:9;1901:40:3;913:8140:11;;-1:-1:-1;1901:40:3"
            },
            "methodIdentifiers": {
              "ai()": "68be1b1e",
              "betMarket()": "cfe152c0",
              "bets(uint256)": "22af00fa",
              "callbackResolve(bytes32)": "288d29dc",
              "callbackResolveError(bytes32)": "fa2b9443",
              "configure(address,address,string,string,string,string)": "30a9056f",
              "feePerByteReq()": "daf81269",
              "feePerByteRes()": "31a9b104",
              "modelName()": "a81675c7",
              "nodeName()": "a6edb342",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "requestToBet(bytes32)": "c8b894a3",
              "resolutionGasLimit()": "32165346",
              "resolve(uint256,string,bytes4)": "7bf13d4d",
              "restartSession()": "795769e5",
              "sessionId()": "9648c9f4",
              "setFees(uint256,uint256,uint256,uint256)": "6fcba377",
              "systemPrompt1()": "84cc5c26",
              "systemPrompt2()": "6a924cbd",
              "totalFeePerRes()": "9d648d67",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"BetResolutionCallbackFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"BetResolutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IBetResolver.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rawResult\",\"type\":\"string\"}],\"name\":\"BetResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dtnAi\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"systemPrompt1\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"systemPrompt2\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modelName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nodeName\",\"type\":\"string\"}],\"name\":\"ConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePerByteReq\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePerByteRes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFeePerRes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"resolutionGasLimit\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"ResolveRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundedAmount\",\"type\":\"uint256\"}],\"name\":\"SessionRestarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ai\",\"outputs\":[{\"internalType\":\"contract IDtnAi\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IBetResolver.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"onResolve\",\"type\":\"bytes4\"},{\"internalType\":\"string\",\"name\":\"aiRawResult\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"aiError\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"}],\"name\":\"callbackResolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"}],\"name\":\"callbackResolveError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_betMarket\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dtnAi\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_systemPrompt1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_systemPrompt2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_modelName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nodeName\",\"type\":\"string\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePerByteReq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePerByteRes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modelName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nodeName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requestToBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolutionGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"betPrompt\",\"type\":\"string\"},{\"internalType\":\"bytes4\",\"name\":\"onResolve\",\"type\":\"bytes4\"}],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sessionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePerByteReq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feePerByteRes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalFeePerRes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_resolutionGasLimit\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemPrompt1\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemPrompt2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeePerRes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"- Uses OpenZeppelin Ownable, ReentrancyGuard, SafeERC20.  - Uses ONLY DtnDefaults.defaultCustomNodesValidatedAny(nodes) for routing.  - Exposes restartSession() that forwards this contract's fee-token balance to DtnAI feeTarget and opens a session.  - Resolution result is stored on-chain; does not handle escrow/payouts.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolve(uint256,string,bytes4)\":{\"details\":\"Send ETH with {value: ...} if the DtnAI deployment requires it for callback gas.\",\"params\":{\"betId\":\"The bet to resolve.\",\"betPrompt\":\"The prompt for the bet.\",\"onResolve\":\"The callback function to call when the bet is resolved. The function should have the following signature:   onResolve(uint256 betId, Outcome outcome)\"}},\"restartSession()\":{\"details\":\"Send the fee token to this contract first; this function forwards the full balance to `feeTarget()`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BetResolver (custom-nodes-only routing)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"resolve(uint256,string,bytes4)\":{\"notice\":\"Triggers AI resolution for a bet that has passed its close time.\"},\"restartSession()\":{\"notice\":\"Starts (or restarts) a DtnAI user session using this contract\\u2019s entire fee-token balance.\"}},\"notice\":\"Resolves bets via DtnAI. The target model must return exactly \\\"true\\\" | \\\"false\\\" | \\\"inconclusive\\\".\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BetResolver.sol\":\"BetResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@deeptrust/contracts/dtn-defaults.sol\":{\"keccak256\":\"0x5c7fc809f8dc9db7ab07fe91ded465db1a91c2894704d5ec46c1ec18899d470d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://583c828baa407f3e8e76fa27f31b7661dff056342b0aab18c7fbb11c5d62eb9f\",\"dweb:/ipfs/QmU4hRGUauw299P3cEH8sQL3WCuJ5kNjXwMByd8t5Djkch\"]},\"@deeptrust/contracts/idtn-ai.sol\":{\"keccak256\":\"0x30d923dda31f1f160a0af143f383469f263c23b047bf4217168a2ed8b529dc88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://328015e986de0022fdb56c33891ee14d8e9cc13be43fe92cd4b4d2b56239c446\",\"dweb:/ipfs/QmP5CxohVDd8YCeQ5jvvfamgfcMyQxaHhLhfTqHQuDGtj7\"]},\"@deeptrust/contracts/with-dtn-ai.sol\":{\"keccak256\":\"0xa525462bced20557758c1b84fbcc730ee35a1075b13c6258c7931fcc3cd3337e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae28a7e7cdb6c56b405f3e01e20273d5c76caac25f2f3399c38ec7a9ba253f5\",\"dweb:/ipfs/QmZJtHfpupE8FvfaEm7HUEjoSEi2z77hJK7brWeMokUNdt\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/BetResolver.sol\":{\"keccak256\":\"0x3f550982f19e65e090082894dacc107e82a11bcff9553dc97d41ef44716710ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd141490f9cc05aa7d5d1c5200b973c869091b42eb6be1d6423fe5e0d34f3b\",\"dweb:/ipfs/QmNPxzjY6fKGNM2pjXsnPpicY9LqCReV3V4F3SrwsbzfBW\"]},\"contracts/IBetResolver.sol\":{\"keccak256\":\"0xd290bd7cb3cb5dc30e041d07b97b2e5c81d3549a9a5f471d648f81418ee8d090\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54d7815c325449b86e0777bb8f8351ce1ece2f05bc9af0120dc4f5cf93bc66d9\",\"dweb:/ipfs/QmUNfSj3absKmHtNhXYrdjVkMuUPTkpW4ziHKhVAawXh2a\"]}},\"version\":1}"
        }
      },
      "contracts/IBetResolver.sol": {
        "IBetResolver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "betId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "betPrompt",
                  "type": "string"
                },
                {
                  "internalType": "bytes4",
                  "name": "onResolve",
                  "type": "bytes4"
                }
              ],
              "name": "resolve",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "resolve(uint256,string,bytes4)": "7bf13d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"betPrompt\",\"type\":\"string\"},{\"internalType\":\"bytes4\",\"name\":\"onResolve\",\"type\":\"bytes4\"}],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"resolve(uint256,string,bytes4)\":{\"params\":{\"betPrompt\":\"The prompt for the bet.\",\"onResolve\":\"The callback function to call when the bet is resolved. The function should have the following signature:   onResolve(uint256 betId, Outcome outcome)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"resolve(uint256,string,bytes4)\":{\"notice\":\"Requests to resolve a bet.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBetResolver.sol\":\"IBetResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IBetResolver.sol\":{\"keccak256\":\"0xd290bd7cb3cb5dc30e041d07b97b2e5c81d3549a9a5f471d648f81418ee8d090\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54d7815c325449b86e0777bb8f8351ce1ece2f05bc9af0120dc4f5cf93bc66d9\",\"dweb:/ipfs/QmUNfSj3absKmHtNhXYrdjVkMuUPTkpW4ziHKhVAawXh2a\"]}},\"version\":1}"
        }
      }
    }
  }
}